diff -Naurw ./drivers/media/i2c/ap1302.c ../kernel-source/drivers/media/i2c/ap1302.c
--- ./drivers/media/i2c/ap1302.c	2020-08-06 18:55:11.765458465 +0200
+++ ../kernel-source/drivers/media/i2c/ap1302.c	2020-08-06 18:55:48.080002074 +0200
@@ -71,6 +71,9 @@
 
 #define AP1302_REG_PREVIEW_MAX_FPS 		0x2020
 
+#define AP1302_REG_AE_CTRL				0x5002
+#define AP1302_REG_AE_MANUAL_EXP_TIME	0x500c
+
 #define AP1302_REG_BOOTDATA_STAGE       0x6002
 #define AP1302_REG_SENSOR_SELECT		0x600c
 #define AP1302_REG_SYS_START            0x601a
@@ -171,6 +174,8 @@
 	struct v4l2_ctrl *vflip;
 	int vflip_value;
 	struct v4l2_ctrl *link_freq;
+	struct v4l2_ctrl *auto_exp;
+	struct v4l2_ctrl *exposure;
 };
 
 struct ap1302_dev {
@@ -431,6 +436,20 @@
 	return ap1302_write_buf( sensor, buf, sizeof( buf ) );
 }
 
+static int ap1302_write_reg32(struct ap1302_dev *sensor, u16 reg, u32 val)
+{
+	u8 buf[ 6 ];
+
+	buf[ 0 ] = reg >> 8;
+	buf[ 1 ] = reg & 0xff;
+	buf[ 2 ] = val >> 24;
+	buf[ 3 ] = ( val >> 16 ) & 0xff;
+	buf[ 4 ] = ( val >> 8 ) & 0xff;
+	buf[ 5 ] = val & 0xff;
+
+	return ap1302_write_buf( sensor, buf, sizeof( buf ) );
+}
+
 static int ap1302_mod_reg(struct ap1302_dev *sensor, u16 reg,
 			  u8 mask, u8 val)
 {
@@ -618,6 +637,38 @@
 	return ret;
 }
 
+static int ap1302_set_ctrl_auto_exp(struct ap1302_dev *sensor, int value)
+{
+	int ret;
+	u16 reg_val;
+
+	printk( KERN_ALERT "**** %s %i   value: %i\n", __func__, (int )__LINE__, value );
+
+	if ( value == V4L2_EXPOSURE_AUTO )
+		reg_val = 0x0c;
+	else
+		reg_val = 0x09;
+
+	ret = ap1302_mod_reg16( sensor, AP1302_REG_AE_CTRL, 0x0f, reg_val );
+	return ret;
+}
+
+static int ap1302_set_ctrl_exp(struct ap1302_dev *sensor, int value)
+{
+	int ret;
+	u16 reg_val;
+
+	printk( KERN_ALERT "**** %s %i   value: %i\n", __func__, (int )__LINE__, value );
+
+	if ( value == V4L2_EXPOSURE_AUTO )
+		reg_val = 0x0c;
+	else
+		reg_val = 0x09;
+
+	ret = ap1302_write_reg32( sensor, AP1302_REG_AE_MANUAL_EXP_TIME, value );
+	return ret;
+}
+
 static int ap1302_enum_frame_size(struct v4l2_subdev *sd,
 				  struct v4l2_subdev_pad_config *cfg,
 				  struct v4l2_subdev_frame_size_enum *fse)
@@ -744,6 +795,14 @@
 			ret = ap1302_set_ctrl_vflip(sensor, ctrl->val);
 			break;
 
+		case V4L2_CID_EXPOSURE_AUTO:
+			ret = ap1302_set_ctrl_auto_exp(sensor, ctrl->val);
+			break;
+
+		case V4L2_CID_EXPOSURE:
+			ret = ap1302_set_ctrl_exp(sensor, ctrl->val);
+			break;
+
 		default:
 			ret = -EINVAL;
 			break;
@@ -788,6 +847,13 @@
 	if (ctrls->link_freq)
 		ctrls->link_freq->flags |= V4L2_CTRL_FLAG_READ_ONLY;
 
+	/* Auto/manual exposure */
+	ctrls->auto_exp = v4l2_ctrl_new_std_menu(hdl, ops, V4L2_CID_EXPOSURE_AUTO,
+											 V4L2_EXPOSURE_MANUAL, 0,
+											 V4L2_EXPOSURE_AUTO);
+	ctrls->exposure = v4l2_ctrl_new_std(hdl, ops, V4L2_CID_EXPOSURE,
+					    0, 100000, 1, 10000);
+
 	if (hdl->error) {
 		ret = hdl->error;
 		goto free_ctrls;
