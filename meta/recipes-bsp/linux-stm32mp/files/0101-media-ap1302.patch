diff -Naurw ./arch/arm/boot/dts/stm32mp157a-av96.dts ../kernel-source/arch/arm/boot/dts/stm32mp157a-av96.dts
--- ./arch/arm/boot/dts/stm32mp157a-av96.dts	2020-02-13 14:02:44.975567352 +0100
+++ ../kernel-source/arch/arm/boot/dts/stm32mp157a-av96.dts	2020-02-14 17:09:02.499147533 +0100
@@ -478,6 +478,7 @@
 	/delete-property/dmas;
 	/delete-property/dma-names;
 
+#if 0
 	ov5640: camera@3c {
 		compatible = "ovti,ov5640";
 		reg = <0x3c>;
@@ -504,6 +505,35 @@
 			};
 		};
 	};
+#endif
+
+	ap1302: camera@3d {
+		compatible = "on,ap1302";
+		reg = <0x3d>;
+		pinctrl-names = "default", "sleep";
+		pinctrl-0 = <&rcc_pins_a>;
+		pinctrl-1 = <&rcc_sleep_pins_a>;
+		clocks = <&rcc CK_MCO1>;
+		clock-names = "xclk";
+		assigned-clocks = <&rcc CK_MCO1>;
+		assigned-clock-parents = <&rcc CK_HSE>;
+		assigned-clock-rates = <24000000>;
+		DOVDD-supply = <&v1v8>;
+		reset-gpios = <&gpioc 3 GPIO_ACTIVE_LOW>;
+		powerdown-gpios = <&gpiod 14 GPIO_ACTIVE_HIGH>;
+		i2csel-gpios = <&gpiof 12 GPIO_ACTIVE_HIGH>;
+		rotation = <180>;
+		status = "okay";
+
+		port {
+			ap1302_0: endpoint {
+				remote-endpoint = <&mipid02_0>;
+				clock-lanes = <0>;
+				data-lanes = <1 2>;
+				pclk-max-frequency = <77000000>;
+			};
+		};
+	};
 
 #if 0
 	wm8994: wm8994@1b {
@@ -620,7 +650,7 @@
 
 				mipid02_0: endpoint {
 					data-lanes = <1 2>;
-					remote-endpoint = <&ov5640_0>;
+					remote-endpoint = <&ap1302_0>;
 				};
 			};
 			port@2 {
diff -Naurw ./drivers/media/i2c/ap1302.c ../kernel-source/drivers/media/i2c/ap1302.c
--- ./drivers/media/i2c/ap1302.c	1970-01-01 01:00:00.000000000 +0100
+++ ../kernel-source/drivers/media/i2c/ap1302.c	2020-02-14 17:31:55.475784672 +0100
@@ -0,0 +1,3148 @@
+/*
+ * Copyright (C) 2011-2013 Freescale Semiconductor, Inc. All Rights Reserved.
+ * Copyright (C) 2014-2017 Mentor Graphics Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ */
+
+#include <linux/clk.h>
+#include <linux/clk-provider.h>
+#include <linux/clkdev.h>
+#include <linux/ctype.h>
+#include <linux/delay.h>
+#include <linux/device.h>
+#include <linux/gpio/consumer.h>
+#include <linux/i2c.h>
+#include <linux/init.h>
+#include <linux/module.h>
+#include <linux/of_device.h>
+#include <linux/regulator/consumer.h>
+#include <linux/sched/signal.h>
+#include <linux/slab.h>
+#include <linux/types.h>
+#include <media/v4l2-async.h>
+#include <media/v4l2-ctrls.h>
+#include <media/v4l2-device.h>
+#include <media/v4l2-event.h>
+#include <media/v4l2-fwnode.h>
+#include <media/v4l2-subdev.h>
+
+#include <ap1302_fw.h>
+
+/* min/typical/max system clock (xclk) frequencies */
+#define AP1302_XCLK_MIN  6000000
+#define AP1302_XCLK_MAX 54000000
+
+#define AP1302_DEFAULT_SLAVE_ID 0x3d
+
+#define AP1302_REG_CHIP_ID		0x0000
+#define AP1302_REG_MFR    		0x0004
+
+#define AP1302_CHIP_VERSION     0x0265
+#define AP1302_CHIP_MFR         0x0006
+
+#if 0
+#define AP1302_REG_SYS_RESET02		0x3002
+#define AP1302_REG_SYS_CLOCK_ENABLE02	0x3006
+#define AP1302_REG_SYS_CTRL0		0x3008
+#define AP1302_REG_CHIP_ID		0x300a
+#define AP1302_REG_IO_MIPI_CTRL00	0x300e
+#define AP1302_REG_PAD_OUTPUT_ENABLE01	0x3017
+#define AP1302_REG_PAD_OUTPUT_ENABLE02	0x3018
+#define AP1302_REG_PAD_OUTPUT00		0x3019
+#define AP1302_REG_SYSTEM_CONTROL1	0x302e
+#define AP1302_REG_SC_PLL_CTRL0		0x3034
+#define AP1302_REG_SC_PLL_CTRL1		0x3035
+#define AP1302_REG_SC_PLL_CTRL2		0x3036
+#define AP1302_REG_SC_PLL_CTRL3		0x3037
+#define AP1302_REG_SLAVE_ID		0x3100
+#define AP1302_REG_SCCB_SYS_CTRL1	0x3103
+#define AP1302_REG_SYS_ROOT_DIVIDER	0x3108
+#define AP1302_REG_AWB_R_GAIN		0x3400
+#define AP1302_REG_AWB_G_GAIN		0x3402
+#define AP1302_REG_AWB_B_GAIN		0x3404
+#define AP1302_REG_AWB_MANUAL_CTRL	0x3406
+#define AP1302_REG_AEC_PK_EXPOSURE_HI	0x3500
+#define AP1302_REG_AEC_PK_EXPOSURE_MED	0x3501
+#define AP1302_REG_AEC_PK_EXPOSURE_LO	0x3502
+#define AP1302_REG_AEC_PK_MANUAL	0x3503
+#define AP1302_REG_AEC_PK_REAL_GAIN	0x350a
+#define AP1302_REG_AEC_PK_VTS		0x350c
+#define AP1302_REG_TIMING_DVPHO		0x3808
+#define AP1302_REG_TIMING_DVPVO		0x380a
+#define AP1302_REG_TIMING_HTS		0x380c
+#define AP1302_REG_TIMING_VTS		0x380e
+#define AP1302_REG_TIMING_TC_REG20	0x3820
+#define AP1302_REG_TIMING_TC_REG21	0x3821
+#define AP1302_REG_DVP_PCLK_DIVIDER	0x3824
+#define AP1302_REG_AEC_CTRL00		0x3a00
+#define AP1302_REG_AEC_B50_STEP		0x3a08
+#define AP1302_REG_AEC_B60_STEP		0x3a0a
+#define AP1302_REG_AEC_CTRL0D		0x3a0d
+#define AP1302_REG_AEC_CTRL0E		0x3a0e
+#define AP1302_REG_AEC_CTRL0F		0x3a0f
+#define AP1302_REG_AEC_CTRL10		0x3a10
+#define AP1302_REG_AEC_CTRL11		0x3a11
+#define AP1302_REG_AEC_CTRL1B		0x3a1b
+#define AP1302_REG_AEC_CTRL1E		0x3a1e
+#define AP1302_REG_AEC_CTRL1F		0x3a1f
+#define AP1302_REG_HZ5060_CTRL00	0x3c00
+#define AP1302_REG_HZ5060_CTRL01	0x3c01
+#define AP1302_REG_SIGMADELTA_CTRL0C	0x3c0c
+#define AP1302_REG_FRAME_CTRL01		0x4202
+#define AP1302_REG_FORMAT_CONTROL00	0x4300
+#define AP1302_REG_VFIFO_HSIZE		0x4602
+#define AP1302_REG_VFIFO_VSIZE		0x4604
+#define AP1302_REG_JPG_MODE_SELECT	0x4713
+#define AP1302_REG_POLARITY_CTRL00	0x4740
+#define AP1302_REG_MIPI_CTRL00		0x4800
+#define AP1302_REG_DEBUG_MODE		0x4814
+#define AP1302_REG_ISP_FORMAT_MUX_CTRL	0x501f
+#define AP1302_REG_PRE_ISP_TEST_SET1	0x503d
+#define AP1302_REG_SDE_CTRL0		0x5580
+#define AP1302_REG_SDE_CTRL1		0x5581
+#define AP1302_REG_SDE_CTRL3		0x5583
+#define AP1302_REG_SDE_CTRL4		0x5584
+#define AP1302_REG_SDE_CTRL5		0x5585
+#define AP1302_REG_AVG_READOUT		0x56a1
+
+#define FOCUS_NOT_INITIALIZED		0xFFFF
+
+#endif
+
+enum ap1302_mode_id {
+	AP1302_MODE_VGA_640_480 = 0,
+	AP1302_MODE_720P_1280_720,
+	AP1302_NUM_MODES,
+};
+
+enum ap1302_frame_rate {
+	AP1302_15_FPS = 0,
+	AP1302_30_FPS,
+	AP1302_NUM_FRAMERATES,
+};
+
+enum ap1302_format_mux {
+	AP1302_FMT_MUX_YUV422 = 0,
+	AP1302_FMT_MUX_RGB,
+};
+
+struct ap1302_pixfmt {
+	u32 code;
+	u32 colorspace;
+};
+
+static const struct ap1302_pixfmt ap1302_formats[] = {
+	{ MEDIA_BUS_FMT_UYVY8_2X8, V4L2_COLORSPACE_SRGB, },
+	{ MEDIA_BUS_FMT_YUYV8_2X8, V4L2_COLORSPACE_SRGB, },
+	{ MEDIA_BUS_FMT_RGB565_2X8_LE, V4L2_COLORSPACE_SRGB, },
+	{ MEDIA_BUS_FMT_RGB565_2X8_BE, V4L2_COLORSPACE_SRGB, },
+};
+
+/*
+ * FIXME: remove this when a subdev API becomes available
+ * to set the MIPI CSI-2 virtual channel.
+ */
+static unsigned int virtual_channel;
+module_param(virtual_channel, uint, 0444);
+MODULE_PARM_DESC(virtual_channel,
+		 "MIPI CSI-2 virtual channel (0..3), default 0");
+
+static const int ap1302_framerates[] = {
+	[AP1302_15_FPS] = 15,
+	[AP1302_30_FPS] = 30,
+};
+
+/* regulator supplies */
+static const char * const ap1302_supply_name[] = {
+	"DOVDD", /* Digital I/O (1.8V) supply */
+};
+
+#define AP1302_NUM_SUPPLIES ARRAY_SIZE(ap1302_supply_name)
+
+/*
+ * Image size under 1280 * 960 are SUBSAMPLING
+ * Image size upper 1280 * 960 are SCALING
+ */
+enum ap1302_downsize_mode {
+	SUBSAMPLING,
+	SCALING,
+};
+
+struct reg_value {
+	u16 reg_addr;
+	u8 val;
+	u8 mask;
+	u32 delay_ms;
+};
+
+struct ap1302_mode_info {
+	enum ap1302_mode_id id;
+	enum ap1302_downsize_mode dn_mode;
+	u32 hact;
+	u32 htot;
+	u32 vact;
+	u32 vtot;
+	const struct reg_value *reg_data;
+	u32 reg_data_size;
+};
+
+struct ap1302_ctrls {
+	struct v4l2_ctrl_handler handler;
+	struct {
+		struct v4l2_ctrl *auto_exp;
+		struct v4l2_ctrl *exposure;
+	};
+	struct {
+		struct v4l2_ctrl *auto_wb;
+		struct v4l2_ctrl *blue_balance;
+		struct v4l2_ctrl *red_balance;
+	};
+	struct {
+		struct v4l2_ctrl *auto_gain;
+		struct v4l2_ctrl *gain;
+	};
+	struct v4l2_ctrl *brightness;
+	struct v4l2_ctrl *light_freq;
+	struct v4l2_ctrl *saturation;
+	struct v4l2_ctrl *contrast;
+	struct v4l2_ctrl *hue;
+	struct v4l2_ctrl *test_pattern;
+	struct v4l2_ctrl *hflip;
+	struct v4l2_ctrl *vflip;
+	struct v4l2_ctrl *link_freq;
+};
+
+struct ap1302_dev {
+	struct i2c_client *i2c_client;
+	struct v4l2_subdev sd;
+	struct media_pad pad;
+	struct v4l2_fwnode_endpoint ep; /* the parsed DT endpoint info */
+	struct clk *xclk; /* system clock to AP1302 */
+	u32 xclk_freq;
+
+	struct regulator_bulk_data supplies[AP1302_NUM_SUPPLIES];
+	struct gpio_desc *reset_gpio;
+	struct gpio_desc *pwdn_gpio;
+	struct gpio_desc *i2csel_gpio;
+	bool   upside_down;
+
+	/* lock to protect all members below */
+	struct mutex lock;
+
+	int power_count;
+
+	struct v4l2_mbus_framefmt fmt;
+	bool pending_fmt_change;
+
+	const struct ap1302_mode_info *current_mode;
+	const struct ap1302_mode_info *last_mode;
+	enum ap1302_frame_rate current_fr;
+	struct v4l2_fract frame_interval;
+
+	struct ap1302_ctrls ctrls;
+
+	u32 prev_sysclk, prev_hts;
+	u32 ae_low, ae_high, ae_target;
+
+	s32 focus_state;
+
+	bool pending_mode_change;
+	bool streaming;
+};
+
+static inline struct ap1302_dev *to_ap1302_dev(struct v4l2_subdev *sd)
+{
+	return container_of(sd, struct ap1302_dev, sd);
+}
+
+static inline struct v4l2_subdev *ctrl_to_sd(struct v4l2_ctrl *ctrl)
+{
+	return &container_of(ctrl->handler, struct ap1302_dev,
+			     ctrls.handler)->sd;
+}
+
+#if 0
+/*
+ * FIXME: all of these register tables are likely filled with
+ * entries that set the register to their power-on default values,
+ * and which are otherwise not touched by this driver. Those entries
+ * should be identified and removed to speed register load time
+ * over i2c.
+ */
+/* YUV422 UYVY VGA@30fps */
+static const struct reg_value ap1302_init_setting_30fps_VGA[] = {
+	{0x3103, 0x11, 0, 0}, {0x3008, 0x82, 0, 5}, {0x3008, 0x42, 0, 0},
+	{0x3103, 0x03, 0, 0}, {0x3017, 0x00, 0, 0}, {0x3018, 0x00, 0, 0},
+	{0x3630, 0x36, 0, 0},
+	{0x3631, 0x0e, 0, 0}, {0x3632, 0xe2, 0, 0}, {0x3633, 0x12, 0, 0},
+	{0x3621, 0xe0, 0, 0}, {0x3704, 0xa0, 0, 0}, {0x3703, 0x5a, 0, 0},
+	{0x3715, 0x78, 0, 0}, {0x3717, 0x01, 0, 0}, {0x370b, 0x60, 0, 0},
+	{0x3705, 0x1a, 0, 0}, {0x3905, 0x02, 0, 0}, {0x3906, 0x10, 0, 0},
+	{0x3901, 0x0a, 0, 0}, {0x3731, 0x12, 0, 0}, {0x3600, 0x08, 0, 0},
+	{0x3601, 0x33, 0, 0}, {0x302d, 0x60, 0, 0}, {0x3620, 0x52, 0, 0},
+	{0x371b, 0x20, 0, 0}, {0x471c, 0x50, 0, 0}, {0x3a13, 0x43, 0, 0},
+	{0x3a18, 0x00, 0, 0}, {0x3a19, 0xf8, 0, 0}, {0x3635, 0x13, 0, 0},
+	{0x3636, 0x03, 0, 0}, {0x3634, 0x40, 0, 0}, {0x3622, 0x01, 0, 0},
+	{0x3c01, 0xa4, 0, 0}, {0x3c04, 0x28, 0, 0}, {0x3c05, 0x98, 0, 0},
+	{0x3c06, 0x00, 0, 0}, {0x3c07, 0x08, 0, 0}, {0x3c08, 0x00, 0, 0},
+	{0x3c09, 0x1c, 0, 0}, {0x3c0a, 0x9c, 0, 0}, {0x3c0b, 0x40, 0, 0},
+	{0x3820, 0x41, 0, 0}, {0x3821, 0x07, 0, 0}, {0x3814, 0x31, 0, 0},
+	{0x3815, 0x31, 0, 0}, {0x3800, 0x00, 0, 0}, {0x3801, 0x00, 0, 0},
+	{0x3802, 0x00, 0, 0}, {0x3803, 0x04, 0, 0}, {0x3804, 0x0a, 0, 0},
+	{0x3805, 0x3f, 0, 0}, {0x3806, 0x07, 0, 0}, {0x3807, 0x9b, 0, 0},
+	{0x3810, 0x00, 0, 0},
+	{0x3811, 0x10, 0, 0}, {0x3812, 0x00, 0, 0}, {0x3813, 0x06, 0, 0},
+	{0x3618, 0x00, 0, 0}, {0x3612, 0x29, 0, 0}, {0x3708, 0x64, 0, 0},
+	{0x3709, 0x52, 0, 0}, {0x370c, 0x03, 0, 0}, {0x3a02, 0x03, 0, 0},
+	{0x3a03, 0xd8, 0, 0}, {0x3a08, 0x01, 0, 0}, {0x3a09, 0x27, 0, 0},
+	{0x3a0a, 0x00, 0, 0}, {0x3a0b, 0xf6, 0, 0}, {0x3a0e, 0x03, 0, 0},
+	{0x3a0d, 0x04, 0, 0}, {0x3a14, 0x03, 0, 0}, {0x3a15, 0xd8, 0, 0},
+	{0x4001, 0x02, 0, 0}, {0x4004, 0x02, 0, 0}, {0x3000, 0x00, 0, 0},
+	{0x3002, 0x1c, 0, 0}, {0x3004, 0xff, 0, 0}, {0x3006, 0xc3, 0, 0},
+	{0x302e, 0x08, 0, 0}, {0x4300, 0x3f, 0, 0},
+	{0x501f, 0x00, 0, 0}, {0x4407, 0x04, 0, 0},
+	{0x440e, 0x00, 0, 0}, {0x460b, 0x35, 0, 0}, {0x460c, 0x22, 0, 0},
+	{0x4837, 0x0a, 0, 0}, {0x3824, 0x02, 0, 0},
+	{0x5000, 0xa7, 0, 0}, {0x5001, 0xa3, 0, 0}, {0x5180, 0xff, 0, 0},
+	{0x5181, 0xf2, 0, 0}, {0x5182, 0x00, 0, 0}, {0x5183, 0x14, 0, 0},
+	{0x5184, 0x25, 0, 0}, {0x5185, 0x24, 0, 0}, {0x5186, 0x09, 0, 0},
+	{0x5187, 0x09, 0, 0}, {0x5188, 0x09, 0, 0}, {0x5189, 0x88, 0, 0},
+	{0x518a, 0x54, 0, 0}, {0x518b, 0xee, 0, 0}, {0x518c, 0xb2, 0, 0},
+	{0x518d, 0x50, 0, 0}, {0x518e, 0x34, 0, 0}, {0x518f, 0x6b, 0, 0},
+	{0x5190, 0x46, 0, 0}, {0x5191, 0xf8, 0, 0}, {0x5192, 0x04, 0, 0},
+	{0x5193, 0x70, 0, 0}, {0x5194, 0xf0, 0, 0}, {0x5195, 0xf0, 0, 0},
+	{0x5196, 0x03, 0, 0}, {0x5197, 0x01, 0, 0}, {0x5198, 0x04, 0, 0},
+	{0x5199, 0x6c, 0, 0}, {0x519a, 0x04, 0, 0}, {0x519b, 0x00, 0, 0},
+	{0x519c, 0x09, 0, 0}, {0x519d, 0x2b, 0, 0}, {0x519e, 0x38, 0, 0},
+	{0x5381, 0x1e, 0, 0}, {0x5382, 0x5b, 0, 0}, {0x5383, 0x08, 0, 0},
+	{0x5384, 0x0a, 0, 0}, {0x5385, 0x7e, 0, 0}, {0x5386, 0x88, 0, 0},
+	{0x5387, 0x7c, 0, 0}, {0x5388, 0x6c, 0, 0}, {0x5389, 0x10, 0, 0},
+	{0x538a, 0x01, 0, 0}, {0x538b, 0x98, 0, 0}, {0x5300, 0x08, 0, 0},
+	{0x5301, 0x30, 0, 0}, {0x5302, 0x10, 0, 0}, {0x5303, 0x00, 0, 0},
+	{0x5304, 0x08, 0, 0}, {0x5305, 0x30, 0, 0}, {0x5306, 0x08, 0, 0},
+	{0x5307, 0x16, 0, 0}, {0x5309, 0x08, 0, 0}, {0x530a, 0x30, 0, 0},
+	{0x530b, 0x04, 0, 0}, {0x530c, 0x06, 0, 0}, {0x5480, 0x01, 0, 0},
+	{0x5481, 0x08, 0, 0}, {0x5482, 0x14, 0, 0}, {0x5483, 0x28, 0, 0},
+	{0x5484, 0x51, 0, 0}, {0x5485, 0x65, 0, 0}, {0x5486, 0x71, 0, 0},
+	{0x5487, 0x7d, 0, 0}, {0x5488, 0x87, 0, 0}, {0x5489, 0x91, 0, 0},
+	{0x548a, 0x9a, 0, 0}, {0x548b, 0xaa, 0, 0}, {0x548c, 0xb8, 0, 0},
+	{0x548d, 0xcd, 0, 0}, {0x548e, 0xdd, 0, 0}, {0x548f, 0xea, 0, 0},
+	{0x5490, 0x1d, 0, 0}, {0x5580, 0x02, 0, 0}, {0x5583, 0x40, 0, 0},
+	{0x5584, 0x10, 0, 0}, {0x5589, 0x10, 0, 0}, {0x558a, 0x00, 0, 0},
+	{0x558b, 0xf8, 0, 0}, {0x5800, 0x23, 0, 0}, {0x5801, 0x14, 0, 0},
+	{0x5802, 0x0f, 0, 0}, {0x5803, 0x0f, 0, 0}, {0x5804, 0x12, 0, 0},
+	{0x5805, 0x26, 0, 0}, {0x5806, 0x0c, 0, 0}, {0x5807, 0x08, 0, 0},
+	{0x5808, 0x05, 0, 0}, {0x5809, 0x05, 0, 0}, {0x580a, 0x08, 0, 0},
+	{0x580b, 0x0d, 0, 0}, {0x580c, 0x08, 0, 0}, {0x580d, 0x03, 0, 0},
+	{0x580e, 0x00, 0, 0}, {0x580f, 0x00, 0, 0}, {0x5810, 0x03, 0, 0},
+	{0x5811, 0x09, 0, 0}, {0x5812, 0x07, 0, 0}, {0x5813, 0x03, 0, 0},
+	{0x5814, 0x00, 0, 0}, {0x5815, 0x01, 0, 0}, {0x5816, 0x03, 0, 0},
+	{0x5817, 0x08, 0, 0}, {0x5818, 0x0d, 0, 0}, {0x5819, 0x08, 0, 0},
+	{0x581a, 0x05, 0, 0}, {0x581b, 0x06, 0, 0}, {0x581c, 0x08, 0, 0},
+	{0x581d, 0x0e, 0, 0}, {0x581e, 0x29, 0, 0}, {0x581f, 0x17, 0, 0},
+	{0x5820, 0x11, 0, 0}, {0x5821, 0x11, 0, 0}, {0x5822, 0x15, 0, 0},
+	{0x5823, 0x28, 0, 0}, {0x5824, 0x46, 0, 0}, {0x5825, 0x26, 0, 0},
+	{0x5826, 0x08, 0, 0}, {0x5827, 0x26, 0, 0}, {0x5828, 0x64, 0, 0},
+	{0x5829, 0x26, 0, 0}, {0x582a, 0x24, 0, 0}, {0x582b, 0x22, 0, 0},
+	{0x582c, 0x24, 0, 0}, {0x582d, 0x24, 0, 0}, {0x582e, 0x06, 0, 0},
+	{0x582f, 0x22, 0, 0}, {0x5830, 0x40, 0, 0}, {0x5831, 0x42, 0, 0},
+	{0x5832, 0x24, 0, 0}, {0x5833, 0x26, 0, 0}, {0x5834, 0x24, 0, 0},
+	{0x5835, 0x22, 0, 0}, {0x5836, 0x22, 0, 0}, {0x5837, 0x26, 0, 0},
+	{0x5838, 0x44, 0, 0}, {0x5839, 0x24, 0, 0}, {0x583a, 0x26, 0, 0},
+	{0x583b, 0x28, 0, 0}, {0x583c, 0x42, 0, 0}, {0x583d, 0xce, 0, 0},
+	{0x5025, 0x00, 0, 0}, {0x3a0f, 0x30, 0, 0}, {0x3a10, 0x28, 0, 0},
+	{0x3a1b, 0x30, 0, 0}, {0x3a1e, 0x26, 0, 0}, {0x3a11, 0x60, 0, 0},
+	{0x3a1f, 0x14, 0, 0}, {0x3008, 0x02, 0, 0}, {0x3c00, 0x04, 0, 300},
+};
+
+static const struct reg_value ap1302_setting_VGA_640_480[] = {
+	{0x3c07, 0x08, 0, 0},
+	{0x3c09, 0x1c, 0, 0}, {0x3c0a, 0x9c, 0, 0}, {0x3c0b, 0x40, 0, 0},
+	{0x3814, 0x31, 0, 0},
+	{0x3815, 0x31, 0, 0}, {0x3800, 0x00, 0, 0}, {0x3801, 0x00, 0, 0},
+	{0x3802, 0x00, 0, 0}, {0x3803, 0x04, 0, 0}, {0x3804, 0x0a, 0, 0},
+	{0x3805, 0x3f, 0, 0}, {0x3806, 0x07, 0, 0}, {0x3807, 0x9b, 0, 0},
+	{0x3810, 0x00, 0, 0},
+	{0x3811, 0x10, 0, 0}, {0x3812, 0x00, 0, 0}, {0x3813, 0x06, 0, 0},
+	{0x3618, 0x00, 0, 0}, {0x3612, 0x29, 0, 0}, {0x3708, 0x64, 0, 0},
+	{0x3709, 0x52, 0, 0}, {0x370c, 0x03, 0, 0}, {0x3a02, 0x03, 0, 0},
+	{0x3a03, 0xd8, 0, 0}, {0x3a08, 0x01, 0, 0}, {0x3a09, 0x27, 0, 0},
+	{0x3a0a, 0x00, 0, 0}, {0x3a0b, 0xf6, 0, 0}, {0x3a0e, 0x03, 0, 0},
+	{0x3a0d, 0x04, 0, 0}, {0x3a14, 0x03, 0, 0}, {0x3a15, 0xd8, 0, 0},
+	{0x4001, 0x02, 0, 0}, {0x4004, 0x02, 0, 0},
+	{0x4407, 0x04, 0, 0},
+	{0x5001, 0xa3, 0, 0},
+};
+
+static const struct reg_value ap1302_setting_QVGA_320_240[] = {
+	{0x3c07, 0x08, 0, 0},
+	{0x3c09, 0x1c, 0, 0}, {0x3c0a, 0x9c, 0, 0}, {0x3c0b, 0x40, 0, 0},
+	{0x3814, 0x31, 0, 0},
+	{0x3815, 0x31, 0, 0}, {0x3800, 0x00, 0, 0}, {0x3801, 0x00, 0, 0},
+	{0x3802, 0x00, 0, 0}, {0x3803, 0x04, 0, 0}, {0x3804, 0x0a, 0, 0},
+	{0x3805, 0x3f, 0, 0}, {0x3806, 0x07, 0, 0}, {0x3807, 0x9b, 0, 0},
+	{0x3810, 0x00, 0, 0},
+	{0x3811, 0x10, 0, 0}, {0x3812, 0x00, 0, 0}, {0x3813, 0x06, 0, 0},
+	{0x3618, 0x00, 0, 0}, {0x3612, 0x29, 0, 0}, {0x3708, 0x64, 0, 0},
+	{0x3709, 0x52, 0, 0}, {0x370c, 0x03, 0, 0}, {0x3a02, 0x03, 0, 0},
+	{0x3a03, 0xd8, 0, 0}, {0x3a08, 0x01, 0, 0}, {0x3a09, 0x27, 0, 0},
+	{0x3a0a, 0x00, 0, 0}, {0x3a0b, 0xf6, 0, 0}, {0x3a0e, 0x03, 0, 0},
+	{0x3a0d, 0x04, 0, 0}, {0x3a14, 0x03, 0, 0}, {0x3a15, 0xd8, 0, 0},
+	{0x4001, 0x02, 0, 0}, {0x4004, 0x02, 0, 0},
+	{0x4407, 0x04, 0, 0}, {0x5001, 0xa3, 0, 0},
+};
+
+static const struct reg_value ap1302_setting_720P_1280_720[] = {
+	{0x3c07, 0x07, 0, 0},
+	{0x3c09, 0x1c, 0, 0}, {0x3c0a, 0x9c, 0, 0}, {0x3c0b, 0x40, 0, 0},
+	{0x3814, 0x31, 0, 0},
+	{0x3815, 0x31, 0, 0}, {0x3800, 0x00, 0, 0}, {0x3801, 0x00, 0, 0},
+	{0x3802, 0x00, 0, 0}, {0x3803, 0xfa, 0, 0}, {0x3804, 0x0a, 0, 0},
+	{0x3805, 0x3f, 0, 0}, {0x3806, 0x06, 0, 0}, {0x3807, 0xa9, 0, 0},
+	{0x3810, 0x00, 0, 0},
+	{0x3811, 0x10, 0, 0}, {0x3812, 0x00, 0, 0}, {0x3813, 0x04, 0, 0},
+	{0x3618, 0x00, 0, 0}, {0x3612, 0x29, 0, 0}, {0x3708, 0x64, 0, 0},
+	{0x3709, 0x52, 0, 0}, {0x370c, 0x03, 0, 0}, {0x3a02, 0x02, 0, 0},
+	{0x3a03, 0xe4, 0, 0}, {0x3a08, 0x01, 0, 0}, {0x3a09, 0xbc, 0, 0},
+	{0x3a0a, 0x01, 0, 0}, {0x3a0b, 0x72, 0, 0}, {0x3a0e, 0x01, 0, 0},
+	{0x3a0d, 0x02, 0, 0}, {0x3a14, 0x02, 0, 0}, {0x3a15, 0xe4, 0, 0},
+	{0x4001, 0x02, 0, 0}, {0x4004, 0x02, 0, 0},
+	{0x4407, 0x04, 0, 0}, {0x5001, 0xa3, 0, 0},
+};
+
+#endif
+
+
+#if 0
+
+/* power-on sensor init reg table */
+static const struct ap1302_mode_info ap1302_mode_init_data = {
+	0, SUBSAMPLING, 640, 1896, 480, 984,
+	ap1302_init_setting_30fps_VGA,
+	ARRAY_SIZE(ap1302_init_setting_30fps_VGA),
+};
+
+static const struct ap1302_mode_info
+ap1302_mode_data[AP1302_NUM_MODES] = {
+	{AP1302_MODE_VGA_640_480, SUBSAMPLING,
+	 640, 1896, 480, 1080,
+	 ap1302_setting_VGA_640_480,
+	 ARRAY_SIZE(ap1302_setting_VGA_640_480)},
+	{AP1302_MODE_720P_1280_720, SUBSAMPLING,
+	 1280, 1892, 720, 740,
+	 ap1302_setting_720P_1280_720,
+	 ARRAY_SIZE(ap1302_setting_720P_1280_720)},
+};
+
+#endif
+
+#if 0
+static int ap1302_init_slave_id(struct ap1302_dev *sensor)
+{
+	struct i2c_client *client = sensor->i2c_client;
+	struct i2c_msg msg;
+	u8 buf[3];
+	int ret;
+
+	if (client->addr == AP1302_DEFAULT_SLAVE_ID)
+		return 0;
+
+	buf[0] = AP1302_REG_SLAVE_ID >> 8;
+	buf[1] = AP1302_REG_SLAVE_ID & 0xff;
+	buf[2] = client->addr << 1;
+
+	msg.addr = AP1302_DEFAULT_SLAVE_ID;
+	msg.flags = 0;
+	msg.buf = buf;
+	msg.len = sizeof(buf);
+
+	ret = i2c_transfer(client->adapter, &msg, 1);
+	if (ret < 0) {
+		dev_err(&client->dev, "%s: failed with %d\n", __func__, ret);
+		return ret;
+	}
+
+	return 0;
+}
+#endif
+
+static int ap1302_write_reg(struct ap1302_dev *sensor, u16 reg, u8 val)
+{
+	struct i2c_client *client = sensor->i2c_client;
+	struct i2c_msg msg;
+	u8 buf[3];
+	int ret;
+
+	buf[0] = reg >> 8;
+	buf[1] = reg & 0xff;
+	buf[2] = val;
+
+	msg.addr = client->addr;
+	msg.flags = client->flags;
+	msg.buf = buf;
+	msg.len = sizeof(buf);
+
+	ret = i2c_transfer(client->adapter, &msg, 1);
+	if (ret < 0) {
+		dev_err(&client->dev, "%s: error: reg=%x, val=%x\n",
+			__func__, reg, val);
+		return ret;
+	}
+
+	return 0;
+}
+
+static int ap1302_read_reg(struct ap1302_dev *sensor, u16 reg, u8 *val)
+{
+	struct i2c_client *client = sensor->i2c_client;
+	struct i2c_msg msg[2];
+	u8 buf[2];
+	int ret;
+
+	buf[0] = reg >> 8;
+	buf[1] = reg & 0xff;
+
+	msg[0].addr = client->addr;
+	msg[0].flags = client->flags;
+	msg[0].buf = buf;
+	msg[0].len = sizeof(buf);
+
+	msg[1].addr = client->addr;
+	msg[1].flags = client->flags | I2C_M_RD;
+	msg[1].buf = buf;
+	msg[1].len = 1;
+
+	ret = i2c_transfer(client->adapter, msg, 2);
+	if (ret < 0) {
+		dev_err(&client->dev, "%s: error: reg=%x\n",
+			__func__, reg);
+		return ret;
+	}
+
+	*val = buf[0];
+	return 0;
+}
+
+static int ap1302_read_reg16(struct ap1302_dev *sensor, u16 reg, u16 *val)
+{
+	u8 hi, lo;
+	int ret;
+
+	ret = ap1302_read_reg(sensor, reg, &hi);
+	if (ret)
+		return ret;
+	ret = ap1302_read_reg(sensor, reg + 1, &lo);
+	if (ret)
+		return ret;
+
+	*val = ((u16)hi << 8) | (u16)lo;
+	return 0;
+}
+
+static int ap1302_write_reg16(struct ap1302_dev *sensor, u16 reg, u16 val)
+{
+	int ret;
+
+	ret = ap1302_write_reg(sensor, reg, val >> 8);
+	if (ret)
+		return ret;
+
+	return ap1302_write_reg(sensor, reg + 1, val & 0xff);
+}
+
+static int ap1302_mod_reg(struct ap1302_dev *sensor, u16 reg,
+			  u8 mask, u8 val)
+{
+	u8 readval;
+	int ret;
+
+	ret = ap1302_read_reg(sensor, reg, &readval);
+	if (ret)
+		return ret;
+
+	readval &= ~mask;
+	val &= mask;
+	val |= readval;
+
+	return ap1302_write_reg(sensor, reg, val);
+}
+
+/*
+ * After trying the various combinations, reading various
+ * documentations spreaded around the net, and from the various
+ * feedback, the clock tree is probably as follows:
+ *
+ *   +--------------+
+ *   |  Ext. Clock  |
+ *   +-+------------+
+ *     |  +----------+
+ *     +->|   PLL1   | - reg 0x3036, for the multiplier
+ *        +-+--------+ - reg 0x3037, bits 0-3 for the pre-divider
+ *          |  +--------------+
+ *          +->| System Clock |  - reg 0x3035, bits 4-7
+ *             +-+------------+
+ *               |  +--------------+
+ *               +->| MIPI Divider | - reg 0x3035, bits 0-3
+ *               |  +-+------------+
+ *               |    +----------------> MIPI SCLK
+ *               |    +  +-----+
+ *               |    +->| / 2 |-------> MIPI BIT CLK
+ *               |       +-----+
+ *               |  +--------------+
+ *               +->| PLL Root Div | - reg 0x3037, bit 4
+ *                  +-+------------+
+ *                    |  +---------+
+ *                    +->| Bit Div | - reg 0x3035, bits 0-3
+ *                       +-+-------+
+ *                         |  +-------------+
+ *                         +->| SCLK Div    | - reg 0x3108, bits 0-1
+ *                         |  +-+-----------+
+ *                         |    +---------------> SCLK
+ *                         |  +-------------+
+ *                         +->| SCLK 2X Div | - reg 0x3108, bits 2-3
+ *                         |  +-+-----------+
+ *                         |    +---------------> SCLK 2X
+ *                         |  +-------------+
+ *                         +->| PCLK Div    | - reg 0x3108, bits 4-5
+ *                            ++------------+
+ *                             +  +-----------+
+ *                             +->|   P_DIV   | - reg 0x3035, bits 0-3
+ *                                +-----+-----+
+ *                                       +------------> PCLK
+ *
+ * This is deviating from the datasheet at least for the register
+ * 0x3108, since it's said here that the PCLK would be clocked from
+ * the PLL.
+ *
+ * There seems to be also (unverified) constraints:
+ *  - the PLL pre-divider output rate should be in the 4-27MHz range
+ *  - the PLL multiplier output rate should be in the 500-1000MHz range
+ *  - PCLK >= SCLK * 2 in YUV, >= SCLK in Raw or JPEG
+ *
+ * In the two latter cases, these constraints are met since our
+ * factors are hardcoded. If we were to change that, we would need to
+ * take this into account. The only varying parts are the PLL
+ * multiplier and the system clock divider, which are shared between
+ * all these clocks so won't cause any issue.
+ */
+
+/*
+ * This is supposed to be ranging from 1 to 8, but the value is always
+ * set to 3 in the vendor kernels.
+ */
+#define AP1302_PLL_PREDIV	3
+
+#define AP1302_PLL_MULT_MIN	4
+#define AP1302_PLL_MULT_MAX	252
+
+/*
+ * This is supposed to be ranging from 1 to 16, but the value is
+ * always set to either 1 or 2 in the vendor kernels.
+ */
+#define AP1302_SYSDIV_MIN	1
+#define AP1302_SYSDIV_MAX	16
+
+/*
+ * Hardcode these values for scaler and non-scaler modes.
+ * FIXME: to be re-calcualted for 1 data lanes setups
+ */
+#define AP1302_MIPI_DIV_PCLK	2
+#define AP1302_MIPI_DIV_SCLK	1
+
+/*
+ * This is supposed to be ranging from 1 to 2, but the value is always
+ * set to 2 in the vendor kernels.
+ */
+#define AP1302_PLL_ROOT_DIV			2
+#define AP1302_PLL_CTRL3_PLL_ROOT_DIV_2		BIT(4)
+
+/*
+ * We only supports 8-bit formats at the moment
+ */
+#define AP1302_BIT_DIV				2
+#define AP1302_PLL_CTRL0_MIPI_MODE_8BIT		0x08
+
+/*
+ * This is supposed to be ranging from 1 to 8, but the value is always
+ * set to 2 in the vendor kernels.
+ */
+#define AP1302_SCLK_ROOT_DIV	2
+
+/*
+ * This is hardcoded so that the consistency is maintained between SCLK and
+ * SCLK 2x.
+ */
+#define AP1302_SCLK2X_ROOT_DIV (AP1302_SCLK_ROOT_DIV / 2)
+
+/*
+ * This is supposed to be ranging from 1 to 8, but the value is always
+ * set to 1 in the vendor kernels.
+ */
+#define AP1302_PCLK_ROOT_DIV			1
+#define AP1302_PLL_SYS_ROOT_DIVIDER_BYPASS	0x00
+
+#if 0
+
+static unsigned long ap1302_compute_sys_clk(struct ap1302_dev *sensor,
+					    u8 pll_prediv, u8 pll_mult,
+					    u8 sysdiv)
+{
+	unsigned long sysclk = sensor->xclk_freq / pll_prediv * pll_mult;
+
+	/* PLL1 output cannot exceed 1GHz. */
+	if (sysclk / 1000000 > 1000)
+		return 0;
+
+	return sysclk / sysdiv;
+}
+
+static unsigned long ap1302_calc_sys_clk(struct ap1302_dev *sensor,
+					 unsigned long rate,
+					 u8 *pll_prediv, u8 *pll_mult,
+					 u8 *sysdiv)
+{
+	unsigned long best = ~0;
+	u8 best_sysdiv = 1, best_mult = 1;
+	u8 _sysdiv, _pll_mult;
+
+	for (_sysdiv = AP1302_SYSDIV_MIN;
+	     _sysdiv <= AP1302_SYSDIV_MAX;
+	     _sysdiv++) {
+		for (_pll_mult = AP1302_PLL_MULT_MIN;
+		     _pll_mult <= AP1302_PLL_MULT_MAX;
+		     _pll_mult++) {
+			unsigned long _rate;
+
+			/*
+			 * The PLL multiplier cannot be odd if above
+			 * 127.
+			 */
+			if (_pll_mult > 127 && (_pll_mult % 2))
+				continue;
+
+			_rate = ap1302_compute_sys_clk(sensor,
+						       AP1302_PLL_PREDIV,
+						       _pll_mult, _sysdiv);
+
+			/*
+			 * We have reached the maximum allowed PLL1 output,
+			 * increase sysdiv.
+			 */
+			if (!rate)
+				break;
+
+			/*
+			 * Prefer rates above the expected clock rate than
+			 * below, even if that means being less precise.
+			 */
+			if (_rate < rate)
+				continue;
+
+			if (abs(rate - _rate) < abs(rate - best)) {
+				best = _rate;
+				best_sysdiv = _sysdiv;
+				best_mult = _pll_mult;
+			}
+
+			if (_rate == rate)
+				goto out;
+		}
+	}
+
+out:
+	*sysdiv = best_sysdiv;
+	*pll_prediv = AP1302_PLL_PREDIV;
+	*pll_mult = best_mult;
+
+	return best;
+}
+
+/*
+ * ap1302_set_mipi_pclk() - Calculate the clock tree configuration values
+ *			    for the MIPI CSI-2 output.
+ *
+ * @rate: The requested bandwidth per lane in bytes per second.
+ *	  'Bandwidth Per Lane' is calculated as:
+ *	  bpl = HTOT * VTOT * FPS * bpp / num_lanes;
+ *
+ * This function use the requested bandwidth to calculate:
+ * - sample_rate = bpl / (bpp / num_lanes);
+ *	         = bpl / (PLL_RDIV * BIT_DIV * PCLK_DIV * MIPI_DIV / num_lanes);
+ *
+ * - mipi_sclk   = bpl / MIPI_DIV / 2; ( / 2 is for CSI-2 DDR)
+ *
+ * with these fixed parameters:
+ *	PLL_RDIV	= 2;
+ *	BIT_DIVIDER	= 2; (MIPI_BIT_MODE == 8 ? 2 : 2,5);
+ *	PCLK_DIV	= 1;
+ *
+ * The MIPI clock generation differs for modes that use the scaler and modes
+ * that do not. In case the scaler is in use, the MIPI_SCLK generates the MIPI
+ * BIT CLk, and thus:
+ *
+ * - mipi_sclk = bpl / MIPI_DIV / 2;
+ *   MIPI_DIV = 1;
+ *
+ * For modes that do not go through the scaler, the MIPI BIT CLOCK is generated
+ * from the pixel clock, and thus:
+ *
+ * - sample_rate = bpl / (bpp / num_lanes);
+ *	         = bpl / (2 * 2 * 1 * MIPI_DIV / num_lanes);
+ *		 = bpl / (4 * MIPI_DIV / num_lanes);
+ * - MIPI_DIV	 = bpp / (4 * num_lanes);
+ *
+ * FIXME: this have been tested with 16bpp and 2 lanes setup only.
+ * MIPI_DIV is fixed to value 2, but it -might- be changed according to the
+ * above formula for setups with 1 lane or image formats with different bpp.
+ *
+ * FIXME: this deviates from the sensor manual documentation which is quite
+ * thin on the MIPI clock tree generation part.
+ */
+static int ap1302_set_mipi_pclk(struct ap1302_dev *sensor,
+				unsigned long rate)
+{
+	struct i2c_client *client = sensor->i2c_client;
+	const struct ap1302_mode_info *mode = sensor->current_mode;
+	u8 prediv, mult, sysdiv;
+	unsigned long pclk_freq, max_pclk_freq;
+	u8 mipi_div;
+	int ret;
+
+	/*
+	 * 1280x720 is reported to use 'SUBSAMPLING' only,
+	 * but according to the sensor manual it goes through the
+	 * scaler before subsampling.
+	 */
+	if (mode->dn_mode == SCALING ||
+	   (mode->id == AP1302_MODE_720P_1280_720))
+		mipi_div = AP1302_MIPI_DIV_SCLK;
+	else
+		mipi_div = AP1302_MIPI_DIV_PCLK;
+
+	pclk_freq = rate / 16 / mipi_div;
+	pclk_freq = pclk_freq * 2 * /* 2 clocks per pixel */
+		    sensor->ep.bus.mipi_csi2.num_data_lanes;
+	max_pclk_freq = sensor->ep.bus.mipi_csi2.pclk_max_frequency;
+	/* clip rate according to optional maximum pixel clock limit */
+	if (max_pclk_freq && (pclk_freq > max_pclk_freq)) {
+		rate = max_pclk_freq / sensor->ep.bus.mipi_csi2.num_data_lanes
+		       / 2;
+		rate = rate * mipi_div * 16;
+		dev_dbg(&client->dev, "MIPI pixel clock too high (%lu > %lu Hz), reducing rate...\n",
+			pclk_freq, max_pclk_freq);
+	}
+
+	ap1302_calc_sys_clk(sensor, rate, &prediv, &mult, &sysdiv);
+
+	ret = ap1302_mod_reg(sensor, AP1302_REG_SC_PLL_CTRL0,
+			     0x0f, AP1302_PLL_CTRL0_MIPI_MODE_8BIT);
+
+	ret = ap1302_mod_reg(sensor, AP1302_REG_SC_PLL_CTRL1,
+			     0xff, sysdiv << 4 | mipi_div);
+	if (ret)
+		return ret;
+
+	ret = ap1302_mod_reg(sensor, AP1302_REG_SC_PLL_CTRL2, 0xff, mult);
+	if (ret)
+		return ret;
+
+	ret = ap1302_mod_reg(sensor, AP1302_REG_SC_PLL_CTRL3,
+			     0x1f, AP1302_PLL_CTRL3_PLL_ROOT_DIV_2 | prediv);
+	if (ret)
+		return ret;
+
+	return ap1302_mod_reg(sensor, AP1302_REG_SYS_ROOT_DIVIDER,
+			      0x30, AP1302_PLL_SYS_ROOT_DIVIDER_BYPASS);
+}
+
+static unsigned long ap1302_calc_pclk(struct ap1302_dev *sensor,
+				      unsigned long rate,
+				      u8 *pll_prediv, u8 *pll_mult, u8 *sysdiv,
+				      u8 *pll_rdiv, u8 *bit_div, u8 *pclk_div)
+{
+	unsigned long _rate = rate * AP1302_PLL_ROOT_DIV * AP1302_BIT_DIV *
+				AP1302_PCLK_ROOT_DIV;
+
+	_rate = ap1302_calc_sys_clk(sensor, _rate, pll_prediv, pll_mult,
+				    sysdiv);
+	*pll_rdiv = AP1302_PLL_ROOT_DIV;
+	*bit_div = AP1302_BIT_DIV;
+	*pclk_div = AP1302_PCLK_ROOT_DIV;
+
+	return _rate / *pll_rdiv / *bit_div / *pclk_div;
+}
+
+static int ap1302_set_dvp_pclk(struct ap1302_dev *sensor, unsigned long rate)
+{
+	const struct ap1302_mode_info *mode = sensor->current_mode;
+	u8 prediv, mult, sysdiv, pll_rdiv, bit_div, pclk_div;
+	struct i2c_client *client = sensor->i2c_client;
+	unsigned int pclk_freq, max_pclk_freq;
+	u8 dvp_pclk_divider;
+	int ret;
+
+	/*
+	 * 1280x720 and 1024x768 are reported to use 'SUBSAMPLING' only,
+	 * but they seems to go through the scaler before subsampling.
+	 */
+	if (mode->dn_mode == SCALING ||
+	   (mode->id == AP1302_MODE_720P_1280_720) ||
+	   (mode->id == AP1302_MODE_XGA_1024_768))
+		dvp_pclk_divider = 1;
+	else
+		dvp_pclk_divider = 2;
+
+	ret = ap1302_write_reg(sensor, AP1302_REG_DVP_PCLK_DIVIDER,
+			       dvp_pclk_divider);
+	if (ret)
+		return ret;
+	pclk_freq = rate / dvp_pclk_divider;
+	max_pclk_freq = sensor->ep.bus.parallel.pclk_max_frequency;
+
+	/* clip rate according to optional maximum pixel clock limit */
+	if (max_pclk_freq && (pclk_freq > max_pclk_freq)) {
+		rate = max_pclk_freq * dvp_pclk_divider;
+		dev_dbg(&client->dev, "DVP pixel clock too high (%d > %d Hz), reducing rate...\n",
+			pclk_freq, max_pclk_freq);
+	}
+
+	ap1302_calc_pclk(sensor, rate, &prediv, &mult, &sysdiv, &pll_rdiv,
+			 &bit_div, &pclk_div);
+
+	if (bit_div == 2)
+		bit_div = 8;
+
+	ret = ap1302_mod_reg(sensor, AP1302_REG_SC_PLL_CTRL0,
+			     0x0f, bit_div);
+	if (ret)
+		return ret;
+
+	/*
+	 * We need to set sysdiv according to the clock, and to clear
+	 * the MIPI divider.
+	 */
+	ret = ap1302_mod_reg(sensor, AP1302_REG_SC_PLL_CTRL1,
+			     0xff, sysdiv << 4);
+	if (ret)
+		return ret;
+
+	ret = ap1302_mod_reg(sensor, AP1302_REG_SC_PLL_CTRL2,
+			     0xff, mult);
+	if (ret)
+		return ret;
+
+	ret = ap1302_mod_reg(sensor, AP1302_REG_SC_PLL_CTRL3,
+			     0x1f, prediv | ((pll_rdiv - 1) << 4));
+	if (ret)
+		return ret;
+
+	return ap1302_mod_reg(sensor, AP1302_REG_SYS_ROOT_DIVIDER, 0x30,
+			      (ilog2(pclk_div) << 4));
+}
+
+/* set JPEG framing sizes */
+static int ap1302_set_jpeg_timings(struct ap1302_dev *sensor,
+				   const struct ap1302_mode_info *mode)
+{
+	int ret;
+
+	/*
+	 * compression mode 3 timing
+	 *
+	 * Data is transmitted with programmable width (VFIFO_HSIZE).
+	 * No padding done. Last line may have less data. Varying
+	 * number of lines per frame, depending on amount of data.
+	 */
+	ret = ap1302_mod_reg(sensor, AP1302_REG_JPG_MODE_SELECT, 0x7, 0x3);
+	if (ret < 0)
+		return ret;
+
+	ret = ap1302_write_reg16(sensor, AP1302_REG_VFIFO_HSIZE, mode->hact);
+	if (ret < 0)
+		return ret;
+
+	return ap1302_write_reg16(sensor, AP1302_REG_VFIFO_VSIZE, mode->vact);
+}
+
+#endif
+
+#if 0
+
+/* download ap1302 settings to sensor through i2c */
+static int ap1302_load_regs(struct ap1302_dev *sensor,
+			    const struct ap1302_mode_info *mode)
+{
+	const struct reg_value *regs = mode->reg_data;
+	unsigned int i;
+	u32 delay_ms;
+	u16 reg_addr;
+	u8 mask, val;
+	int ret = 0;
+
+	for (i = 0; i < mode->reg_data_size; ++i, ++regs) {
+		delay_ms = regs->delay_ms;
+		reg_addr = regs->reg_addr;
+		val = regs->val;
+		mask = regs->mask;
+
+		if (mask)
+			ret = ap1302_mod_reg(sensor, reg_addr, mask, val);
+		else
+			ret = ap1302_write_reg(sensor, reg_addr, val);
+		if (ret)
+			break;
+
+		if (delay_ms)
+			usleep_range(1000 * delay_ms, 1000 * delay_ms + 100);
+	}
+
+	return ret;
+}
+
+static int ap1302_set_autoexposure(struct ap1302_dev *sensor, bool on)
+{
+	return ap1302_mod_reg(sensor, AP1302_REG_AEC_PK_MANUAL,
+			      BIT(0), on ? 0 : BIT(0));
+}
+
+/* read exposure, in number of line periods */
+static int ap1302_get_exposure(struct ap1302_dev *sensor)
+{
+	int exp, ret;
+	u8 temp;
+
+	ret = ap1302_read_reg(sensor, AP1302_REG_AEC_PK_EXPOSURE_HI, &temp);
+	if (ret)
+		return ret;
+	exp = ((int)temp & 0x0f) << 16;
+	ret = ap1302_read_reg(sensor, AP1302_REG_AEC_PK_EXPOSURE_MED, &temp);
+	if (ret)
+		return ret;
+	exp |= ((int)temp << 8);
+	ret = ap1302_read_reg(sensor, AP1302_REG_AEC_PK_EXPOSURE_LO, &temp);
+	if (ret)
+		return ret;
+	exp |= (int)temp;
+
+	return exp >> 4;
+}
+
+/* write exposure, given number of line periods */
+static int ap1302_set_exposure(struct ap1302_dev *sensor, u32 exposure)
+{
+	int ret;
+
+	exposure <<= 4;
+
+	ret = ap1302_write_reg(sensor,
+			       AP1302_REG_AEC_PK_EXPOSURE_LO,
+			       exposure & 0xff);
+	if (ret)
+		return ret;
+	ret = ap1302_write_reg(sensor,
+			       AP1302_REG_AEC_PK_EXPOSURE_MED,
+			       (exposure >> 8) & 0xff);
+	if (ret)
+		return ret;
+	return ap1302_write_reg(sensor,
+				AP1302_REG_AEC_PK_EXPOSURE_HI,
+				(exposure >> 16) & 0x0f);
+}
+
+static int ap1302_get_gain(struct ap1302_dev *sensor)
+{
+	u16 gain;
+	int ret;
+
+	ret = ap1302_read_reg16(sensor, AP1302_REG_AEC_PK_REAL_GAIN, &gain);
+	if (ret)
+		return ret;
+
+	return gain & 0x3ff;
+}
+
+static int ap1302_set_gain(struct ap1302_dev *sensor, int gain)
+{
+	return ap1302_write_reg16(sensor, AP1302_REG_AEC_PK_REAL_GAIN,
+				  (u16)gain & 0x3ff);
+}
+
+static int ap1302_set_autogain(struct ap1302_dev *sensor, bool on)
+{
+	return ap1302_mod_reg(sensor, AP1302_REG_AEC_PK_MANUAL,
+			      BIT(1), on ? 0 : BIT(1));
+}
+
+static int ap1302_set_stream_dvp(struct ap1302_dev *sensor, bool on)
+{
+	int ret;
+	unsigned int flags = sensor->ep.bus.parallel.flags;
+	u8 pclk_pol = 0;
+	u8 hsync_pol = 0;
+	u8 vsync_pol = 0;
+
+	/*
+	 * Note about parallel port configuration.
+	 *
+	 * When configured in parallel mode, the AP1302 will
+	 * output 10 bits data on DVP data lines [9:0].
+	 * If only 8 bits data are wanted, the 8 bits data lines
+	 * of the camera interface must be physically connected
+	 * on the DVP data lines [9:2].
+	 *
+	 * Control lines polarity can be configured through
+	 * devicetree endpoint control lines properties.
+	 * If no endpoint control lines properties are set,
+	 * polarity will be as below:
+	 * - VSYNC:	active high
+	 * - HREF:	active low
+	 * - PCLK:	active low
+	 */
+
+	if (on) {
+		/*
+		 * configure parallel port control lines polarity
+		 *
+		 * POLARITY CTRL0
+		 * - [5]:	PCLK polarity (0: active low, 1: active high)
+		 * - [1]:	HREF polarity (0: active low, 1: active high)
+		 * - [0]:	VSYNC polarity (mismatch here between
+		 *		datasheet and hardware, 0 is active high
+		 *		and 1 is active low...)
+		 */
+		if (flags & V4L2_MBUS_PCLK_SAMPLE_RISING)
+			pclk_pol = 1;
+		if (flags & V4L2_MBUS_HSYNC_ACTIVE_HIGH)
+			hsync_pol = 1;
+		if (flags & V4L2_MBUS_VSYNC_ACTIVE_LOW)
+			vsync_pol = 1;
+
+		ret = ap1302_write_reg(sensor,
+				       AP1302_REG_POLARITY_CTRL00,
+				       (pclk_pol << 5) |
+				       (hsync_pol << 1) |
+				       vsync_pol);
+
+		if (ret)
+			return ret;
+	}
+
+	/*
+	 * powerdown MIPI TX/RX PHY & disable MIPI
+	 *
+	 * MIPI CONTROL 00
+	 * 4:	 PWDN PHY TX
+	 * 3:	 PWDN PHY RX
+	 * 2:	 MIPI enable
+	 */
+	ret = ap1302_write_reg(sensor,
+			       AP1302_REG_IO_MIPI_CTRL00, on ? 0x18 : 0);
+	if (ret)
+		return ret;
+
+	/*
+	 * enable VSYNC/HREF/PCLK DVP control lines
+	 * & D[9:6] DVP data lines
+	 *
+	 * PAD OUTPUT ENABLE 01
+	 * - 6:		VSYNC output enable
+	 * - 5:		HREF output enable
+	 * - 4:		PCLK output enable
+	 * - [3:0]:	D[9:6] output enable
+	 */
+	ret = ap1302_write_reg(sensor,
+			       AP1302_REG_PAD_OUTPUT_ENABLE01,
+			       on ? 0x7f : 0);
+	if (ret)
+		return ret;
+
+	/*
+	 * enable D[5:0] DVP data lines
+	 *
+	 * PAD OUTPUT ENABLE 02
+	 * - [7:2]:	D[5:0] output enable
+	 */
+	return ap1302_write_reg(sensor,
+				AP1302_REG_PAD_OUTPUT_ENABLE02,
+				on ? 0xfc : 0);
+}
+
+static int ap1302_set_stream_mipi(struct ap1302_dev *sensor, bool on)
+{
+	int ret;
+
+	/*
+	 * Enable/disable the MIPI interface
+	 *
+	 * 0x300e = on ? 0x45 : 0x40
+	 *
+	 * FIXME: the sensor manual (version 2.03) reports
+	 * [7:5] = 000  : 1 data lane mode
+	 * [7:5] = 001  : 2 data lanes mode
+	 * But this settings do not work, while the following ones
+	 * have been validated for 2 data lanes mode.
+	 *
+	 * [7:5] = 010	: 2 data lanes mode
+	 * [4] = 0	: Power up MIPI HS Tx
+	 * [3] = 0	: Power up MIPI LS Rx
+	 * [2] = 1/0	: MIPI interface enable/disable
+	 * [1:0] = 01/00: FIXME: 'debug'
+	 */
+	ret = ap1302_write_reg(sensor, AP1302_REG_IO_MIPI_CTRL00,
+			       on ? 0x45 : 0x40);
+	if (ret)
+		return ret;
+
+	return ap1302_write_reg(sensor, AP1302_REG_FRAME_CTRL01,
+				on ? 0x00 : 0x0f);
+}
+
+static int ap1302_get_sysclk(struct ap1302_dev *sensor)
+{
+	 /* calculate sysclk */
+	u32 xvclk = sensor->xclk_freq / 10000;
+	u32 multiplier, prediv, VCO, sysdiv, pll_rdiv;
+	u32 sclk_rdiv_map[] = {1, 2, 4, 8};
+	u32 bit_div2x = 1, sclk_rdiv, sysclk;
+	u8 temp1, temp2;
+	int ret;
+
+	ret = ap1302_read_reg(sensor, AP1302_REG_SC_PLL_CTRL0, &temp1);
+	if (ret)
+		return ret;
+	temp2 = temp1 & 0x0f;
+	if (temp2 == 8 || temp2 == 10)
+		bit_div2x = temp2 / 2;
+
+	ret = ap1302_read_reg(sensor, AP1302_REG_SC_PLL_CTRL1, &temp1);
+	if (ret)
+		return ret;
+	sysdiv = temp1 >> 4;
+	if (sysdiv == 0)
+		sysdiv = 16;
+
+	ret = ap1302_read_reg(sensor, AP1302_REG_SC_PLL_CTRL2, &temp1);
+	if (ret)
+		return ret;
+	multiplier = temp1;
+
+	ret = ap1302_read_reg(sensor, AP1302_REG_SC_PLL_CTRL3, &temp1);
+	if (ret)
+		return ret;
+	prediv = temp1 & 0x0f;
+	pll_rdiv = ((temp1 >> 4) & 0x01) + 1;
+
+	ret = ap1302_read_reg(sensor, AP1302_REG_SYS_ROOT_DIVIDER, &temp1);
+	if (ret)
+		return ret;
+	temp2 = temp1 & 0x03;
+	sclk_rdiv = sclk_rdiv_map[temp2];
+
+	if (!prediv || !sysdiv || !pll_rdiv || !bit_div2x)
+		return -EINVAL;
+
+	VCO = xvclk * multiplier / prediv;
+
+	sysclk = VCO / sysdiv / pll_rdiv * 2 / bit_div2x / sclk_rdiv;
+
+	return sysclk;
+}
+
+static int ap1302_set_night_mode(struct ap1302_dev *sensor)
+{
+	 /* read HTS from register settings */
+	u8 mode;
+	int ret;
+
+	ret = ap1302_read_reg(sensor, AP1302_REG_AEC_CTRL00, &mode);
+	if (ret)
+		return ret;
+	mode &= 0xfb;
+	return ap1302_write_reg(sensor, AP1302_REG_AEC_CTRL00, mode);
+}
+
+static int ap1302_get_hts(struct ap1302_dev *sensor)
+{
+	/* read HTS from register settings */
+	u16 hts;
+	int ret;
+
+	ret = ap1302_read_reg16(sensor, AP1302_REG_TIMING_HTS, &hts);
+	if (ret)
+		return ret;
+	return hts;
+}
+
+static int ap1302_get_vts(struct ap1302_dev *sensor)
+{
+	u16 vts;
+	int ret;
+
+	ret = ap1302_read_reg16(sensor, AP1302_REG_TIMING_VTS, &vts);
+	if (ret)
+		return ret;
+	return vts;
+}
+
+static int ap1302_set_vts(struct ap1302_dev *sensor, int vts)
+{
+	return ap1302_write_reg16(sensor, AP1302_REG_TIMING_VTS, vts);
+}
+
+static int ap1302_get_light_freq(struct ap1302_dev *sensor)
+{
+	/* get banding filter value */
+	int ret, light_freq = 0;
+	u8 temp, temp1;
+
+	ret = ap1302_read_reg(sensor, AP1302_REG_HZ5060_CTRL01, &temp);
+	if (ret)
+		return ret;
+
+	if (temp & 0x80) {
+		/* manual */
+		ret = ap1302_read_reg(sensor, AP1302_REG_HZ5060_CTRL00,
+				      &temp1);
+		if (ret)
+			return ret;
+		if (temp1 & 0x04) {
+			/* 50Hz */
+			light_freq = 50;
+		} else {
+			/* 60Hz */
+			light_freq = 60;
+		}
+	} else {
+		/* auto */
+		ret = ap1302_read_reg(sensor, AP1302_REG_SIGMADELTA_CTRL0C,
+				      &temp1);
+		if (ret)
+			return ret;
+
+		if (temp1 & 0x01) {
+			/* 50Hz */
+			light_freq = 50;
+		} else {
+			/* 60Hz */
+		}
+	}
+
+	return light_freq;
+}
+
+static int ap1302_set_bandingfilter(struct ap1302_dev *sensor)
+{
+	u32 band_step60, max_band60, band_step50, max_band50, prev_vts;
+	int ret;
+
+	/* read preview PCLK */
+	ret = ap1302_get_sysclk(sensor);
+	if (ret < 0)
+		return ret;
+	if (ret == 0)
+		return -EINVAL;
+	sensor->prev_sysclk = ret;
+	/* read preview HTS */
+	ret = ap1302_get_hts(sensor);
+	if (ret < 0)
+		return ret;
+	if (ret == 0)
+		return -EINVAL;
+	sensor->prev_hts = ret;
+
+	/* read preview VTS */
+	ret = ap1302_get_vts(sensor);
+	if (ret < 0)
+		return ret;
+	prev_vts = ret;
+
+	/* calculate banding filter */
+	/* 60Hz */
+	band_step60 = sensor->prev_sysclk * 100 / sensor->prev_hts * 100 / 120;
+	ret = ap1302_write_reg16(sensor, AP1302_REG_AEC_B60_STEP, band_step60);
+	if (ret)
+		return ret;
+	if (!band_step60)
+		return -EINVAL;
+	max_band60 = (int)((prev_vts - 4) / band_step60);
+	ret = ap1302_write_reg(sensor, AP1302_REG_AEC_CTRL0D, max_band60);
+	if (ret)
+		return ret;
+
+	/* 50Hz */
+	band_step50 = sensor->prev_sysclk * 100 / sensor->prev_hts;
+	ret = ap1302_write_reg16(sensor, AP1302_REG_AEC_B50_STEP, band_step50);
+	if (ret)
+		return ret;
+	if (!band_step50)
+		return -EINVAL;
+	max_band50 = (int)((prev_vts - 4) / band_step50);
+	return ap1302_write_reg(sensor, AP1302_REG_AEC_CTRL0E, max_band50);
+}
+
+static int ap1302_set_ae_target(struct ap1302_dev *sensor, int target)
+{
+	/* stable in high */
+	u32 fast_high, fast_low;
+	int ret;
+
+	sensor->ae_low = target * 23 / 25;	/* 0.92 */
+	sensor->ae_high = target * 27 / 25;	/* 1.08 */
+
+	fast_high = sensor->ae_high << 1;
+	if (fast_high > 255)
+		fast_high = 255;
+
+	fast_low = sensor->ae_low >> 1;
+
+	ret = ap1302_write_reg(sensor, AP1302_REG_AEC_CTRL0F, sensor->ae_high);
+	if (ret)
+		return ret;
+	ret = ap1302_write_reg(sensor, AP1302_REG_AEC_CTRL10, sensor->ae_low);
+	if (ret)
+		return ret;
+	ret = ap1302_write_reg(sensor, AP1302_REG_AEC_CTRL1B, sensor->ae_high);
+	if (ret)
+		return ret;
+	ret = ap1302_write_reg(sensor, AP1302_REG_AEC_CTRL1E, sensor->ae_low);
+	if (ret)
+		return ret;
+	ret = ap1302_write_reg(sensor, AP1302_REG_AEC_CTRL11, fast_high);
+	if (ret)
+		return ret;
+	return ap1302_write_reg(sensor, AP1302_REG_AEC_CTRL1F, fast_low);
+}
+
+static int ap1302_get_binning(struct ap1302_dev *sensor)
+{
+	u8 temp;
+	int ret;
+
+	ret = ap1302_read_reg(sensor, AP1302_REG_TIMING_TC_REG21, &temp);
+	if (ret)
+		return ret;
+
+	return temp & BIT(0);
+}
+
+static int ap1302_set_binning(struct ap1302_dev *sensor, bool enable)
+{
+	int ret;
+
+	/*
+	 * TIMING TC REG21:
+	 * - [0]:	Horizontal binning enable
+	 */
+	ret = ap1302_mod_reg(sensor, AP1302_REG_TIMING_TC_REG21,
+			     BIT(0), enable ? BIT(0) : 0);
+	if (ret)
+		return ret;
+	/*
+	 * TIMING TC REG20:
+	 * - [0]:	Undocumented, but hardcoded init sequences
+	 *		are always setting REG21/REG20 bit 0 to same value...
+	 */
+	return ap1302_mod_reg(sensor, AP1302_REG_TIMING_TC_REG20,
+			      BIT(0), enable ? BIT(0) : 0);
+}
+
+static int ap1302_set_virtual_channel(struct ap1302_dev *sensor)
+{
+	struct i2c_client *client = sensor->i2c_client;
+	u8 temp, channel = virtual_channel;
+	int ret;
+
+	if (channel > 3) {
+		dev_err(&client->dev,
+			"%s: wrong virtual_channel parameter, expected (0..3), got %d\n",
+			__func__, channel);
+		return -EINVAL;
+	}
+
+	ret = ap1302_read_reg(sensor, AP1302_REG_DEBUG_MODE, &temp);
+	if (ret)
+		return ret;
+	temp &= ~(3 << 6);
+	temp |= (channel << 6);
+	return ap1302_write_reg(sensor, AP1302_REG_DEBUG_MODE, temp);
+}
+
+static int ap1302_set_timings(struct ap1302_dev *sensor,
+			      const struct ap1302_mode_info *mode)
+{
+	int ret;
+
+#if 0
+	if (sensor->fmt.code == MEDIA_BUS_FMT_JPEG_1X8) {
+		ret = ap1302_set_jpeg_timings(sensor, mode);
+		if (ret < 0)
+			return ret;
+	}
+#endif
+
+	ret = ap1302_write_reg16(sensor, AP1302_REG_TIMING_DVPHO, mode->hact);
+	if (ret < 0)
+		return ret;
+
+	ret = ap1302_write_reg16(sensor, AP1302_REG_TIMING_DVPVO, mode->vact);
+	if (ret < 0)
+		return ret;
+
+	ret = ap1302_write_reg16(sensor, AP1302_REG_TIMING_HTS, mode->htot);
+	if (ret < 0)
+		return ret;
+
+	ret = ap1302_write_reg16(sensor, AP1302_REG_TIMING_VTS, mode->vtot);
+	if (ret < 0)
+		return ret;
+
+	return 0;
+}
+
+#endif
+
+
+#if 0
+
+static const struct ap1302_mode_info *
+ap1302_find_mode(struct ap1302_dev *sensor, enum ap1302_frame_rate fr,
+		 int width, int height, bool nearest)
+{
+	const struct ap1302_mode_info *mode;
+
+	mode = v4l2_find_nearest_size(ap1302_mode_data,
+				      ARRAY_SIZE(ap1302_mode_data),
+				      hact, vact,
+				      width, height);
+
+	if (!mode ||
+	    (!nearest && (mode->hact != width || mode->vact != height)))
+		return NULL;
+
+	return mode;
+}
+
+/*
+ * sensor changes between scaling and subsampling, go through
+ * exposure calculation
+ */
+static int ap1302_set_mode_exposure_calc(struct ap1302_dev *sensor,
+					 const struct ap1302_mode_info *mode)
+{
+	u32 prev_shutter, prev_gain16;
+	u32 cap_shutter, cap_gain16;
+	u32 cap_sysclk, cap_hts, cap_vts;
+	u32 light_freq, cap_bandfilt, cap_maxband;
+	u32 cap_gain16_shutter;
+	u8 average;
+	int ret;
+
+	if (!mode->reg_data)
+		return -EINVAL;
+
+	/* read preview shutter */
+	ret = ap1302_get_exposure(sensor);
+	if (ret < 0)
+		return ret;
+	prev_shutter = ret;
+	ret = ap1302_get_binning(sensor);
+	if (ret < 0)
+		return ret;
+	if (ret && mode->id != AP1302_MODE_720P_1280_720 &&
+	    mode->id != AP1302_MODE_1080P_1920_1080)
+		prev_shutter *= 2;
+
+	/* read preview gain */
+	ret = ap1302_get_gain(sensor);
+	if (ret < 0)
+		return ret;
+	prev_gain16 = ret;
+
+	/* get average */
+	ret = ap1302_read_reg(sensor, AP1302_REG_AVG_READOUT, &average);
+	if (ret)
+		return ret;
+
+	/* turn off night mode for capture */
+	ret = ap1302_set_night_mode(sensor);
+	if (ret < 0)
+		return ret;
+
+	/* Write capture setting */
+	ret = ap1302_load_regs(sensor, mode);
+	if (ret < 0)
+		return ret;
+
+	/* read capture VTS */
+	ret = ap1302_get_vts(sensor);
+	if (ret < 0)
+		return ret;
+	cap_vts = ret;
+	ret = ap1302_get_hts(sensor);
+	if (ret < 0)
+		return ret;
+	if (ret == 0)
+		return -EINVAL;
+	cap_hts = ret;
+
+	ret = ap1302_get_sysclk(sensor);
+	if (ret < 0)
+		return ret;
+	if (ret == 0)
+		return -EINVAL;
+	cap_sysclk = ret;
+
+	/* calculate capture banding filter */
+	ret = ap1302_get_light_freq(sensor);
+	if (ret < 0)
+		return ret;
+	light_freq = ret;
+
+	if (light_freq == 60) {
+		/* 60Hz */
+		cap_bandfilt = cap_sysclk * 100 / cap_hts * 100 / 120;
+	} else {
+		/* 50Hz */
+		cap_bandfilt = cap_sysclk * 100 / cap_hts;
+	}
+
+	if (!sensor->prev_sysclk) {
+		ret = ap1302_get_sysclk(sensor);
+		if (ret < 0)
+			return ret;
+		if (ret == 0)
+			return -EINVAL;
+		sensor->prev_sysclk = ret;
+	}
+
+	if (!cap_bandfilt)
+		return -EINVAL;
+
+	cap_maxband = (int)((cap_vts - 4) / cap_bandfilt);
+
+	/* calculate capture shutter/gain16 */
+	if (average > sensor->ae_low && average < sensor->ae_high) {
+		/* in stable range */
+		cap_gain16_shutter =
+			prev_gain16 * prev_shutter *
+			cap_sysclk / sensor->prev_sysclk *
+			sensor->prev_hts / cap_hts *
+			sensor->ae_target / average;
+	} else {
+		cap_gain16_shutter =
+			prev_gain16 * prev_shutter *
+			cap_sysclk / sensor->prev_sysclk *
+			sensor->prev_hts / cap_hts;
+	}
+
+	/* gain to shutter */
+	if (cap_gain16_shutter < (cap_bandfilt * 16)) {
+		/* shutter < 1/100 */
+		cap_shutter = cap_gain16_shutter / 16;
+		if (cap_shutter < 1)
+			cap_shutter = 1;
+
+		cap_gain16 = cap_gain16_shutter / cap_shutter;
+		if (cap_gain16 < 16)
+			cap_gain16 = 16;
+	} else {
+		if (cap_gain16_shutter > (cap_bandfilt * cap_maxband * 16)) {
+			/* exposure reach max */
+			cap_shutter = cap_bandfilt * cap_maxband;
+			if (!cap_shutter)
+				return -EINVAL;
+
+			cap_gain16 = cap_gain16_shutter / cap_shutter;
+		} else {
+			/* 1/100 < (cap_shutter = n/100) =< max */
+			cap_shutter =
+				((int)(cap_gain16_shutter / 16 / cap_bandfilt))
+				* cap_bandfilt;
+			if (!cap_shutter)
+				return -EINVAL;
+
+			cap_gain16 = cap_gain16_shutter / cap_shutter;
+		}
+	}
+
+	/* set capture gain */
+	ret = ap1302_set_gain(sensor, cap_gain16);
+	if (ret)
+		return ret;
+
+	/* write capture shutter */
+	if (cap_shutter > (cap_vts - 4)) {
+		cap_vts = cap_shutter + 4;
+		ret = ap1302_set_vts(sensor, cap_vts);
+		if (ret < 0)
+			return ret;
+	}
+
+	/* set exposure */
+	return ap1302_set_exposure(sensor, cap_shutter);
+}
+
+#endif
+
+
+#if 0
+
+/*
+ * if sensor changes inside scaling or subsampling
+ * change mode directly
+ */
+static int ap1302_set_mode_direct(struct ap1302_dev *sensor,
+				  const struct ap1302_mode_info *mode)
+{
+	if (!mode->reg_data)
+		return -EINVAL;
+
+	/* Write capture setting */
+	return ap1302_load_regs(sensor, mode);
+}
+
+static int ap1302_set_mode(struct ap1302_dev *sensor)
+{
+	const struct ap1302_mode_info *mode = sensor->current_mode;
+	const struct ap1302_mode_info *orig_mode = sensor->last_mode;
+	enum ap1302_downsize_mode dn_mode, orig_dn_mode;
+	bool auto_gain = sensor->ctrls.auto_gain->val == 1;
+	bool auto_exp =  sensor->ctrls.auto_exp->val == V4L2_EXPOSURE_AUTO;
+	unsigned long rate;
+	int ret;
+
+	if (!orig_mode)
+		orig_mode = mode;
+
+	dn_mode = mode->dn_mode;
+	orig_dn_mode = orig_mode->dn_mode;
+
+	/* auto gain and exposure must be turned off when changing modes */
+	if (auto_gain) {
+		ret = ap1302_set_autogain(sensor, false);
+		if (ret)
+			return ret;
+	}
+
+	if (auto_exp) {
+		ret = ap1302_set_autoexposure(sensor, false);
+		if (ret)
+			goto restore_auto_gain;
+	}
+
+	/*
+	 * All the formats we support have 16 bits per pixel, seems to require
+	 * the same rate than YUV, so we can just use 16 bpp all the time.
+	 */
+	rate = mode->vtot * mode->htot * 16;
+	rate *= ap1302_framerates[sensor->current_fr];
+	if (sensor->ep.bus_type == V4L2_MBUS_CSI2) {
+		rate = rate / sensor->ep.bus.mipi_csi2.num_data_lanes;
+		ret = ap1302_set_mipi_pclk(sensor, rate);
+	} else {
+		rate = rate / sensor->ep.bus.parallel.bus_width;
+		ret = ap1302_set_dvp_pclk(sensor, rate);
+	}
+
+	if (ret < 0)
+		return 0;
+
+	if ((dn_mode == SUBSAMPLING && orig_dn_mode == SCALING) ||
+	    (dn_mode == SCALING && orig_dn_mode == SUBSAMPLING)) {
+		/*
+		 * change between subsampling and scaling
+		 * go through exposure calculation
+		 */
+		ret = ap1302_set_mode_exposure_calc(sensor, mode);
+	} else {
+		/*
+		 * change inside subsampling or scaling
+		 * download firmware directly
+		 */
+		ret = ap1302_set_mode_direct(sensor, mode);
+	}
+	if (ret < 0)
+		goto restore_auto_exp_gain;
+
+	/* restore auto gain and exposure */
+	if (auto_gain)
+		ap1302_set_autogain(sensor, true);
+	if (auto_exp)
+		ap1302_set_autoexposure(sensor, true);
+
+	ret = ap1302_set_timings(sensor, mode);
+	if (ret < 0)
+		return ret;
+
+	ret = ap1302_set_binning(sensor, dn_mode != SCALING);
+	if (ret < 0)
+		return ret;
+	ret = ap1302_set_ae_target(sensor, sensor->ae_target);
+	if (ret < 0)
+		return ret;
+	ret = ap1302_get_light_freq(sensor);
+	if (ret < 0)
+		return ret;
+	ret = ap1302_set_bandingfilter(sensor);
+	if (ret < 0)
+		return ret;
+	ret = ap1302_set_virtual_channel(sensor);
+	if (ret < 0)
+		return ret;
+
+	sensor->pending_mode_change = false;
+	sensor->last_mode = mode;
+
+	return 0;
+
+restore_auto_exp_gain:
+	if (auto_exp)
+		ap1302_set_autoexposure(sensor, true);
+restore_auto_gain:
+	if (auto_gain)
+		ap1302_set_autogain(sensor, true);
+
+	return ret;
+}
+
+static int ap1302_set_framefmt(struct ap1302_dev *sensor,
+			       struct v4l2_mbus_framefmt *format);
+
+/* restore the last set video mode after chip power-on */
+static int ap1302_restore_mode(struct ap1302_dev *sensor)
+{
+	int ret;
+
+	/* first load the initial register values */
+	ret = ap1302_load_regs(sensor, &ap1302_mode_init_data);
+	if (ret < 0)
+		return ret;
+	sensor->last_mode = &ap1302_mode_init_data;
+
+	ret = ap1302_mod_reg(sensor, AP1302_REG_SYS_ROOT_DIVIDER, 0x3f,
+			     (ilog2(AP1302_SCLK2X_ROOT_DIV) << 2) |
+			     ilog2(AP1302_SCLK_ROOT_DIV));
+	if (ret)
+		return ret;
+
+	/* now restore the last capture mode */
+	ret = ap1302_set_mode(sensor);
+	if (ret < 0)
+		return ret;
+
+	return ap1302_set_framefmt(sensor, &sensor->fmt);
+}
+
+#endif
+
+
+static void ap1302_power(struct ap1302_dev *sensor, bool enable)
+{
+    printk( KERN_ALERT "**** %s %i\n", __func__, (int )__LINE__ );
+
+	gpiod_set_value_cansleep(sensor->pwdn_gpio, enable ? 0 : 1);
+}
+
+static void ap1302_reset(struct ap1302_dev *sensor)
+{
+	if (!sensor->reset_gpio)
+		return;
+
+	gpiod_set_value_cansleep(sensor->reset_gpio, 0);
+
+    printk( KERN_ALERT "**** %s %i\n", __func__, (int )__LINE__ );
+
+	/* camera power cycle */
+	ap1302_power(sensor, false);
+	usleep_range(5000, 10000);
+	ap1302_power(sensor, true);
+	usleep_range(5000, 10000);
+
+	gpiod_set_value_cansleep(sensor->reset_gpio, 1);
+	usleep_range(1000, 2000);
+
+	gpiod_set_value_cansleep(sensor->reset_gpio, 0);
+	usleep_range(20000, 25000);
+}
+
+static int ap1302_set_power_on(struct ap1302_dev *sensor)
+{
+	struct i2c_client *client = sensor->i2c_client;
+	int ret;
+
+    printk( KERN_ALERT "**** %s %i\n", __func__, (int )__LINE__ );
+
+	ret = clk_prepare_enable(sensor->xclk);
+	if (ret) {
+		dev_err(&client->dev, "%s: failed to enable clock\n",
+			__func__);
+		return ret;
+	}
+
+	ret = regulator_bulk_enable(AP1302_NUM_SUPPLIES,
+				    sensor->supplies);
+	if (ret) {
+		dev_err(&client->dev, "%s: failed to enable regulators\n",
+			__func__);
+		goto xclk_off;
+	}
+
+	ap1302_reset(sensor);
+	ap1302_power(sensor, true);
+
+	return 0;
+
+xclk_off:
+	clk_disable_unprepare(sensor->xclk);
+	return ret;
+}
+
+static void ap1302_set_power_off(struct ap1302_dev *sensor)
+{
+	ap1302_power(sensor, false);
+	regulator_bulk_disable(AP1302_NUM_SUPPLIES, sensor->supplies);
+	clk_disable_unprepare(sensor->xclk);
+}
+
+
+#if 0
+
+static int ap1302_set_power(struct ap1302_dev *sensor, bool on)
+{
+	int ret = 0;
+
+	if (on) {
+		ret = ap1302_set_power_on(sensor);
+		if (ret)
+			return ret;
+
+		ret = ap1302_restore_mode(sensor);
+		if (ret)
+			goto power_off;
+
+		/* We're done here for DVP bus, while CSI-2 needs setup. */
+		if (sensor->ep.bus_type != V4L2_MBUS_CSI2)
+			return 0;
+
+		/*
+		 * Power up MIPI HS Tx and LS Rx; 2 data lanes mode
+		 *
+		 * 0x300e = 0x40
+		 * [7:5] = 010	: 2 data lanes mode (see FIXME note in
+		 *		  "ap1302_set_stream_mipi()")
+		 * [4] = 0	: Power up MIPI HS Tx
+		 * [3] = 0	: Power up MIPI LS Rx
+		 * [2] = 0	: MIPI interface disabled
+		 */
+		ret = ap1302_write_reg(sensor,
+				       AP1302_REG_IO_MIPI_CTRL00, 0x40);
+		if (ret)
+			goto power_off;
+
+		/*
+		 * Gate clock and set LP11 in 'no packets mode' (idle)
+		 *
+		 * 0x4800 = 0x24
+		 * [5] = 1	: Gate clock when 'no packets'
+		 * [2] = 1	: MIPI bus in LP11 when 'no packets'
+		 */
+		ret = ap1302_write_reg(sensor,
+				       AP1302_REG_MIPI_CTRL00, 0x24);
+		if (ret)
+			goto power_off;
+
+		/*
+		 * Set data lanes and clock in LP11 when 'sleeping'
+		 *
+		 * 0x3019 = 0x70
+		 * [6] = 1	: MIPI data lane 2 in LP11 when 'sleeping'
+		 * [5] = 1	: MIPI data lane 1 in LP11 when 'sleeping'
+		 * [4] = 1	: MIPI clock lane in LP11 when 'sleeping'
+		 */
+		ret = ap1302_write_reg(sensor,
+				       AP1302_REG_PAD_OUTPUT00, 0x70);
+		if (ret)
+			goto power_off;
+
+		/* Give lanes some time to coax into LP11 state. */
+		usleep_range(500, 1000);
+
+	} else {
+		if (sensor->ep.bus_type == V4L2_MBUS_CSI2) {
+			/* Reset MIPI bus settings to their default values. */
+			ap1302_write_reg(sensor,
+					 AP1302_REG_IO_MIPI_CTRL00, 0x58);
+			ap1302_write_reg(sensor,
+					 AP1302_REG_MIPI_CTRL00, 0x04);
+			ap1302_write_reg(sensor,
+					 AP1302_REG_PAD_OUTPUT00, 0x00);
+		}
+
+		ap1302_set_power_off(sensor);
+	}
+
+	return 0;
+
+power_off:
+	ap1302_set_power_off(sensor);
+	return ret;
+}
+
+/* --------------- Subdev Operations --------------- */
+
+static int ap1302_s_power(struct v4l2_subdev *sd, int on)
+{
+	struct ap1302_dev *sensor = to_ap1302_dev(sd);
+	int ret = 0;
+
+	mutex_lock(&sensor->lock);
+
+	/*
+	 * If the power count is modified from 0 to != 0 or from != 0 to 0,
+	 * update the power state.
+	 */
+	if (sensor->power_count == !on) {
+		ret = ap1302_set_power(sensor, !!on);
+		if (ret)
+			goto out;
+	}
+
+	/* Update the power count. */
+	sensor->power_count += on ? 1 : -1;
+	WARN_ON(sensor->power_count < 0);
+out:
+	mutex_unlock(&sensor->lock);
+
+	if (on && !ret && sensor->power_count == 1) {
+		/* restore controls */
+		ret = v4l2_ctrl_handler_setup(&sensor->ctrls.handler);
+	}
+
+	return ret;
+}
+
+static int ap1302_try_frame_interval(struct ap1302_dev *sensor,
+				     struct v4l2_fract *fi,
+				     u32 width, u32 height)
+{
+	const struct ap1302_mode_info *mode;
+	enum ap1302_frame_rate rate = AP1302_15_FPS;
+	int minfps, maxfps, best_fps, fps;
+	int i;
+
+	minfps = ap1302_framerates[AP1302_15_FPS];
+	maxfps = ap1302_framerates[AP1302_30_FPS];
+
+	if (fi->numerator == 0) {
+		fi->denominator = maxfps;
+		fi->numerator = 1;
+		rate = AP1302_30_FPS;
+		goto find_mode;
+	}
+
+	fps = clamp_val(DIV_ROUND_CLOSEST(fi->denominator, fi->numerator),
+			minfps, maxfps);
+
+	best_fps = minfps;
+	for (i = 0; i < ARRAY_SIZE(ap1302_framerates); i++) {
+		int curr_fps = ap1302_framerates[i];
+
+		if (abs(curr_fps - fps) < abs(best_fps - fps)) {
+			best_fps = curr_fps;
+			rate = i;
+		}
+	}
+
+	fi->numerator = 1;
+	fi->denominator = best_fps;
+
+find_mode:
+	mode = ap1302_find_mode(sensor, rate, width, height, false);
+	return mode ? rate : -EINVAL;
+}
+
+static int ap1302_get_fmt(struct v4l2_subdev *sd,
+			  struct v4l2_subdev_pad_config *cfg,
+			  struct v4l2_subdev_format *format)
+{
+	struct ap1302_dev *sensor = to_ap1302_dev(sd);
+	struct v4l2_mbus_framefmt *fmt;
+
+	if (format->pad != 0)
+		return -EINVAL;
+
+	mutex_lock(&sensor->lock);
+
+	if (format->which == V4L2_SUBDEV_FORMAT_TRY)
+		fmt = v4l2_subdev_get_try_format(&sensor->sd, cfg,
+						 format->pad);
+	else
+		fmt = &sensor->fmt;
+
+	format->format = *fmt;
+
+	mutex_unlock(&sensor->lock);
+
+	return 0;
+}
+
+static int ap1302_try_fmt_internal(struct v4l2_subdev *sd,
+				   struct v4l2_mbus_framefmt *fmt,
+				   enum ap1302_frame_rate fr,
+				   const struct ap1302_mode_info **new_mode)
+{
+	struct ap1302_dev *sensor = to_ap1302_dev(sd);
+	const struct ap1302_mode_info *mode;
+	int i;
+
+	mode = ap1302_find_mode(sensor, fr, fmt->width, fmt->height, true);
+	if (!mode)
+		return -EINVAL;
+	fmt->width = mode->hact;
+	fmt->height = mode->vact;
+
+	if (new_mode)
+		*new_mode = mode;
+
+	for (i = 0; i < ARRAY_SIZE(ap1302_formats); i++)
+		if (ap1302_formats[i].code == fmt->code)
+			break;
+	if (i >= ARRAY_SIZE(ap1302_formats))
+		i = 0;
+
+	fmt->code = ap1302_formats[i].code;
+	fmt->colorspace = ap1302_formats[i].colorspace;
+	fmt->ycbcr_enc = V4L2_MAP_YCBCR_ENC_DEFAULT(fmt->colorspace);
+	fmt->quantization = V4L2_QUANTIZATION_FULL_RANGE;
+	fmt->xfer_func = V4L2_MAP_XFER_FUNC_DEFAULT(fmt->colorspace);
+
+	return 0;
+}
+
+static const s64 link_freq_menu_items[] = {
+	384000000,
+};
+
+static int ap1302_set_fmt(struct v4l2_subdev *sd,
+			  struct v4l2_subdev_pad_config *cfg,
+			  struct v4l2_subdev_format *format)
+{
+	struct ap1302_dev *sensor = to_ap1302_dev(sd);
+	const struct ap1302_mode_info *new_mode;
+	struct v4l2_mbus_framefmt *mbus_fmt = &format->format;
+	struct v4l2_mbus_framefmt *fmt;
+	int ret;
+
+	if (format->pad != 0)
+		return -EINVAL;
+
+	mutex_lock(&sensor->lock);
+
+	if (sensor->streaming) {
+		ret = -EBUSY;
+		goto out;
+	}
+
+	ret = ap1302_try_fmt_internal(sd, mbus_fmt,
+				      sensor->current_fr, &new_mode);
+	if (ret)
+		goto out;
+
+	if (format->which == V4L2_SUBDEV_FORMAT_TRY)
+		fmt = v4l2_subdev_get_try_format(sd, cfg, 0);
+	else
+		fmt = &sensor->fmt;
+
+	*fmt = *mbus_fmt;
+
+	if (new_mode != sensor->current_mode) {
+		sensor->current_mode = new_mode;
+		sensor->pending_mode_change = true;
+	}
+	if (mbus_fmt->code != sensor->fmt.code)
+		sensor->pending_fmt_change = true;
+
+out:
+	mutex_unlock(&sensor->lock);
+	return ret;
+}
+
+static int ap1302_set_framefmt(struct ap1302_dev *sensor,
+			       struct v4l2_mbus_framefmt *format)
+{
+	int ret = 0;
+	bool is_jpeg = false;
+	u8 fmt, mux;
+
+	switch (format->code) {
+	case MEDIA_BUS_FMT_UYVY8_2X8:
+		/* YUV422, UYVY */
+		fmt = 0x3f;
+		mux = AP1302_FMT_MUX_YUV422;
+		break;
+	case MEDIA_BUS_FMT_YUYV8_2X8:
+		/* YUV422, YUYV */
+		fmt = 0x30;
+		mux = AP1302_FMT_MUX_YUV422;
+		break;
+	case MEDIA_BUS_FMT_RGB565_2X8_LE:
+		/* RGB565 {g[2:0],b[4:0]},{r[4:0],g[5:3]} */
+		fmt = 0x6F;
+		mux = AP1302_FMT_MUX_RGB;
+		break;
+	case MEDIA_BUS_FMT_RGB565_2X8_BE:
+		/* RGB565 {r[4:0],g[5:3]},{g[2:0],b[4:0]} */
+		fmt = 0x61;
+		mux = AP1302_FMT_MUX_RGB;
+		break;
+	case MEDIA_BUS_FMT_JPEG_1X8:
+		/* YUV422, YUYV */
+		fmt = 0x30;
+		mux = AP1302_FMT_MUX_YUV422;
+		is_jpeg = true;
+		break;
+	case MEDIA_BUS_FMT_SBGGR8_1X8:
+		/* Raw, BGBG... / GRGR... */
+		fmt = 0x00;
+		mux = AP1302_FMT_MUX_RAW_DPC;
+		break;
+	case MEDIA_BUS_FMT_SGBRG8_1X8:
+		/* Raw bayer, GBGB... / RGRG... */
+		fmt = 0x01;
+		mux = AP1302_FMT_MUX_RAW_DPC;
+		break;
+	case MEDIA_BUS_FMT_SGRBG8_1X8:
+		/* Raw bayer, GRGR... / BGBG... */
+		fmt = 0x02;
+		mux = AP1302_FMT_MUX_RAW_DPC;
+		break;
+	case MEDIA_BUS_FMT_SRGGB8_1X8:
+		/* Raw bayer, RGRG... / GBGB... */
+		fmt = 0x03;
+		mux = AP1302_FMT_MUX_RAW_DPC;
+		break;
+	default:
+		return -EINVAL;
+	}
+
+	/* FORMAT CONTROL00: YUV and RGB formatting */
+	ret = ap1302_write_reg(sensor, AP1302_REG_FORMAT_CONTROL00, fmt);
+	if (ret)
+		return ret;
+
+	/* FORMAT MUX CONTROL: ISP YUV or RGB */
+	ret = ap1302_write_reg(sensor, AP1302_REG_ISP_FORMAT_MUX_CTRL, mux);
+	if (ret)
+		return ret;
+
+	/*
+	 * TIMING TC REG21:
+	 * - [5]:	JPEG enable
+	 */
+	ret = ap1302_mod_reg(sensor, AP1302_REG_TIMING_TC_REG21,
+			     BIT(5), is_jpeg ? BIT(5) : 0);
+	if (ret)
+		return ret;
+
+	/*
+	 * SYSTEM RESET02:
+	 * - [4]:	Reset JFIFO
+	 * - [3]:	Reset SFIFO
+	 * - [2]:	Reset JPEG
+	 */
+	ret = ap1302_mod_reg(sensor, AP1302_REG_SYS_RESET02,
+			     BIT(4) | BIT(3) | BIT(2),
+			     is_jpeg ? 0 : (BIT(4) | BIT(3) | BIT(2)));
+	if (ret)
+		return ret;
+
+	/*
+	 * CLOCK ENABLE02:
+	 * - [5]:	Enable JPEG 2x clock
+	 * - [3]:	Enable JPEG clock
+	 */
+	return ap1302_mod_reg(sensor, AP1302_REG_SYS_CLOCK_ENABLE02,
+			      BIT(5) | BIT(3),
+			      is_jpeg ? (BIT(5) | BIT(3)) : 0);
+}
+
+/*
+ * Sensor Controls.
+ */
+
+static int ap1302_set_ctrl_hue(struct ap1302_dev *sensor, int value)
+{
+	int ret;
+
+	if (value) {
+		ret = ap1302_mod_reg(sensor, AP1302_REG_SDE_CTRL0,
+				     BIT(0), BIT(0));
+		if (ret)
+			return ret;
+		ret = ap1302_write_reg16(sensor, AP1302_REG_SDE_CTRL1, value);
+	} else {
+		ret = ap1302_mod_reg(sensor, AP1302_REG_SDE_CTRL0, BIT(0), 0);
+	}
+
+	return ret;
+}
+
+static int ap1302_set_ctrl_contrast(struct ap1302_dev *sensor, int value)
+{
+	int ret;
+
+	if (value) {
+		ret = ap1302_mod_reg(sensor, AP1302_REG_SDE_CTRL0,
+				     BIT(2), BIT(2));
+		if (ret)
+			return ret;
+		ret = ap1302_write_reg(sensor, AP1302_REG_SDE_CTRL5,
+				       value & 0xff);
+	} else {
+		ret = ap1302_mod_reg(sensor, AP1302_REG_SDE_CTRL0, BIT(2), 0);
+	}
+
+	return ret;
+}
+
+static int ap1302_set_ctrl_saturation(struct ap1302_dev *sensor, int value)
+{
+	int ret;
+
+	if (value) {
+		ret = ap1302_mod_reg(sensor, AP1302_REG_SDE_CTRL0,
+				     BIT(1), BIT(1));
+		if (ret)
+			return ret;
+		ret = ap1302_write_reg(sensor, AP1302_REG_SDE_CTRL3,
+				       value & 0xff);
+		if (ret)
+			return ret;
+		ret = ap1302_write_reg(sensor, AP1302_REG_SDE_CTRL4,
+				       value & 0xff);
+	} else {
+		ret = ap1302_mod_reg(sensor, AP1302_REG_SDE_CTRL0, BIT(1), 0);
+	}
+
+	return ret;
+}
+
+static int ap1302_set_ctrl_white_balance(struct ap1302_dev *sensor, int awb)
+{
+	int ret;
+
+	ret = ap1302_mod_reg(sensor, AP1302_REG_AWB_MANUAL_CTRL,
+			     BIT(0), awb ? 0 : 1);
+	if (ret)
+		return ret;
+
+	if (!awb) {
+		u16 red = (u16)sensor->ctrls.red_balance->val;
+		u16 blue = (u16)sensor->ctrls.blue_balance->val;
+
+		ret = ap1302_write_reg16(sensor, AP1302_REG_AWB_R_GAIN, red);
+		if (ret)
+			return ret;
+		ret = ap1302_write_reg16(sensor, AP1302_REG_AWB_B_GAIN, blue);
+	}
+
+	return ret;
+}
+
+static int ap1302_set_ctrl_exposure(struct ap1302_dev *sensor,
+				    enum v4l2_exposure_auto_type auto_exposure)
+{
+	struct ap1302_ctrls *ctrls = &sensor->ctrls;
+	bool auto_exp = (auto_exposure == V4L2_EXPOSURE_AUTO);
+	int ret = 0;
+
+	if (ctrls->auto_exp->is_new) {
+		ret = ap1302_set_autoexposure(sensor, auto_exp);
+		if (ret)
+			return ret;
+	}
+
+	if (!auto_exp && ctrls->exposure->is_new) {
+		u16 max_exp;
+
+		ret = ap1302_read_reg16(sensor, AP1302_REG_AEC_PK_VTS,
+					&max_exp);
+		if (ret)
+			return ret;
+		ret = ap1302_get_vts(sensor);
+		if (ret < 0)
+			return ret;
+		max_exp += ret;
+		ret = 0;
+
+		if (ctrls->exposure->val < max_exp)
+			ret = ap1302_set_exposure(sensor, ctrls->exposure->val);
+	}
+
+	return ret;
+}
+
+static int ap1302_set_ctrl_gain(struct ap1302_dev *sensor, bool auto_gain)
+{
+	struct ap1302_ctrls *ctrls = &sensor->ctrls;
+	int ret = 0;
+
+	if (ctrls->auto_gain->is_new) {
+		ret = ap1302_set_autogain(sensor, auto_gain);
+		if (ret)
+			return ret;
+	}
+
+	if (!auto_gain && ctrls->gain->is_new)
+		ret = ap1302_set_gain(sensor, ctrls->gain->val);
+
+	return ret;
+}
+
+static const char * const test_pattern_menu[] = {
+	"Disabled",
+	"Color bars",
+	"Color bars w/ rolling bar",
+	"Color squares",
+	"Color squares w/ rolling bar",
+};
+
+#define AP1302_TEST_ENABLE		BIT(7)
+#define AP1302_TEST_ROLLING		BIT(6)	/* rolling horizontal bar */
+#define AP1302_TEST_TRANSPARENT		BIT(5)
+#define AP1302_TEST_SQUARE_BW		BIT(4)	/* black & white squares */
+#define AP1302_TEST_BAR_STANDARD	(0 << 2)
+#define AP1302_TEST_BAR_VERT_CHANGE_1	(1 << 2)
+#define AP1302_TEST_BAR_HOR_CHANGE	(2 << 2)
+#define AP1302_TEST_BAR_VERT_CHANGE_2	(3 << 2)
+#define AP1302_TEST_BAR			(0 << 0)
+#define AP1302_TEST_RANDOM		(1 << 0)
+#define AP1302_TEST_SQUARE		(2 << 0)
+#define AP1302_TEST_BLACK		(3 << 0)
+
+static const u8 test_pattern_val[] = {
+	0,
+	AP1302_TEST_ENABLE | AP1302_TEST_BAR_VERT_CHANGE_1 |
+		AP1302_TEST_BAR,
+	AP1302_TEST_ENABLE | AP1302_TEST_ROLLING |
+		AP1302_TEST_BAR_VERT_CHANGE_1 | AP1302_TEST_BAR,
+	AP1302_TEST_ENABLE | AP1302_TEST_SQUARE,
+	AP1302_TEST_ENABLE | AP1302_TEST_ROLLING | AP1302_TEST_SQUARE,
+};
+
+static int ap1302_set_ctrl_test_pattern(struct ap1302_dev *sensor, int value)
+{
+	return ap1302_write_reg(sensor, AP1302_REG_PRE_ISP_TEST_SET1,
+				test_pattern_val[value]);
+}
+
+static int ap1302_set_ctrl_light_freq(struct ap1302_dev *sensor, int value)
+{
+	int ret;
+
+	ret = ap1302_mod_reg(sensor, AP1302_REG_HZ5060_CTRL01, BIT(7),
+			     (value == V4L2_CID_POWER_LINE_FREQUENCY_AUTO) ?
+			     0 : BIT(7));
+	if (ret)
+		return ret;
+
+	return ap1302_mod_reg(sensor, AP1302_REG_HZ5060_CTRL00, BIT(2),
+			      (value == V4L2_CID_POWER_LINE_FREQUENCY_50HZ) ?
+			      BIT(2) : 0);
+}
+
+static int ap1302_set_ctrl_hflip(struct ap1302_dev *sensor, int value)
+{
+	/*
+	 * If sensor is mounted upside down, mirror logic is inversed.
+	 *
+	 * Sensor is a BSI (Back Side Illuminated) one,
+	 * so image captured is physically mirrored.
+	 * This is why mirror logic is inversed in
+	 * order to cancel this mirror effect.
+	 */
+
+	/*
+	 * TIMING TC REG21:
+	 * - [2]:	ISP mirror
+	 * - [1]:	Sensor mirror
+	 */
+	return ap1302_mod_reg(sensor, AP1302_REG_TIMING_TC_REG21,
+			      BIT(2) | BIT(1),
+			      (!(value ^ sensor->upside_down)) ?
+			      (BIT(2) | BIT(1)) : 0);
+}
+
+static int ap1302_set_ctrl_vflip(struct ap1302_dev *sensor, int value)
+{
+	/* If sensor is mounted upside down, flip logic is inversed */
+
+	/*
+	 * TIMING TC REG20:
+	 * - [2]:	ISP vflip
+	 * - [1]:	Sensor vflip
+	 */
+	return ap1302_mod_reg(sensor, AP1302_REG_TIMING_TC_REG20,
+			      BIT(2) | BIT(1),
+			      (value ^ sensor->upside_down) ?
+			      (BIT(2) | BIT(1)) : 0);
+}
+
+static int ap1302_g_volatile_ctrl(struct v4l2_ctrl *ctrl)
+{
+	struct v4l2_subdev *sd = ctrl_to_sd(ctrl);
+	struct ap1302_dev *sensor = to_ap1302_dev(sd);
+	int val;
+
+	/* v4l2_ctrl_lock() locks our own mutex */
+
+	switch (ctrl->id) {
+	case V4L2_CID_AUTOGAIN:
+		val = ap1302_get_gain(sensor);
+		if (val < 0)
+			return val;
+		sensor->ctrls.gain->val = val;
+		break;
+	case V4L2_CID_EXPOSURE_AUTO:
+		val = ap1302_get_exposure(sensor);
+		if (val < 0)
+			return val;
+		sensor->ctrls.exposure->val = val;
+		break;
+	}
+
+	return 0;
+}
+
+static int ap1302_s_ctrl(struct v4l2_ctrl *ctrl)
+{
+	struct v4l2_subdev *sd = ctrl_to_sd(ctrl);
+	struct ap1302_dev *sensor = to_ap1302_dev(sd);
+	int ret;
+
+	/* v4l2_ctrl_lock() locks our own mutex */
+
+	/*
+	 * If the device is not powered up by the host driver do
+	 * not apply any controls to H/W at this time. Instead
+	 * the controls will be restored right after power-up.
+	 */
+	if (sensor->power_count == 0)
+		return 0;
+
+	switch (ctrl->id) {
+	case V4L2_CID_AUTOGAIN:
+		ret = ap1302_set_ctrl_gain(sensor, ctrl->val);
+		break;
+	case V4L2_CID_EXPOSURE_AUTO:
+		ret = ap1302_set_ctrl_exposure(sensor, ctrl->val);
+		break;
+	case V4L2_CID_AUTO_WHITE_BALANCE:
+		ret = ap1302_set_ctrl_white_balance(sensor, ctrl->val);
+		break;
+	case V4L2_CID_HUE:
+		ret = ap1302_set_ctrl_hue(sensor, ctrl->val);
+		break;
+	case V4L2_CID_CONTRAST:
+		ret = ap1302_set_ctrl_contrast(sensor, ctrl->val);
+		break;
+	case V4L2_CID_SATURATION:
+		ret = ap1302_set_ctrl_saturation(sensor, ctrl->val);
+		break;
+	case V4L2_CID_TEST_PATTERN:
+		ret = ap1302_set_ctrl_test_pattern(sensor, ctrl->val);
+		break;
+	case V4L2_CID_POWER_LINE_FREQUENCY:
+		ret = ap1302_set_ctrl_light_freq(sensor, ctrl->val);
+		break;
+	case V4L2_CID_HFLIP:
+		ret = ap1302_set_ctrl_hflip(sensor, ctrl->val);
+		break;
+	case V4L2_CID_VFLIP:
+		ret = ap1302_set_ctrl_vflip(sensor, ctrl->val);
+		break;
+	default:
+		ret = -EINVAL;
+		break;
+	}
+
+	return ret;
+}
+
+static const struct v4l2_ctrl_ops ap1302_ctrl_ops = {
+	.g_volatile_ctrl = ap1302_g_volatile_ctrl,
+	.s_ctrl = ap1302_s_ctrl,
+};
+
+static int ap1302_init_controls(struct ap1302_dev *sensor)
+{
+	const struct v4l2_ctrl_ops *ops = &ap1302_ctrl_ops;
+	struct ap1302_ctrls *ctrls = &sensor->ctrls;
+	struct v4l2_ctrl_handler *hdl = &ctrls->handler;
+	int ret;
+
+	v4l2_ctrl_handler_init(hdl, 32);
+
+	/* we can use our own mutex for the ctrl lock */
+	hdl->lock = &sensor->lock;
+
+	/* Auto/manual white balance */
+	ctrls->auto_wb = v4l2_ctrl_new_std(hdl, ops,
+					   V4L2_CID_AUTO_WHITE_BALANCE,
+					   0, 1, 1, 1);
+	ctrls->blue_balance = v4l2_ctrl_new_std(hdl, ops, V4L2_CID_BLUE_BALANCE,
+						0, 4095, 1, 0);
+	ctrls->red_balance = v4l2_ctrl_new_std(hdl, ops, V4L2_CID_RED_BALANCE,
+					       0, 4095, 1, 0);
+	/* Auto/manual exposure */
+	ctrls->auto_exp = v4l2_ctrl_new_std_menu(hdl, ops,
+						 V4L2_CID_EXPOSURE_AUTO,
+						 V4L2_EXPOSURE_MANUAL, 0,
+						 V4L2_EXPOSURE_AUTO);
+	ctrls->exposure = v4l2_ctrl_new_std(hdl, ops, V4L2_CID_EXPOSURE,
+					    0, 65535, 1, 0);
+	/* Auto/manual gain */
+	ctrls->auto_gain = v4l2_ctrl_new_std(hdl, ops, V4L2_CID_AUTOGAIN,
+					     0, 1, 1, 1);
+	ctrls->gain = v4l2_ctrl_new_std(hdl, ops, V4L2_CID_GAIN,
+					0, 1023, 1, 0);
+
+	ctrls->saturation = v4l2_ctrl_new_std(hdl, ops, V4L2_CID_SATURATION,
+					      0, 255, 1, 64);
+	ctrls->hue = v4l2_ctrl_new_std(hdl, ops, V4L2_CID_HUE,
+				       0, 359, 1, 0);
+	ctrls->contrast = v4l2_ctrl_new_std(hdl, ops, V4L2_CID_CONTRAST,
+					    0, 255, 1, 0);
+	ctrls->test_pattern =
+		v4l2_ctrl_new_std_menu_items(hdl, ops, V4L2_CID_TEST_PATTERN,
+					     ARRAY_SIZE(test_pattern_menu) - 1,
+					     0, 0, test_pattern_menu);
+	ctrls->hflip = v4l2_ctrl_new_std(hdl, ops, V4L2_CID_HFLIP,
+					 0, 1, 1, 0);
+	ctrls->vflip = v4l2_ctrl_new_std(hdl, ops, V4L2_CID_VFLIP,
+					 0, 1, 1, 0);
+
+	ctrls->light_freq =
+		v4l2_ctrl_new_std_menu(hdl, ops,
+				       V4L2_CID_POWER_LINE_FREQUENCY,
+				       V4L2_CID_POWER_LINE_FREQUENCY_AUTO, 0,
+				       V4L2_CID_POWER_LINE_FREQUENCY_50HZ);
+
+	ctrls->link_freq = v4l2_ctrl_new_int_menu(hdl, ops, V4L2_CID_LINK_FREQ,
+						  0, 0, link_freq_menu_items);
+	if (ctrls->link_freq)
+		ctrls->link_freq->flags |= V4L2_CTRL_FLAG_READ_ONLY;
+
+	if (hdl->error) {
+		ret = hdl->error;
+		goto free_ctrls;
+	}
+
+	ctrls->gain->flags |= V4L2_CTRL_FLAG_VOLATILE;
+	ctrls->exposure->flags |= V4L2_CTRL_FLAG_VOLATILE;
+
+	v4l2_ctrl_auto_cluster(3, &ctrls->auto_wb, 0, false);
+	v4l2_ctrl_auto_cluster(2, &ctrls->auto_gain, 0, true);
+	v4l2_ctrl_auto_cluster(2, &ctrls->auto_exp, 1, true);
+
+	sensor->sd.ctrl_handler = hdl;
+	return 0;
+
+free_ctrls:
+	v4l2_ctrl_handler_free(hdl);
+	return ret;
+}
+
+static int ap1302_enum_frame_size(struct v4l2_subdev *sd,
+				  struct v4l2_subdev_pad_config *cfg,
+				  struct v4l2_subdev_frame_size_enum *fse)
+{
+	if (fse->pad != 0)
+		return -EINVAL;
+	if (fse->index >= AP1302_NUM_MODES)
+		return -EINVAL;
+
+	fse->min_width =
+		ap1302_mode_data[fse->index].hact;
+	fse->max_width = fse->min_width;
+	fse->min_height =
+		ap1302_mode_data[fse->index].vact;
+	fse->max_height = fse->min_height;
+
+	return 0;
+}
+
+static int ap1302_enum_frame_interval(
+	struct v4l2_subdev *sd,
+	struct v4l2_subdev_pad_config *cfg,
+	struct v4l2_subdev_frame_interval_enum *fie)
+{
+	struct ap1302_dev *sensor = to_ap1302_dev(sd);
+	struct v4l2_fract tpf;
+	int ret;
+
+	if (fie->pad != 0)
+		return -EINVAL;
+	if (fie->index >= AP1302_NUM_FRAMERATES)
+		return -EINVAL;
+
+	tpf.numerator = 1;
+	tpf.denominator = ap1302_framerates[fie->index];
+
+	ret = ap1302_try_frame_interval(sensor, &tpf,
+					fie->width, fie->height);
+	if (ret < 0)
+		return -EINVAL;
+
+	fie->interval = tpf;
+	return 0;
+}
+
+static int ap1302_g_frame_interval(struct v4l2_subdev *sd,
+				   struct v4l2_subdev_frame_interval *fi)
+{
+	struct ap1302_dev *sensor = to_ap1302_dev(sd);
+
+	mutex_lock(&sensor->lock);
+	fi->interval = sensor->frame_interval;
+	mutex_unlock(&sensor->lock);
+
+	return 0;
+}
+
+static int ap1302_s_frame_interval(struct v4l2_subdev *sd,
+				   struct v4l2_subdev_frame_interval *fi)
+{
+	struct ap1302_dev *sensor = to_ap1302_dev(sd);
+	const struct ap1302_mode_info *mode;
+	int frame_rate, ret = 0;
+
+	if (fi->pad != 0)
+		return -EINVAL;
+
+	mutex_lock(&sensor->lock);
+
+	if (sensor->streaming) {
+		ret = -EBUSY;
+		goto out;
+	}
+
+	mode = sensor->current_mode;
+
+	frame_rate = ap1302_try_frame_interval(sensor, &fi->interval,
+					       mode->hact, mode->vact);
+	if (frame_rate < 0) {
+		/* Always return a valid frame interval value */
+		fi->interval = sensor->frame_interval;
+		goto out;
+	}
+
+	mode = ap1302_find_mode(sensor, frame_rate, mode->hact,
+				mode->vact, true);
+	if (!mode) {
+		ret = -EINVAL;
+		goto out;
+	}
+
+	if (mode != sensor->current_mode ||
+	    frame_rate != sensor->current_fr) {
+		sensor->current_fr = frame_rate;
+		sensor->frame_interval = fi->interval;
+		sensor->current_mode = mode;
+		sensor->pending_mode_change = true;
+	}
+out:
+	mutex_unlock(&sensor->lock);
+	return ret;
+}
+
+static int ap1302_enum_mbus_code(struct v4l2_subdev *sd,
+				 struct v4l2_subdev_pad_config *cfg,
+				 struct v4l2_subdev_mbus_code_enum *code)
+{
+	if (code->pad != 0)
+		return -EINVAL;
+	if (code->index >= ARRAY_SIZE(ap1302_formats))
+		return -EINVAL;
+
+	code->code = ap1302_formats[code->index].code;
+	return 0;
+}
+
+static int ap1302_s_stream(struct v4l2_subdev *sd, int enable)
+{
+	struct ap1302_dev *sensor = to_ap1302_dev(sd);
+	int ret = 0;
+
+	mutex_lock(&sensor->lock);
+
+	if (sensor->streaming == !enable) {
+		if (enable && sensor->pending_mode_change) {
+			ret = ap1302_set_mode(sensor);
+			if (ret)
+				goto out;
+		}
+
+		if (enable && sensor->pending_fmt_change) {
+			ret = ap1302_set_framefmt(sensor, &sensor->fmt);
+			if (ret)
+				goto out;
+			sensor->pending_fmt_change = false;
+		}
+
+		if (sensor->ep.bus_type == V4L2_MBUS_CSI2)
+			ret = ap1302_set_stream_mipi(sensor, enable);
+		else
+			ret = ap1302_set_stream_dvp(sensor, enable);
+
+		if (!ret)
+			sensor->streaming = enable;
+	}
+
+out:
+	mutex_unlock(&sensor->lock);
+	return ret;
+}
+
+#endif
+
+
+static const struct v4l2_subdev_core_ops ap1302_core_ops = {
+#if 0
+	.s_power = ap1302_s_power,
+	.log_status = v4l2_ctrl_subdev_log_status,
+	.subscribe_event = v4l2_ctrl_subdev_subscribe_event,
+	.unsubscribe_event = v4l2_event_subdev_unsubscribe,
+#else
+	.s_power = NULL,
+	.log_status = NULL,
+	.subscribe_event = NULL,
+	.unsubscribe_event = NULL,
+#endif
+};
+
+static const struct v4l2_subdev_video_ops ap1302_video_ops = {
+#if 0
+	.g_frame_interval = ap1302_g_frame_interval,
+	.s_frame_interval = ap1302_s_frame_interval,
+	.s_stream = ap1302_s_stream,
+#else
+	.g_frame_interval = NULL,
+	.s_frame_interval = NULL,
+	.s_stream = NULL
+#endif
+};
+
+static const struct v4l2_subdev_pad_ops ap1302_pad_ops = {
+#if 0
+	.enum_mbus_code = ap1302_enum_mbus_code,
+	.get_fmt = ap1302_get_fmt,
+	.set_fmt = ap1302_set_fmt,
+	.enum_frame_size = ap1302_enum_frame_size,
+	.enum_frame_interval = ap1302_enum_frame_interval,
+#else
+	.enum_mbus_code = NULL,
+	.get_fmt = NULL,
+	.set_fmt = NULL,
+	.enum_frame_size = NULL,
+	.enum_frame_interval = NULL
+#endif
+};
+
+static const struct v4l2_subdev_ops ap1302_subdev_ops = {
+#if 0
+	.core = &ap1302_core_ops,
+	.video = &ap1302_video_ops,
+	.pad = &ap1302_pad_ops,
+#else
+	.core = NULL,
+	.video = NULL,
+	.pad = NULL,
+#endif
+};
+
+static int ap1302_get_regulators(struct ap1302_dev *sensor)
+{
+	int i;
+
+	for (i = 0; i < AP1302_NUM_SUPPLIES; i++)
+		sensor->supplies[i].supply = ap1302_supply_name[i];
+
+	return devm_regulator_bulk_get(&sensor->i2c_client->dev,
+				       AP1302_NUM_SUPPLIES,
+				       sensor->supplies);
+}
+
+
+static int ap1302_check_chip_id(struct ap1302_dev *sensor)
+{
+	struct i2c_client *client = sensor->i2c_client;
+	int ret = 0;
+	u16 val;
+
+	ret = ap1302_set_power_on(sensor);
+	if (ret)
+		return ret;
+
+	ret = ap1302_read_reg16(sensor, AP1302_REG_MFR, &val);
+	if (ret) {
+		dev_err(&client->dev, "%s: failed to read mfr identifier\n",
+			__func__);
+		goto power_off;
+	}
+
+	if ( val != AP1302_CHIP_MFR ) {
+		ret = -EINVAL;
+		goto power_off;
+	}
+
+	ret = ap1302_read_reg16(sensor, AP1302_REG_CHIP_ID, &val);
+	if (ret) {
+		dev_err(&client->dev, "%s: failed to read chip identifier\n",
+			__func__);
+		goto power_off;
+	}
+
+	if ( val != AP1302_CHIP_VERSION ) {
+		ret = -EINVAL;
+		goto power_off;
+	}
+
+    printk( KERN_ALERT "**** %s %i  CHIP ID: 0x%04x\n", __func__, (int )__LINE__, (int )val );
+
+power_off:
+	ap1302_set_power_off(sensor);
+	return ret;
+}
+
+static int ap1302_probe(struct i2c_client *client,
+			const struct i2c_device_id *id)
+{
+	struct device *dev = &client->dev;
+	struct fwnode_handle *endpoint;
+	struct ap1302_dev *sensor;
+	struct v4l2_mbus_framefmt *fmt;
+	u32 rotation;
+	int ret;
+
+	sensor = devm_kzalloc(dev, sizeof(*sensor), GFP_KERNEL);
+	if (!sensor)
+		return -ENOMEM;
+
+	sensor->i2c_client = client;
+
+    printk( KERN_ALERT "**** %s %i\n", __func__, (int )__LINE__ );
+
+	/* get system clock (xclk) */
+	sensor->xclk = devm_clk_get(dev, "xclk");
+	if (IS_ERR(sensor->xclk)) {
+		dev_err(dev, "failed to get xclk\n");
+		return PTR_ERR(sensor->xclk);
+	}
+
+    printk( KERN_ALERT "**** %s %i\n", __func__, (int )__LINE__ );
+
+	sensor->xclk_freq = clk_get_rate(sensor->xclk);
+	if (sensor->xclk_freq < AP1302_XCLK_MIN ||
+	    sensor->xclk_freq > AP1302_XCLK_MAX) {
+		dev_err(dev, "xclk frequency out of range: %d Hz\n",
+			sensor->xclk_freq);
+		return -EINVAL;
+	}
+
+	/* request optional power down pin */
+	sensor->pwdn_gpio = devm_gpiod_get_optional(dev, "powerdown",
+						    GPIOD_OUT_HIGH);
+	if (IS_ERR(sensor->pwdn_gpio))
+		printk( KERN_ALERT "**** %s %i  ERROR\n", __func__, (int )__LINE__ );
+
+	/* request optional reset pin */
+	sensor->reset_gpio = devm_gpiod_get_optional(dev, "reset",
+						     GPIOD_OUT_LOW);
+	if (IS_ERR(sensor->reset_gpio))
+		printk( KERN_ALERT "**** %s %i  ERROR\n", __func__, (int )__LINE__ );
+
+	/* request optional power down pin */
+	sensor->i2csel_gpio = devm_gpiod_get_optional(dev, "i2csel",
+						    GPIOD_OUT_HIGH);
+	if (IS_ERR(sensor->i2csel_gpio))
+		printk( KERN_ALERT "**** %s %i  ERROR\n", __func__, (int )__LINE__ );
+	else
+		gpiod_set_value_cansleep(sensor->i2csel_gpio, 1);
+
+	ret = ap1302_get_regulators(sensor);
+	if (ret)
+		return ret;
+
+    printk( KERN_ALERT "**** %s %i\n", __func__, (int )__LINE__ );
+
+	mutex_init(&sensor->lock);
+
+	ret = ap1302_check_chip_id(sensor);
+	if (ret)
+		return ret;
+
+    printk( KERN_ALERT "**** %s %i\n", __func__, (int )__LINE__ );
+
+
+#if 0
+	/*
+	 * default init sequence initialize sensor to
+	 * YUV422 UYVY VGA@30fps
+	 */
+	fmt = &sensor->fmt;
+	fmt->code = MEDIA_BUS_FMT_UYVY8_2X8;
+	fmt->colorspace = V4L2_COLORSPACE_SRGB;
+	fmt->ycbcr_enc = V4L2_MAP_YCBCR_ENC_DEFAULT(fmt->colorspace);
+	fmt->quantization = V4L2_QUANTIZATION_FULL_RANGE;
+	fmt->xfer_func = V4L2_MAP_XFER_FUNC_DEFAULT(fmt->colorspace);
+	fmt->width = 640;
+	fmt->height = 480;
+	fmt->field = V4L2_FIELD_NONE;
+	sensor->frame_interval.numerator = 1;
+	sensor->frame_interval.denominator = ap1302_framerates[AP1302_30_FPS];
+	sensor->current_fr = AP1302_30_FPS;
+	sensor->current_mode =
+		&ap1302_mode_data[AP1302_MODE_VGA_640_480];
+	sensor->last_mode = sensor->current_mode;
+
+	sensor->ae_target = 52;
+
+	sensor->focus_state = FOCUS_NOT_INITIALIZED;
+
+	/* optional indication of physical rotation of sensor */
+	ret = fwnode_property_read_u32(dev_fwnode(&client->dev), "rotation",
+				       &rotation);
+	if (!ret) {
+		switch (rotation) {
+		case 180:
+			sensor->upside_down = true;
+			/* fall through */
+		case 0:
+			break;
+		default:
+			dev_warn(dev, "%u degrees rotation is not supported, ignoring...\n",
+				 rotation);
+		}
+	}
+
+	endpoint = fwnode_graph_get_next_endpoint(dev_fwnode(&client->dev),
+						  NULL);
+	if (!endpoint) {
+		dev_err(dev, "endpoint node not found\n");
+		return -EINVAL;
+	}
+
+	ret = v4l2_fwnode_endpoint_parse(endpoint, &sensor->ep);
+	fwnode_handle_put(endpoint);
+	if (ret) {
+		dev_err(dev, "Could not parse endpoint\n");
+		return ret;
+	}
+
+	/* get system clock (xclk) */
+	sensor->xclk = devm_clk_get(dev, "xclk");
+	if (IS_ERR(sensor->xclk)) {
+		dev_err(dev, "failed to get xclk\n");
+		return PTR_ERR(sensor->xclk);
+	}
+
+	sensor->xclk_freq = clk_get_rate(sensor->xclk);
+	if (sensor->xclk_freq < AP1302_XCLK_MIN ||
+	    sensor->xclk_freq > AP1302_XCLK_MAX) {
+		dev_err(dev, "xclk frequency out of range: %d Hz\n",
+			sensor->xclk_freq);
+		return -EINVAL;
+	}
+
+	/* request optional power down pin */
+	sensor->pwdn_gpio = devm_gpiod_get_optional(dev, "powerdown",
+						    GPIOD_OUT_HIGH);
+	/* request optional reset pin */
+	sensor->reset_gpio = devm_gpiod_get_optional(dev, "reset",
+						     GPIOD_OUT_HIGH);
+
+	v4l2_i2c_subdev_init(&sensor->sd, client, &ap1302_subdev_ops);
+
+	sensor->sd.flags |= V4L2_SUBDEV_FL_HAS_DEVNODE |
+			    V4L2_SUBDEV_FL_HAS_EVENTS;
+	sensor->pad.flags = MEDIA_PAD_FL_SOURCE;
+	sensor->sd.entity.function = MEDIA_ENT_F_CAM_SENSOR;
+	ret = media_entity_pads_init(&sensor->sd.entity, 1, &sensor->pad);
+	if (ret)
+		return ret;
+
+	ret = ap1302_get_regulators(sensor);
+	if (ret)
+		return ret;
+
+	mutex_init(&sensor->lock);
+
+	ret = ap1302_check_chip_id(sensor);
+	if (ret)
+		goto entity_cleanup;
+
+	ret = ap1302_init_controls(sensor);
+	if (ret)
+		goto entity_cleanup;
+
+	ret = v4l2_async_register_subdev(&sensor->sd);
+	if (ret)
+		goto free_ctrls;
+
+	return 0;
+
+free_ctrls:
+	v4l2_ctrl_handler_free(&sensor->ctrls.handler);
+entity_cleanup:
+	mutex_destroy(&sensor->lock);
+	media_entity_cleanup(&sensor->sd.entity);
+	return ret;
+#endif
+
+	return -EINVAL;
+}
+
+static int ap1302_remove(struct i2c_client *client)
+{
+	struct v4l2_subdev *sd = i2c_get_clientdata(client);
+	struct ap1302_dev *sensor = to_ap1302_dev(sd);
+
+	v4l2_async_unregister_subdev(&sensor->sd);
+	mutex_destroy(&sensor->lock);
+	media_entity_cleanup(&sensor->sd.entity);
+	v4l2_ctrl_handler_free(&sensor->ctrls.handler);
+
+	return 0;
+}
+
+static const struct i2c_device_id ap1302_id[] = {
+	{"ap1302", 0},
+	{},
+};
+MODULE_DEVICE_TABLE(i2c, ap1302_id);
+
+static const struct of_device_id ap1302_dt_ids[] = {
+	{ .compatible = "on,ap1302" },
+	{ /* sentinel */ }
+};
+MODULE_DEVICE_TABLE(of, ap1302_dt_ids);
+
+static struct i2c_driver ap1302_i2c_driver = {
+	.driver = {
+		.name  = "ap1302",
+		.of_match_table	= ap1302_dt_ids,
+	},
+	.id_table = ap1302_id,
+	.probe    = ap1302_probe,
+	.remove   = ap1302_remove,
+};
+
+module_i2c_driver(ap1302_i2c_driver);
+
+MODULE_DESCRIPTION("AP1302 MIPI Camera Subdev Driver");
+MODULE_LICENSE("GPL");
diff -Naurw ./drivers/media/i2c/ap1302_fw.h ../kernel-source/drivers/media/i2c/ap1302_fw.h
--- ./drivers/media/i2c/ap1302_fw.h	1970-01-01 01:00:00.000000000 +0100
+++ ../kernel-source/drivers/media/i2c/ap1302_fw.h	2020-02-14 11:25:35.340241905 +0100
@@ -0,0 +1,4706 @@
+/*
+ * ap1302 - OnSemi AP1302 ISP firmware
+ */
+
+#ifndef _AP1302_FW_
+#define _AP1302_FW
+
+
+// Initializing AP1302 with bootdata from C:\Aptina Imaging\apps_data\AP1302-REV2\AR1335-Headboard.xml
+static const u16 ap1302_fw_bootdata1[ ] = {
+    0x8000,
+    0x0500, 0x03F0, 0x0000, 0x0000, 0x0000, 0x03E4, 0x54A2, 0x0B33,
+    0x543E, 0x0007, 0x71E4, 0x0C00, 0x71DC, 0x0000, 0x5002, 0x029C,
+    0x501C, 0x0F00, 0x502B, 0x0002, 0x0040, 0x0006, 0x503E, 0x0001,
+    0x5018, 0xFD9A, 0x501F, 0x0006, 0x0000, 0x0001, 0x0100, 0x0002,
+    0x0080, 0x0000, 0x502E, 0x0100, 0x5045, 0x0002, 0x1000, 0x0033,
+    0x5041, 0x0002, 0xFD00, 0x0300, 0x5034, 0x0800, 0x500A, 0x0200,
+    0x5030, 0x2080, 0x5440, 0x3C0E, 0x505A, 0x0E3E, 0x5075, 0x0003,
+    0x0CCC, 0x0CCC, 0x0800, 0x71CC, 0x1408, 0x5088, 0x0011, 0x5093,
+    0x0004, 0x000C, 0xFFBE, 0xFAE1, 0x3999, 0x50A6, 0x3999, 0x50A0,
+    0x3FEF, 0x507E, 0x0199, 0x507B, 0x0002, 0x0CCC, 0x1000, 0x50FE,
+    0x00C8, 0x50F4, 0x0333, 0x50F1, 0x0002, 0x0CCC, 0x1CCC, 0x50FA,
+    0x0147, 0x50F7, 0x0002, 0x0B33, 0x1333, 0x50EE, 0x0333, 0x50DC,
+    0x012C, 0x50C8, 0x0333, 0x50C5, 0x0002, 0x0CCC, 0x1CCC, 0x50D0,
+    0x0333, 0x50CD, 0x0002, 0x1333, 0x1CCC, 0x50D8, 0x00A3, 0x50D5,
+    0x0002, 0x0666, 0x0CCC, 0x50A8, 0x0002, 0x50BA, 0xFFFF, 0x50AA,
+    0x4004, 0x50B8, 0x020C, 0x50BD, 0x0002, 0x640C, 0x0018, 0x52CA,
+    0x043F, 0x5316, 0x0147, 0x531C, 0xFFD8, 0x531A, 0x0CCC, 0x52D6,
+    0x0FAE, 0x5322, 0x2000, 0x5341, 0x0002, 0xD800, 0x0400, 0x7078,
+    0x0004, 0x5324, 0x0C00, 0x5328, 0x0400, 0x714B, 0x0002, 0x0400,
+    0x0400, 0x5510, 0x00CC, 0x52B7, 0x0002, 0x5DE7, 0x7EEF, 0x52BF,
+    0x0004, 0x0199, 0x0199, 0x0199, 0x0199, 0x5539, 0x0003, 0x1000,
+    0x1000, 0x1000, 0x53E5, 0x0002, 0x00CC, 0x00CC, 0x54B2, 0x0147,
+    0x5514, 0x0400, 0x5512, 0x0080, 0x544E, 0x0019, 0x544C, 0x0003,
+    0x5049, 0x0005, 0x0000, 0x0000, 0x0232, 0x00CC, 0x2000, 0x5489,
+    0x0008, 0x8000, 0xF800, 0x8000, 0xFE67, 0x0999, 0x7E66, 0x8000,
+    0x7E66, 0x54A8, 0x1000, 0x300E, 0x00BB, 0x2009, 0x0002, 0x4000,
+    0x4000, 0x3009, 0x0002, 0x4000, 0x4000, 0x4009, 0x0002, 0x4000,
+    0x4000, 0x1012, 0x8000, 0x118D, 0x0002, 0x0080, 0x0080, 0x1167,
+    0x0004, 0x0000, 0x0000, 0x4000, 0x4000, 0x1191, 0x0003, 0x0100,
+    0x0080, 0x0080, 0xF039, 0x0002, 0x0000, 0x3390, 0xE001, 0x0002,
+    0x0001, 0x0000, 0x1186, 0x0389, 0x6114, 0x0006, 0x1189, 0x0002,
+    0x0000, 0x0000, 0x60F1, 0x0002, 0x8000, 0x8000, 0x610B, 0x0005,
+    0x0000, 0x09C4, 0x07D0, 0x012C, 0x0014, 0x6116, 0x0019, 0x60FC,
+    0x0FD7, 0x6126, 0x0008, 0x60E0, 0x00A6, 0x60E5, 0x0002, 0x0186,
+    0xA000, 0x60E2, 0x0CCC, 0x6132, 0x9600, 0x3016, 0x303F, 0x2018,
+    0x007F, 0x3018, 0x007F, 0x4018, 0x007F, 0x601D, 0x0002, 0x0000,
+    0x6538, 0x6016, 0x4000, 0x2010, 0x0170, 0x5398, 0x370F, 0x202E,
+    0x0001, 0x4010, 0x0000, 0x1009, 0x0002, 0x0001, 0xFFDD, 0x2030,
+    0x0014, 0x302E, 0x0014, 0x4030, 0x0014, 0x5344, 0x004F, 0x52AA,
+    0x0000, 0x202C, 0x03F1, 0x302C, 0x03F1, 0x402C, 0x03F1, 0x1175,
+    0x0002, 0xFFFF, 0xACBE, 0x1181, 0x0002, 0xFFFF, 0xACFC, 0x600C,
+    0x0211, 0x604A, 0x036C, 0x5032, 0x4000, 0x2014, 0x0000, 0x2001,
+    0x0002, 0x0780, 0x0438, 0x2022, 0x0419, 0x2020, 0x1E00, 0x2025,
+    0x0004, 0x0000, 0x8235, 0x0001, 0x046A, 0x3014, 0x0000, 0x3001,
+    0x0002, 0x1070, 0x0C30, 0x3020, 0x1E00, 0x3025, 0x0004, 0x0000,
+    0x8235, 0x0001, 0x046A, 0x3022, 0x0419, 0x300E, 0x0000, 0x4014,
+    0x0002, 0x4001, 0x0002, 0x0780, 0x0438, 0x4020, 0x3C00, 0x4025,
+    0x0004, 0x0000, 0x411A, 0x0000, 0x411A, 0x4022, 0x0419, 0x4012,
+    0x0050, 0x7078, 0x0004, 0x60B1, 0x0010, 0xA1EC, 0xA208, 0xA208,
+    0xA208, 0xA224, 0xA224, 0x0000, 0xA294, 0x0000, 0x0000, 0x0000,
+    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x6000, 0x4F38, 0x2010,
+    0x0160, 0x6016, 0x1B00, 0x54CF, 0x0003, 0x1070, 0x0C30, 0x1000,
+    0x6018, 0x0100, 0x71C2, 0x03E6, 0x71C0, 0x0200, 0x6025, 0x0002,
+    0x0030, 0x0000, 0x602D, 0x0002, 0x002F, 0x0301, 0x6039, 0x0002,
+    0x001C, 0x0200, 0x2051, 0x0008, 0x0001, 0x0003, 0x0001, 0x0003,
+    0x0001, 0x0000, 0x0001, 0x0003, 0x2065, 0x000A, 0x0003, 0x0000,
+    0x0001, 0x0003, 0x0000, 0x003E, 0x0000, 0x002D, 0x0001, 0x00FF,
+    0x3055, 0x0008, 0x0001, 0x0003, 0x0001, 0x0003, 0x0001, 0x0000,
+    0x0001, 0x0003, 0x3069, 0x000A, 0x0003, 0x0000, 0x0001, 0x0003,
+    0x0000, 0x003E, 0x0000, 0x002D, 0x0001, 0x00FF, 0x4051, 0x0008,
+    0x0001, 0x0003, 0x0001, 0x0003, 0x0001, 0x0000, 0x0001, 0x0003,
+    0x4065, 0x000A, 0x0003, 0x0000, 0x0001, 0x0003, 0x0000, 0x003E,
+    0x0000, 0x002D, 0x0001, 0x00FF, 0x6029, 0x0002, 0x0001, 0x0000,
+    0x0600, 0x0008, 0x0001, 0x0001
+};
+
+static const u16 ap1302_fw_bootdata2[ ] = {
+    0x6002, 0x0002
+};
+
+static const u16 ap1302_fw_bootdata3[ ] = {
+    0x83F8,
+    0x0300, 0xBEB8, 0x0000, 0x0000, 0x0000, 0x6538, 0x3800, 0x0104,
+    0x5C30, 0x38CB, 0x4086, 0xA201, 0xAE12, 0x9A01, 0x29AC, 0x130E,
+    0xE086, 0xF84C, 0x89CE, 0x0699, 0x80F2, 0x6469, 0xABD0, 0x3B83,
+    0x8A82, 0x0D00, 0x847D, 0x38BC, 0xCC20, 0x6101, 0xA410, 0xEF4A,
+    0x8220, 0x8182, 0xD03C, 0x107A, 0xD5AC, 0xBD38, 0x523D, 0xE9AA,
+    0x20A0, 0x8280, 0x9510, 0x22B7, 0x68E4, 0x8992, 0x700B, 0x3E8D,
+    0x6B10, 0xF81E, 0x0810, 0x2A40, 0xD0D8, 0x1EE0, 0x5122, 0x6882,
+    0xC680, 0x2DD9, 0x27B2, 0x1073, 0x10D1, 0x054D, 0x1058, 0xD205,
+    0xBD16, 0xC33D, 0x8013, 0x3E86, 0x5210, 0x58D3, 0x8601, 0x80D8,
+    0x3FFA, 0x0484, 0x4153, 0x4182, 0x0860, 0x6020, 0xE4EA, 0xE20A,
+    0xCE22, 0x0A80, 0x77FA, 0x00C1, 0xDE42, 0xC7E9, 0x0DA3, 0x1943,
+    0x8AD4, 0x0D92, 0xE040, 0x1317, 0xD138, 0x4206, 0x9C9D, 0x7D80,
+    0x8750, 0xFD88, 0x0234, 0xF479, 0xB23C, 0x1520, 0x866F, 0x492E,
+    0x1C80, 0x02A1, 0x311F, 0x4DB0, 0x10CD, 0x8426, 0x42EF, 0x4903,
+    0x10C0, 0x8F46, 0x1B4C, 0xB00B, 0x863C, 0xDAD0, 0x34C8, 0x0D5F,
+    0x01F9, 0x48CC, 0x0F1A, 0x003F, 0x44ED, 0x8F83, 0xFF04, 0xD800,
+    0x40B3, 0x9A88, 0x81B4, 0x5D90, 0xAC00, 0x44EC, 0xF205, 0x2981,
+    0x2428, 0x203B, 0xCFC4, 0x401F, 0x0974, 0x0814, 0x0D45, 0x01B4,
+    0x5804, 0x8410, 0x7801, 0x1A21, 0xC018, 0x0506, 0xBC72, 0xA04D,
+    0x50DF, 0x9ECE, 0x881A, 0x3702, 0x6127, 0x6A8A, 0x9106, 0x401C,
+    0x3BF5, 0xF884, 0x0059, 0xDD1A, 0x0391, 0xD232, 0x9FBE, 0x8D3F,
+    0x2254, 0x9440, 0x4D0D, 0x7A77, 0x5443, 0xCEAD, 0x2E40, 0xDA98,
+    0x130A, 0x80B3, 0x2940, 0x2760, 0x19A8, 0x40E3, 0x9922, 0xC7AF,
+    0x51C7, 0xBAD3, 0x4660, 0x5BD6, 0x1848, 0x6FAF, 0xA20F, 0xEFCD,
+    0x8208, 0x1A20, 0xF785, 0x124B, 0x7F98, 0x104F, 0xD233, 0x4231,
+    0x03E1, 0x0230, 0x822D, 0x267F, 0x9D20, 0x50F4, 0x0F74, 0x4C98,
+    0x8027, 0x686B, 0xBECC, 0x2039, 0x06A8, 0x6F57, 0xA208, 0x91BD,
+    0x4DB0, 0x461F, 0x339B, 0x23D0, 0x1134, 0x0142, 0x400B, 0x3FCC,
+    0x3EAE, 0x3B10, 0x4CA0, 0x083A, 0x6F68, 0xB7FA, 0xB104, 0x792C,
+    0xB082, 0x2697, 0xA81B, 0xC7A2, 0x5C48, 0x0C20, 0x8240, 0x83AC,
+    0x5504, 0xA196, 0x8538, 0x1303, 0x4AE8, 0x772C, 0x00E0, 0xCF85,
+    0x5488, 0x3918, 0x2A19, 0x0040, 0xCB44, 0x1033, 0x2080, 0x1163,
+    0xD27B, 0x88D5, 0x30E2, 0xC232, 0xD309, 0xB11A, 0x04D1, 0xA24D,
+    0xF074, 0xE126, 0xE0D1, 0x2712, 0x2719, 0x13AA, 0x2759, 0x13CA,
+    0x2799, 0x13EA, 0x27CD, 0x146F, 0x6F22, 0xC1A4, 0x5050, 0x71EF,
+    0xF8F1, 0x8210, 0x052F, 0x4725, 0x8C4A, 0x0691, 0x4306, 0x250A,
+    0x9144, 0xA289, 0x9146, 0xA28D, 0x9148, 0xA291, 0x914A, 0xA295,
+    0x914C, 0xA299, 0x914E, 0xA29D, 0x9150, 0xA2A1, 0x9152, 0xA2A5,
+    0x9154, 0xA2A9, 0x9726, 0x2537, 0x1F1B, 0xE38C, 0x2815, 0x8915,
+    0x9068, 0x95A9, 0x15AC, 0x7B35, 0x5C4A, 0xDF44, 0x3E09, 0x5BEA,
+    0x0751, 0x8200, 0x2113, 0x48AE, 0x8B16, 0x20D0, 0x2840, 0x9680,
+    0xA480, 0xB501, 0x8934, 0x8AF8, 0xB162, 0x0D12, 0xC122, 0xC191,
+    0x62A2, 0xC591, 0x64A2, 0xC991, 0x66A2, 0xCD91, 0x68A2, 0xD191,
+    0x6AA2, 0xD591, 0x6CA2, 0xD991, 0x6EA2, 0xDD91, 0x70A2, 0xE191,
+    0x72A2, 0xE591, 0x74A2, 0xE991, 0x76A2, 0xED91, 0x78A2, 0xF191,
+    0x7AA2, 0xF4A1, 0x0360, 0x840E, 0x480F, 0x3411, 0x1281, 0xA45F,
+    0x4189, 0x7CA2, 0x5082, 0x10A2, 0x5FA4, 0x5FC1, 0xA050, 0x822C,
+    0xFA7A, 0x9860, 0x8013, 0x4814, 0x57AD, 0x89E4, 0xD230, 0x2344,
+    0xC083, 0x44C1, 0x48C1, 0x6250, 0x82D0, 0xA261, 0x2461, 0x41A2,
+    0x61A4, 0x61B2, 0x3114, 0x6232, 0xF130, 0xC8B0, 0x62A9, 0x18CA,
+    0x3180, 0x3D66, 0xC61B, 0x6920, 0x8F63, 0x035C, 0x00F8, 0x47BE,
+    0x35DC, 0x4D0F, 0x9E4F, 0x9E2D, 0x675C, 0x8FB6, 0x4C10, 0x12CB,
+    0x823F, 0x0108, 0xF99F, 0x7087, 0xE4B8, 0x2851, 0x1019, 0x2B92,
+    0xC692, 0x4848, 0x0E00, 0x9C21, 0x0651, 0x00F7, 0x5D84, 0xB041,
+    0x0B16, 0x6010, 0x111F, 0x429E, 0x1617, 0x4160, 0x87C9, 0x4B12,
+    0x2208, 0x48F1, 0xB11F, 0x33FC, 0x1127, 0xD546, 0x458C, 0x6049,
+    0x31E1, 0x9EF4, 0x4422, 0x53CE, 0x7B05, 0x7630, 0x9286, 0xA7A5,
+    0x1390, 0xC294, 0x2007, 0x6DAD, 0xCC20, 0x1D09, 0x7303, 0x0126,
+    0xC984, 0x7BE6, 0x7889, 0xB271, 0x9F34, 0x1411, 0x373E, 0x0F3A,
+    0x0016, 0x09BC, 0x6935, 0x4304, 0x9C9D, 0x074D, 0xF82C, 0x1385,
+    0x023A, 0xCBA9, 0x609D, 0x8C2E, 0x0AAC, 0x24F5, 0x241F, 0x44CC,
+    0xCB04, 0xFE2E, 0x52A3, 0xC24F, 0xD0A2, 0x9109, 0x3F8D, 0xE440,
+    0x6B60, 0x094F, 0x7370, 0x80D0, 0x4255, 0x35CD, 0xCF28, 0xAB28,
+    0x3C2E, 0x3081, 0x5A72, 0x23C0, 0x1C08, 0xAE2C, 0x11F4, 0x4081,
+    0x15D1, 0xC258, 0x72A6, 0x22BB, 0xF04B, 0x0F05, 0x9414, 0x1096,
+    0x02E2, 0x3E68, 0x7222, 0xC06C, 0x47BD, 0x2A0B, 0x907A, 0x4C10,
+    0x4CC2, 0xC512, 0x1625, 0x0466, 0x23DE, 0x9584, 0x588C, 0x8CFA,
+    0x1730, 0x8B19, 0x2096, 0x3408, 0x4B19, 0x10E9, 0x4708, 0xB131,
+    0x19B7, 0x9516, 0x5418, 0x405C, 0x95E1, 0x2CAA, 0x5040, 0x5E72,
+    0xAC25, 0x979A, 0x2091, 0x2C89, 0x847C, 0x9280, 0x45A1, 0x908F,
+    0xA537, 0x88B4, 0xA8A1, 0x0868, 0x1096, 0xBE0D, 0x152A, 0x4825,
+    0xAE51, 0x08F5, 0x22D1, 0x16DC, 0x9160, 0xAA78, 0x4B6E, 0x3394,
+    0x4163, 0x3A55, 0xC1F4, 0x2ED1, 0x9744, 0xE23E, 0x8B1C, 0x22EC,
+    0x7447, 0xD104, 0x845E, 0xF246, 0x029F, 0x84BE, 0x071A, 0xDF4E,
+    0x04BF, 0x2611, 0xE955, 0x822F, 0xCCC6, 0x7D0C, 0x1046, 0x08B8,
+    0x9562, 0x0984, 0x1C35, 0xD83B, 0xC261, 0x1D0D, 0x6196, 0x1318,
+    0xC46A, 0x8709, 0x8E28, 0x3556, 0xC263, 0xB410, 0xB464, 0x0088,
+    0xF80E, 0xC08D, 0xA321, 0x1F13, 0x9711, 0xB9C8, 0x920A, 0x9009,
+    0xBB39, 0x0845, 0x2213, 0x74F4, 0x47D1, 0x9E44, 0x706B, 0x6664,
+    0xE0A8, 0x21D3, 0xB20C, 0x1052, 0xC109, 0xA7E1, 0x3868, 0xA084,
+    0xCD1C, 0x3518, 0x2134, 0xF827, 0x1512, 0x1392, 0xBA04, 0x2692,
+    0x09C9, 0x4D84, 0x269E, 0x04EA, 0xC034, 0x2764, 0xB84E, 0xF900,
+    0xF9A1, 0x588F, 0x8B1A, 0x09F7, 0x2C26, 0x4010, 0x1228, 0x4262,
+    0x3100, 0x0405, 0xA382, 0x1312, 0x1080, 0x0344, 0x1128, 0xD748,
+    0x0F08, 0x1352, 0x0213, 0x7457, 0xE481, 0x3D8F, 0x8C45, 0x6200,
+    0x0F7D, 0x38D7, 0x55BD, 0x0C20, 0x4DC2, 0xC178, 0x8817, 0x4385,
+    0x8321, 0x1CC5, 0xE164, 0xCC44, 0x1292, 0x11A0, 0x8830, 0x3427,
+    0xD0D2, 0x4308, 0x0502, 0x5958, 0x720D, 0x779E, 0x8883, 0xCC14,
+    0x20B9, 0xA009, 0x1420, 0xC410, 0x8326, 0x8217, 0x7494, 0x2883,
+    0x48FA, 0x1404, 0x61C0, 0x1348, 0x1383, 0x4414, 0x4814, 0x2841,
+    0xC821, 0x0752, 0x0794, 0x0F9A, 0x08E5, 0xB0B3, 0xE8AD, 0x1100,
+    0xC11B, 0xDF80, 0xD1E9, 0xC8D9, 0x07B2, 0x4207, 0xC61D, 0x0413,
+    0x5121, 0xF187, 0x0080, 0x3534, 0x3857, 0xE08C, 0x67D0, 0xDA42,
+    0x00F8, 0x5A38, 0x827D, 0xC578, 0x4263, 0xD19F, 0x436E, 0x0802,
+    0x13E6, 0x3E0F, 0x5825, 0x4802, 0x1B79, 0xA2D8, 0x45EA, 0x4C22,
+    0xF818, 0x8002, 0x3016, 0x178B, 0x25E6, 0x1622, 0xC057, 0x03A8,
+    0xD238, 0x0346, 0xB7AC, 0x5744, 0x0C0E, 0x81DE, 0xBA4F, 0x1EC9,
+    0x3612, 0x3CFF, 0x3FCF, 0xAF18, 0xE588, 0x4401, 0xF74E, 0xF90F,
+    0x7B1B, 0xCCF9, 0xFBC8, 0x8FA3, 0x1470, 0x3A41, 0x0F5C, 0xD0A0,
+    0x7272, 0x90D4, 0x810F, 0x5F0F, 0xA269, 0x1C06, 0xD821, 0xCA82,
+    0x1337, 0x80C3, 0x381F, 0xF455, 0x289A, 0x46DA, 0x06EA, 0x060E,
+    0xEADB, 0x3EDF, 0xAC10, 0x1CFE, 0x40E0, 0x3740, 0x11F4, 0xC0F2,
+    0x75C0, 0xFA81, 0xC480, 0x1E84, 0xDC20, 0x68C1, 0x02CC, 0x69E4,
+    0x3804, 0xF098, 0x0011, 0x7A1A, 0xF9BB, 0x90FB, 0xE980, 0x7B20,
+    0x8440, 0x7347, 0xAEDC, 0x44DE, 0xDEE4, 0x47AC, 0xDC87, 0x999F,
+    0x8998, 0x340B, 0xBE30, 0x1310, 0x1872, 0xECFB, 0x732E, 0x0E40,
+    0x84C2, 0x0102, 0x20AA, 0xCF61, 0xD671, 0x03E1, 0x6AF2, 0x1E87,
+    0xA2E0, 0xEF36, 0x7810, 0x01F8, 0xADA0, 0x8781, 0x3070, 0x0BFA,
+    0x34E1, 0x13DA, 0x6901, 0xC869, 0x1D42, 0x8D2F, 0x1082, 0x8110,
+    0x61BE, 0x5311, 0xF46A, 0x0462, 0x0028, 0x0AF6, 0x8FF8, 0x8AC0,
+    0xE01E, 0x1386, 0x9D2E, 0xBA47, 0xD1E0, 0x1081, 0x5872, 0x03C3,
+    0xBD83, 0xDB99, 0x2322, 0x44DC, 0x304A, 0x5E29, 0x063C, 0xDF64,
+    0x4080, 0xA81D, 0xF5EC, 0x4113, 0x4108, 0x6017, 0xFA81, 0xB48D,
+    0x8E20, 0x3625, 0x64AC, 0x6185, 0x83CB, 0xC639, 0x06C7, 0x6BB6,
+    0x9010, 0x0148, 0xCC7A, 0x3780, 0x33C0, 0x08E6, 0x5B04, 0xC70B,
+    0x301E, 0xCD00, 0x3F39, 0xD288, 0x4E18, 0x49CC, 0xE41D, 0x4C90,
+    0xA084, 0x0240, 0x1E67, 0x165E, 0x931C, 0x1F14, 0x8A8C, 0x509D,
+    0x1D73, 0x7820, 0xD766, 0x098F, 0xA826, 0xCE86, 0x0736, 0x2713,
+    0x1490, 0x04BA, 0x2E70, 0x80F1, 0xF81D, 0xF5E7, 0xE102, 0xA118,
+    0x8238, 0x8441, 0x0D1B, 0x44BD, 0xEA13, 0x4196, 0x257C, 0xFC1E,
+    0x2761, 0x8BC8, 0xCE87, 0x80AC, 0x8915, 0xD42C, 0xA527, 0x21B8,
+    0x32DE, 0xC844, 0x4D2F, 0x8611, 0x941D, 0x91A2, 0x7601, 0xC729,
+    0x2019, 0xF595, 0xD88D, 0x5349, 0x85C9, 0xF85D, 0xCC48, 0xA949,
+    0x83C9, 0x84FD, 0x2FB8, 0x7434, 0x3A8C, 0xF87B, 0xF4DC, 0x6744,
+    0x0FC1, 0xD23C, 0x4024, 0xFB0B, 0x552E, 0xA931, 0x33BA, 0x2480,
+    0x03E4, 0x35EB, 0xF211, 0xF0D7, 0x1A95, 0x5815, 0x568D, 0x1F23,
+    0x83A6, 0x0284, 0x30E8, 0x3742, 0x9A00, 0x2811, 0x0070, 0xFA69,
+    0x01C0, 0xC0F1, 0x0CC8, 0x8061, 0x1861, 0xD9AB, 0x865A, 0x0471,
+    0xC67E, 0x8F03, 0x88D3, 0xE77D, 0x228D, 0x1034, 0x2542, 0xC4E4,
+    0x7F07, 0x9C5E, 0x4A6A, 0xF408, 0x2034, 0x06E9, 0xD981, 0x994C,
+    0xFC2D, 0x3A5F, 0x8CA9, 0x9074, 0x2649, 0x776D, 0x0088, 0x6311,
+    0x3451, 0x0C1D, 0x32BE, 0xA7AB, 0x700C, 0x0E0D, 0x783C, 0x4278,
+    0xC980, 0x741A, 0xC242, 0x081E, 0x054A, 0x4F60, 0x4A97, 0x9F8F,
+    0x8815, 0x1C40, 0x8890, 0xE18F, 0x450C, 0x00F8, 0x285C, 0x8545,
+    0x6041, 0x2033, 0x5383, 0x3315, 0xB762, 0x18C1, 0x4EB6, 0x0A10,
+    0x5FAB, 0xBB4B, 0xBA48, 0x0440, 0x3443, 0xA8A0, 0xEAE4, 0x128C,
+    0x0075, 0x0F0D, 0x33AA, 0x3047, 0x1739, 0xA91E, 0x3272, 0x2048,
+    0x540E, 0xF973, 0xA87D, 0x14B2, 0x3CF7, 0x447C, 0x1BC6, 0x40FF,
+    0x8431, 0x0B92, 0x2F89, 0xD005, 0x8120, 0x9468, 0x85A8, 0x056C,
+    0x00A5, 0x74CC, 0xC20C, 0x8180, 0x41EC, 0x904E, 0x8095, 0x801C,
+    0xA8B1, 0x6090, 0x1C01, 0x8040, 0x3EEB, 0x0971, 0x63C4, 0x7FE3,
+    0x3695, 0xEBF0, 0x08EF, 0xDBC7, 0xE72C, 0xC1C3, 0xD638, 0xD7C0,
+    0x05A1, 0xE40E, 0x0294, 0x9401, 0xB068, 0xB616, 0x3BFF, 0x20BA,
+    0x0A9C, 0x41A2, 0xC058, 0x4307, 0xA80A, 0x6C03, 0x3121, 0xE62F,
+    0xC2E8, 0x42C1, 0x0650, 0x263C, 0x1A84, 0x2098, 0x360D, 0x96DD,
+    0xAEA2, 0x2780, 0x7767, 0x20B7, 0x006A, 0x134B, 0x81CE, 0x1FAE,
+    0xB988, 0x4ABE, 0x5048, 0x8681, 0x4EB8, 0x3643, 0x07F0, 0x5BC8,
+    0x4BCB, 0xD08A, 0x4822, 0x9A3E, 0xC416, 0x200C, 0x7982, 0x1283,
+    0xA42E, 0x8BD2, 0xA446, 0x1DF6, 0x7119, 0x5053, 0x08C1, 0x3067,
+    0xB30D, 0xC66D, 0x0602, 0xAB2A, 0x8FA5, 0x9388, 0x1306, 0xBB41,
+    0xFC42, 0x71F4, 0x351D, 0x4630, 0x9482, 0x06C1, 0x4297, 0xA4F2,
+    0x467C, 0x02C0, 0xD802, 0xC7D2, 0x0453, 0xA425, 0xE95D, 0xC116,
+    0xCE83, 0x80B9, 0xA8A1, 0xE8A6, 0x620D, 0xBBB9, 0x78C7, 0xA1D2,
+    0xDEC0, 0x1186, 0x41FD, 0x8248, 0xC484, 0x1B18, 0x118B, 0xEAC0,
+    0x723C, 0x4D1A, 0x7476, 0xA983, 0x2001, 0xF3A5, 0x6971, 0x3211,
+    0x348E, 0xA92B, 0xA207, 0x6B1F, 0x081C, 0x3A19, 0x2121, 0x040A,
+    0x0245, 0xA001, 0x2930, 0x1503, 0x2940, 0x7239, 0x5DA4, 0xB06F,
+    0xAFF0, 0x8B01, 0x0349, 0xD09C, 0x260D, 0x3A64, 0x088F, 0xB1C2,
+    0x5C03, 0xD045, 0x2F22, 0x7428, 0x2D3C, 0x3D40, 0x2131, 0x05DA,
+    0x6DC2, 0x0054, 0xF955, 0x4082, 0x3BFD, 0x0880, 0x74D8, 0x4404,
+    0xCFE3, 0xA158, 0x9140, 0x52AB, 0x201C, 0x8630, 0x681D, 0x2001,
+    0x8AAC, 0x1AB5, 0x00BC, 0x0162, 0x7A33, 0xB78A, 0xC791, 0xB46F,
+    0xDC6C, 0x13C0, 0x0F41, 0xA527, 0x7903, 0x7FB5, 0xAE47, 0x76B7,
+    0x9344, 0xBB08, 0x082E, 0x8B25, 0x1298, 0x34C4, 0x8C00, 0xE13A,
+    0x010E, 0x835E, 0xF9C6, 0x3624, 0x0B23, 0x093A, 0x01C3, 0x200E,
+    0x2602, 0x76D8, 0xE4FA, 0xB21C, 0x4002, 0x489D, 0x017C, 0x9CB0,
+    0x3CA1, 0xD040, 0x0244, 0x1203, 0x8310, 0x0426, 0xED03, 0x1109,
+    0xBBBE, 0x308C, 0xAF5F, 0xEE88, 0x0D5F, 0xC40D, 0xC9C4, 0x7432,
+    0xA107, 0xB89B, 0x04CC, 0x0221, 0x481A, 0x4400, 0x3300, 0x9583,
+    0x2AA4, 0x85DA, 0x78E4, 0x1302, 0xBDDF, 0x5033, 0xE071, 0xCF61,
+    0x0179, 0xDD80, 0xC581, 0x664C, 0x1CC4, 0x262A, 0x61F4, 0x67C0,
+    0x9EC0, 0xA498, 0x8184, 0x01C4, 0x02BE, 0x3218, 0x201C, 0x230C,
+    0x28F1, 0x9307, 0x0002, 0x3A0D, 0x6701, 0x0F34, 0x082B, 0xE52B,
+    0x910A, 0x8A48, 0xE20B, 0xFA49, 0xCC78, 0x50E8, 0xF543, 0x7889,
+    0x1510, 0x65B0, 0xE03D, 0x0CE5, 0xC0CC, 0x5CC3, 0x1966, 0x3C02,
+    0x751E, 0x3E21, 0x37A3, 0x002E, 0x2101, 0x1B71, 0x087E, 0x4123,
+    0x3187, 0x6436, 0x0DBB, 0x461D, 0x1271, 0x009C, 0x7915, 0x4711,
+    0x8C19, 0x0B6A, 0x7802, 0x4ED1, 0x2699, 0xF141, 0xA801, 0xA4C4,
+    0x0C82, 0xB8B6, 0x2081, 0x3CCA, 0x4E7E, 0x4C23, 0x80C6, 0x085B,
+    0x1E68, 0x2A46, 0xEC4A, 0x54D4, 0x4BD2, 0x3FB8, 0xBD88, 0x7F28,
+    0x8A43, 0x8074, 0xEA3B, 0x9100, 0xC55E, 0xE2E9, 0x2984, 0x4400,
+    0x9AEB, 0x633E, 0xCD88, 0x41AB, 0x9160, 0xD402, 0x8A60, 0x7460,
+    0xE594, 0xA801, 0x4330, 0x3A30, 0x7B06, 0xC0FB, 0x3378, 0x5816,
+    0xA18A, 0xE691, 0xB9C0, 0x7188, 0x8431, 0x7661, 0x34F7, 0x92C8,
+    0xF00B, 0xD2F5, 0x3230, 0x9207, 0x9011, 0xD876, 0x2405, 0x0D52,
+    0xE2E7, 0x9F82, 0x471D, 0xE09F, 0x1C9C, 0x104E, 0x8222, 0x4631,
+    0xEB44, 0x411E, 0x4F3E, 0xBA67, 0x2ED2, 0x0E19, 0x9804, 0x247A,
+    0xF3EC, 0x7A6D, 0x6040, 0xD0B7, 0xB148, 0x0419, 0x0824, 0x8912,
+    0x1D92, 0x5232, 0x520C, 0xCF00, 0x17D7, 0x3D05, 0x0E18, 0xCB82,
+    0x4A97, 0xAEB6, 0xCB88, 0xB295, 0xD1A5, 0x4244, 0xAA87, 0x3319,
+    0x31DB, 0xC6B4, 0x47CA, 0xD8C4, 0x2B3D, 0x8841, 0xFCF3, 0xBF0C,
+    0x0143, 0x3E25, 0x0018, 0x903F, 0xCCB0, 0x944E, 0x9A00, 0x7E05,
+    0x0F11, 0x0FB4, 0x1D4C, 0x04ED, 0x58F3, 0x130A, 0x1400, 0x60BB,
+    0xA9D9, 0x880D, 0xEE19, 0x21AB, 0x82ED, 0xC2C1, 0xE794, 0x4213,
+    0xA1DB, 0x8A02, 0x5AF6, 0xA9B0, 0xF3C7, 0xE125, 0x8000, 0x24A2,
+    0x9F08, 0x1F0B, 0x4900, 0x618E, 0xE193, 0x1A91, 0x44C4, 0x5234,
+    0x0731, 0xAFC4, 0x85E2, 0xC1A0, 0x0D70, 0xBE72, 0x200A, 0x01E4,
+    0x3C90, 0x2374, 0x8810, 0x4070, 0x290C, 0x368D, 0x2333, 0xC4EC,
+    0x43E2, 0xEA71, 0xF3F9, 0xE882, 0x86A8, 0x23DF, 0xD482, 0x088F,
+    0x2301, 0x2C0A, 0xD6A9, 0x0300, 0xAC38, 0x1497, 0x3C8B, 0x00B2,
+    0x60BB, 0x305F, 0xBFAB, 0x8BD4, 0x9C08, 0x7AF4, 0xA10B, 0x8684,
+    0xC44B, 0xCAAE, 0x4444, 0x7B04, 0xF91F, 0x29B4, 0x8999, 0xE57B,
+    0xB11C, 0x0BA8, 0x4103, 0x92ED, 0xCC21, 0x600F, 0x1D0C, 0xA1C0,
+    0x1AB0, 0x3200, 0xB635, 0x716C, 0x16B3, 0x609E, 0x1601, 0x48A8,
+    0xB228, 0x8031, 0x4858, 0x6902, 0x9108, 0xD4AC, 0xA200, 0x18A1,
+    0x6630, 0x8B20, 0x5E5E, 0x7676, 0x12AA, 0xFD40, 0xEFDD, 0xD105,
+    0x4732, 0x4C23, 0x0003, 0x433C, 0x1717, 0xB9D2, 0x9C93, 0x5508,
+    0x58E9, 0x801D, 0x100D, 0xC1FC, 0x2020, 0x3CFB, 0xA221, 0x85B2,
+    0xCF9E, 0x2FC8, 0x0602, 0x4309, 0x0891, 0x585C, 0x08FE, 0x4B4A,
+    0x10FA, 0x7D2B, 0xFD03, 0x9DEC, 0x0903, 0x1889, 0x41E2, 0xCE61,
+    0xE827, 0x9108, 0x980B, 0x8401, 0xE402, 0x9E91, 0x2C02, 0x5EDB,
+    0xB730, 0x5C8F, 0xE816, 0xC1F4, 0xDF18, 0xCDC4, 0x041F, 0xD061,
+    0xCDF4, 0x844F, 0x9BCA, 0x7219, 0xB106, 0xCA01, 0x9CDF, 0x084F,
+    0x500C, 0xC19B, 0xC25E, 0x12B0, 0x08CC, 0xC2D0, 0x20A1, 0x4260,
+    0x0201, 0x690D, 0x2D20, 0x0940, 0xC6A1, 0x6C94, 0x8AC5, 0x8170,
+    0x8978, 0x3000, 0xCFAA, 0x776A, 0x11B1, 0x2544, 0x941C, 0x4620,
+    0x4665, 0x303C, 0xBA43, 0x81EE, 0x0B03, 0xD29D, 0x0054, 0xA498,
+    0x499F, 0x2A7C, 0x099F, 0x31A8, 0x5B84, 0x1DC5, 0x5020, 0x7810,
+    0x2503, 0xA307, 0x01F6, 0x2A32, 0x9494, 0x07F9, 0x0A7D, 0xDAE4,
+    0x4581, 0xC170, 0xA055, 0x6218, 0x0200, 0xE621, 0xC061, 0xE0FF,
+    0x32AD, 0xE860, 0x75E9, 0x0561, 0x01BF, 0x1058, 0x3A3A, 0x7A15,
+    0x2360, 0x1C36, 0x407A, 0x9E20, 0x5415, 0xA3F1, 0x6304, 0x4E0A,
+    0xE342, 0x1C48, 0xE48E, 0x48C0, 0x3D43, 0x504B, 0xD773, 0x026F,
+    0x8007, 0x481F, 0x5809, 0x55F2, 0x557A, 0x5574, 0x4129, 0xEBD0,
+    0xCD63, 0x1487, 0xAD80, 0x842C, 0x0139, 0x6650, 0xD718, 0x1249,
+    0x1260, 0x9A0A, 0x6000, 0x0E34, 0xA999, 0x78DD, 0xDE40, 0x0AE3,
+    0x728F, 0x05C6, 0x2895, 0x8301, 0xF080, 0x9957, 0xC974, 0x9719,
+    0x0F3D, 0x1EE0, 0x33E1, 0x623E, 0x01F0, 0x40A1, 0x2409, 0xD888,
+    0x4E1F, 0x388E, 0xA36F, 0xC09E, 0x46C6, 0xE609, 0x2409, 0xF7AD,
+    0x68F6, 0xB4F0, 0x8DD3, 0x9985, 0xCA75, 0x4CAF, 0xB050, 0x87A9,
+    0x76C6, 0x190C, 0x0700, 0x358C, 0x26CC, 0xB001, 0x1056, 0xC28A,
+    0xF76E, 0x80CE, 0xC066, 0x01DE, 0x939F, 0x300C, 0x243D, 0x4233,
+    0x026D, 0x2041, 0x30B5, 0x8024, 0xB038, 0xD67C, 0x6036, 0x2928,
+    0xC94C, 0x616F, 0x623A, 0x008A, 0xC844, 0xBC09, 0x0F5B, 0x8BCC,
+    0x844A, 0xBEC0, 0xA9EC, 0x7952, 0x04A6, 0xA103, 0x4C29, 0xA4C8,
+    0x253B, 0x10AC, 0xCCA1, 0x12F0, 0x7018, 0x8210, 0x5001, 0xECB2,
+    0x21B5, 0x9861, 0x3E23, 0xA3B3, 0x13C4, 0x2334, 0x80E1, 0x3980,
+    0x82BF, 0x981C, 0x042E, 0xED68, 0x133F, 0xABC3, 0x4407, 0xAF02,
+    0xF4F3, 0x6A47, 0x90F1, 0x816C, 0xF01D, 0x806E, 0x99FA, 0x0201,
+    0x070A, 0x0108, 0x9300, 0xFA05, 0x9040, 0xFE42, 0xE020, 0x3DFB,
+    0xAF17, 0x4058, 0xEBD3, 0xB406, 0xC920, 0x60C8, 0xC478, 0x3487,
+    0x95E1, 0x0076, 0x9125, 0xE1F3, 0x821B, 0xCD21, 0xC5FF, 0x89C0,
+    0x8920, 0x3682, 0xDCC5, 0x44FD, 0x1737, 0x2C9A, 0x4347, 0x9A1E,
+    0x12B9, 0x7C2E, 0x4E22, 0x08A0, 0xB95C, 0x00C0, 0x52AC, 0xC00B,
+    0x052E, 0x600B, 0x9500, 0x6E15, 0xAA05, 0x1342, 0xA711, 0x3221,
+    0x0709, 0x7974, 0x4000, 0x9A22, 0xDF4B, 0x398D, 0x8490, 0x330B,
+    0x1048, 0x621E, 0x8991, 0xD0BA, 0x110B, 0x114C, 0xEB21, 0x4991,
+    0xD4EB, 0x20CB, 0x1051, 0x0154, 0xD015, 0x0182, 0x7C30, 0x0729,
+    0xF200, 0x7784, 0xD348, 0xBE3C, 0x84EC, 0x1987, 0x4F80, 0x324C,
+    0xFC31, 0x5046, 0xA80C, 0x6060, 0x2843, 0x7EBA, 0x5832, 0x3221,
+    0xCD80, 0xC658, 0x65B9, 0xD015, 0x441D, 0x3402, 0x84F0, 0x040D,
+    0x00D6, 0x56F2, 0x63AD, 0x7B24, 0x441C, 0x03D0, 0x1C79, 0x0685,
+    0x01B2, 0x1144, 0x2468, 0x85C0, 0xC0FC, 0x0190, 0x8690, 0x5C4D,
+    0x02C5, 0x8941, 0x7D90, 0x1620, 0x0934, 0x0B96, 0x3D41, 0x6E60,
+    0x28EA, 0x1A70, 0xB253, 0xE4CD, 0x6214, 0x733F, 0x9111, 0x0911,
+    0xEBA8, 0xB144, 0x4EE0, 0x62E5, 0x8AE8, 0x483C, 0x9F12, 0x8801,
+    0x88BA, 0x890B, 0xBF80, 0x8019, 0x7B77, 0xF84C, 0x42C4, 0x5AF1,
+    0x0BD2, 0x6173, 0x1E7B, 0x7220, 0x6C86, 0xF201, 0xF09D, 0x0458,
+    0x1D88, 0x704D, 0x0066, 0xF040, 0x298E, 0x4298, 0xA503, 0x072C,
+    0x4941, 0xC050, 0x066D, 0x0E3A, 0x9460, 0x6094, 0x0E75, 0x8499,
+    0x701C, 0xB9EE, 0x9A84, 0x3B30, 0x0442, 0x0F5C, 0x2210, 0x8401,
+    0xE1B8, 0x8B39, 0x01FE, 0x7770, 0x8644, 0x3881, 0xD201, 0xC77E,
+    0x7510, 0x088D, 0xDE85, 0xDD03, 0xC584, 0x90BB, 0x2670, 0xBAEC,
+    0xC081, 0xEC25, 0x0778, 0x30C9, 0x847B, 0x0211, 0xF64B, 0x11F8,
+    0x64A8, 0x4D00, 0x3787, 0x6716, 0x1620, 0x3480, 0xC288, 0x0CAE,
+    0x38F0, 0x5228, 0xF72F, 0xD8F6, 0x5A10, 0x8123, 0xC0AB, 0xE4FD,
+    0x2108, 0x00A3, 0xE7A3, 0x9AC7, 0xD39F, 0xE800, 0xE9CE, 0xE5D1,
+    0x8A89, 0xFACF, 0xB8FD, 0x686C, 0x8514, 0x1148, 0x34E3, 0x738A,
+    0x153E, 0xAFC4, 0x47D6, 0x70A8, 0x9A02, 0x4F6C, 0x0488, 0xA287,
+    0x0B35, 0x3E8E, 0xBA12, 0x00F2, 0x2700, 0x8144, 0x0404, 0xBD59,
+    0x4AEF, 0x7CA7, 0x1974, 0x7184, 0x5E03, 0x291E, 0x19FA, 0x2201,
+    0xE444, 0x75D4, 0x9984, 0x1EAC, 0xA323, 0x4439, 0xF581, 0xD080,
+    0x0879, 0xE7B0, 0x4D00, 0xDC78, 0x2D09, 0x00AB, 0xC1F5, 0xC471,
+    0x11E7, 0x90ED, 0xE9DB, 0x323C, 0x0730, 0x2077, 0xE820, 0xA10C,
+    0xBA58, 0x1CBC, 0x8A02, 0x2274, 0xC645, 0xC008, 0x6A05, 0xE330,
+    0x3C33, 0x13C4, 0xB087, 0xD1E0, 0xE240, 0x11C8, 0x7444, 0x51E7,
+    0xE849, 0x1C01, 0x11C7, 0x0F49, 0x4D17, 0x7F1D, 0x9743, 0xE517,
+    0x4C7D, 0x503B, 0x8DC4, 0x7B17, 0x0045, 0x143A, 0xFB14, 0x40C3,
+    0xDA1C, 0x0960, 0x918B, 0x8803, 0xC289, 0x8430, 0xF8C9, 0x1844,
+    0x0348, 0x1FF1, 0x2439, 0x80A7, 0x0804, 0x5C98, 0x23D0, 0x6849,
+    0x045D, 0x1166, 0x5DCA, 0x2645, 0x9045, 0x485D, 0x0813, 0x0844,
+    0x4008, 0x02EF, 0xB7A2, 0x0479, 0xDF31, 0x63F8, 0x037B, 0xBE08,
+    0xC41E, 0xA4A8, 0x77EB, 0xD081, 0x147D, 0x130F, 0xCB13, 0x620F,
+    0x0161, 0x6807, 0xD0DE, 0xE278, 0x6C80, 0x7217, 0x6469, 0x085D,
+    0xE3AC, 0x047B, 0xD940, 0x82A1, 0xB2B5, 0x84E8, 0x46B5, 0x039E,
+    0xDB0C, 0x8801, 0x02C0, 0x2A02, 0xCB60, 0x772F, 0xB87D, 0x67E2,
+    0xA006, 0x1C86, 0x8502, 0x7EB2, 0x1C79, 0x58A0, 0x7C40, 0x31C2,
+    0xE90F, 0xEBED, 0x801E, 0x924C, 0x1003, 0xC611, 0x85C5, 0x4E8C,
+    0xDDA0, 0x4917, 0x07F8, 0xF060, 0x0142, 0x203C, 0x60F5, 0x6CE2,
+    0x6215, 0xA807, 0xA835, 0xC4D5, 0x1BB8, 0x2EE8, 0xDC5E, 0x0027,
+    0xA752, 0x8B18, 0xA878, 0xDAC0, 0x7BDB, 0xB048, 0x0214, 0xD71A,
+    0x48F1, 0x00EA, 0x234D, 0x31A4, 0x2315, 0x802E, 0xC0EF, 0x1E1F,
+    0xF120, 0x75DC, 0xA011, 0x8AA0, 0x389C, 0x071E, 0xE480, 0x0A78,
+    0x0340, 0x503F, 0xD06B, 0x8231, 0xC400, 0x0A20, 0x4726, 0x2B78,
+    0x2A64, 0x5B03, 0x0D31, 0x7A54, 0xF1A6, 0x2C90, 0x6007, 0x06FC,
+    0x1E29, 0x5A25, 0x1840, 0x5C14, 0x65A8, 0x0675, 0x1066, 0xB0AD,
+    0x220E, 0x1CAA, 0x2289, 0xAC2A, 0x9E00, 0x11AC, 0x2AF3, 0xCAF1,
+    0xF1E9, 0x5960, 0x5280, 0xFB2F, 0x8844, 0xAEA3, 0x8F90, 0x43C1,
+    0x0AE4, 0x0506, 0x50E4, 0x040B, 0x2101, 0xBE47, 0xA1C4, 0xE9C4,
+    0x4520, 0x0FC2, 0x001D, 0x3C00, 0xBEB1, 0x9931, 0x0C80, 0x3F48,
+    0x007B, 0xA0D0, 0x8442, 0x8A22, 0xE030, 0xE1B4, 0x057F, 0x9817,
+    0xE187, 0x212F, 0x102C, 0x0417, 0x8850, 0x38F0, 0x0088, 0x502C,
+    0xD110, 0x389E, 0x291B, 0x225F, 0x4D1C, 0x0985, 0xDC9E, 0x645C,
+    0x8263, 0x9792, 0xD1CB, 0x21B0, 0x796D, 0x58D0, 0x2121, 0x409E,
+    0xC638, 0x120B, 0x4AA3, 0x4070, 0x27D0, 0x5762, 0x1B78, 0x0C8D,
+    0x1F50, 0x4889, 0xA219, 0xF8AD, 0xE262, 0x8B82, 0xE60F, 0x1232,
+    0x3F37, 0x1E09, 0x020B, 0x5C5E, 0x1D46, 0x7020, 0x18DA, 0x3112,
+    0x7102, 0x5980, 0x4802, 0xFD45, 0x0A20, 0x1F81, 0x9CE5, 0x8894,
+    0xC189, 0x5100, 0x3E82, 0x6B18, 0x94C1, 0xA911, 0x7448, 0x2CBA,
+    0x8373, 0x11CD, 0x4903, 0x8DB1, 0xE381, 0x919F, 0x5234, 0xC163,
+    0x6819, 0x20C1, 0x12E8, 0x12E3, 0x2662, 0x01C5, 0x2441, 0xF87D,
+    0x2C80, 0x3394, 0x02F3, 0xD3A0, 0xF9BE, 0x4440, 0x0394, 0x3420,
+    0x3D29, 0x7497, 0x9E08, 0x12F3, 0x6552, 0x1710, 0x0E54, 0x00FB,
+    0x0378, 0x817C, 0xAC41, 0xF54A, 0x08E5, 0x811D, 0x9604, 0xE3EC,
+    0x1582, 0x0504, 0x4EFA, 0x4C2C, 0x0D00, 0x1A7B, 0x0280, 0xC730,
+    0x6950, 0x0F57, 0x76D0, 0x90CC, 0x0E1C, 0x05D2, 0x1EC0, 0xA138,
+    0x7215, 0x9404, 0x1E25, 0xCE20, 0x7F57, 0x6F20, 0x0708, 0xD126,
+    0x2175, 0x4F92, 0x0070, 0x6D0E, 0x7EC0, 0xA530, 0x24FE, 0x0D3D,
+    0x7ED0, 0x6000, 0x961A, 0x35C3, 0x3E91, 0x3783, 0x454F, 0x5F55,
+    0x2983, 0x9003, 0x47E0, 0x20AE, 0x0D14, 0x0754, 0x7533, 0x7977,
+    0xA799, 0x7437, 0xD98C, 0x3E9A, 0xC812, 0x5834, 0xF5F5, 0x4321,
+    0x1F56, 0xBC8E, 0x3F30, 0xF1FE, 0xF97A, 0xFAA5, 0x0980, 0x38CD,
+    0x5973, 0x56B1, 0xE868, 0x1101, 0x0C61, 0xE40E, 0xF176, 0xA104,
+    0x040F, 0x1996, 0x114B, 0x9BFE, 0x9752, 0x2C8F, 0x915E, 0x67A9,
+    0x25C4, 0xC02D, 0xBC4F, 0xEC88, 0x0E4F, 0x869C, 0x2EA1, 0x103C,
+    0x460D, 0x10F5, 0x6FC0, 0xFAD2, 0xF07C, 0xAD6A, 0x6100, 0xF067,
+    0xF6E2, 0x88B1, 0xCBED, 0xC7AC, 0xE4CC, 0x7EF5, 0xABE8, 0x8F21,
+    0x7A00, 0x4704, 0xD211, 0x387E, 0x340D, 0x70F0, 0x6F00, 0xB822,
+    0xA880, 0x3E93, 0x502E, 0xBDF4, 0x300F, 0xA556, 0x4455, 0x068C,
+    0x0F4B, 0x6108, 0x03EA, 0xAD75, 0xB94B, 0xDA07, 0x80AD, 0xC257,
+    0x8806, 0x20CD, 0x10C4, 0x0D0E, 0xFC0C, 0x3C20, 0x7795, 0xAF11,
+    0x0BD4, 0x0487, 0xEC82, 0x603B, 0x1410, 0xB278, 0x06C1, 0x3F80,
+    0x6E47, 0x88DB, 0x0CB8, 0x010C, 0x0649, 0x01A2, 0x0004, 0x6130,
+    0x154D, 0x8404, 0x909D, 0x2322, 0x2088, 0x1A1E, 0xC787, 0x90C6,
+    0x47C1, 0x9B88, 0x793C, 0x7900, 0x240F, 0x1DAD, 0x7811, 0x445C,
+    0x9500, 0xC84D, 0xD1A2, 0xA31A, 0x47BA, 0x43F1, 0xE580, 0x743A,
+    0xB778, 0x7D0B, 0xEE25, 0x4C61, 0x77C7, 0x68CC, 0x62C3, 0x03A8,
+    0x2007, 0x8B00, 0x1103, 0xC21E, 0xC786, 0x0D16, 0x2060, 0x3240,
+    0xF27B, 0xB05E, 0xE700, 0xB811, 0xA1A7, 0x4387, 0x23E5, 0x6BC4,
+    0xBC4A, 0xDC65, 0xE220, 0xF108, 0x90E4, 0x40CE, 0x3821, 0x0B79,
+    0x579F, 0x2CB0, 0x9578, 0xA068, 0x1E3E, 0x340C, 0x44D9, 0x532F,
+    0x8044, 0x0546, 0xA9D9, 0xE815, 0xF160, 0x0CB0, 0xD0B7, 0xE816,
+    0x5203, 0x03A8, 0x621D, 0x7C68, 0x189D, 0xC6C0, 0x38F3, 0xA961,
+    0x0302, 0x28B2, 0xE956, 0x2339, 0xAC52, 0x5E34, 0x091F, 0x28D2,
+    0x901D, 0x1679, 0x3202, 0xC19C, 0x9DE2, 0x81E3, 0x4074, 0x0E65,
+    0x02F9, 0x89AA, 0x1324, 0xCEEE, 0x5DF2, 0x68DA, 0x4C05, 0x326B,
+    0xB90E, 0x4346, 0xA5C8, 0xA183, 0xAA32, 0x5F87, 0xA858, 0x8BA2,
+    0xBDC4, 0xB230, 0x023E, 0xC455, 0x1083, 0x2660, 0xCFF1, 0x9231,
+    0x11E3, 0xA85B, 0x4C7C, 0xF30A, 0x20C6, 0x20C3, 0x5949, 0x043A,
+    0x0E41, 0x78F0, 0x361B, 0x07F8, 0xC24C, 0x8E41, 0x3844, 0x4010,
+    0x0080, 0x45E8, 0x6363, 0x01CF, 0xF2E8, 0x4B43, 0x879C, 0xA3D2,
+    0x8E28, 0x750C, 0x0280, 0x61A5, 0x5108, 0x961E, 0x92C4, 0x4B05,
+    0xC807, 0x4017, 0x95A4, 0x0417, 0x3704, 0x005F, 0xD140, 0xE882,
+    0xEAA5, 0x381F, 0x8524, 0x0E03, 0x643B, 0x340A, 0x6EB6, 0x611E,
+    0x8D28, 0x1260, 0x0434, 0x8A5F, 0x4502, 0x894A, 0xAC51, 0xF46B,
+    0xA888, 0x04D0, 0x79D5, 0xCFA5, 0xD372, 0xA600, 0xF687, 0x6113,
+    0x41EF, 0x664F, 0x8835, 0x1087, 0x65C9, 0x1301, 0xF494, 0x7D13,
+    0x4464, 0x889D, 0xE89F, 0xE2B4, 0x9090, 0xFD15, 0x1E5E, 0x741E,
+    0x10BC, 0x1A00, 0x0302, 0x0BA5, 0x08C4, 0x16E6, 0x1E45, 0xC6E6,
+    0x4418, 0x0988, 0xA06C, 0xB8F2, 0xCA78, 0x90FE, 0x8A25, 0x3EC5,
+    0x661B, 0x8F43, 0xD144, 0x8881, 0xE339, 0x7E06, 0x8541, 0xA0C1,
+    0xE894, 0x02A2, 0x220A, 0xFA39, 0x88BA, 0x5A6C, 0x8222, 0x2822,
+    0x04FC, 0x6F88, 0x589E, 0x401B, 0x198B, 0x3310, 0x2722, 0x81E0,
+    0xB3C0, 0xBD25, 0x2F26, 0x1B10, 0xBA6E, 0x209A, 0xEA54, 0x3108,
+    0xFC89, 0x8488, 0xFA57, 0x74D8, 0x5880, 0xC061, 0xBD33, 0x153A,
+    0x103B, 0xA962, 0xC871, 0xE98C, 0xE199, 0x83B1, 0x7744, 0x42EA,
+    0x0801, 0x213D, 0x1442, 0x84C6, 0x03E8, 0x040D, 0x8D45, 0x9FA2,
+    0x918C, 0x2CA1, 0xE23A, 0x885D, 0xD6D8, 0x7420, 0xF039, 0xC505,
+    0x4079, 0x333D, 0x1D18, 0x5E8A, 0x3040, 0x1B1B, 0x0B34, 0x3836,
+    0xB90F, 0x01DE, 0x4388, 0x8C98, 0x2B60, 0xD018, 0x4780, 0xD3AB,
+    0x4F8C, 0xF320, 0x7C0F, 0xBA34, 0xD058, 0x3C09, 0xCF45, 0x1897,
+    0x4262, 0x21E2, 0xA352, 0x1C0B, 0x1EA7, 0x961E, 0x2325, 0x3E8C,
+    0xD810, 0x4BA9, 0x810A, 0x8111, 0x3C10, 0x84F4, 0xFC47, 0x938A,
+    0x90A1, 0x100C, 0xFA2A, 0x912E, 0xD104, 0x134C, 0x0CA8, 0x1501,
+    0x8510, 0x183E, 0x9FC8, 0x2343, 0xD13C, 0xA38B, 0xE82A, 0x187A,
+    0x84E4, 0xBA8D, 0x04A8, 0xB18C, 0x5D1B, 0x422C, 0x13C0, 0x1FA3,
+    0xBCC4, 0x441E, 0x0E28, 0xB4AC, 0xBE0C, 0x01C1, 0xFD42, 0x98FE,
+    0x7732, 0xC816, 0x6B29, 0x02DD, 0xB966, 0x550C, 0x876F, 0x648B,
+    0x0182, 0xA0FF, 0xDDF9, 0x4350, 0xA262, 0x4DC8, 0x00BD, 0x67FC,
+    0x56C4, 0x8014, 0x7718, 0xA8D2, 0x21F7, 0xA284, 0x91A2, 0xA605,
+    0x90D4, 0x450E, 0xDCEA, 0x2A8E, 0x2F45, 0x5FA0, 0x3FD4, 0x7918,
+    0x8048, 0x1640, 0x926A, 0x6329, 0x7080, 0x50D3, 0x0639, 0xA490,
+    0xF716, 0x38F4, 0x7D20, 0x9E9A, 0x0371, 0x05D0, 0xCE1A, 0x12F4,
+    0x0235, 0x0131, 0xF4B4, 0x1949, 0xD024, 0x0D00, 0xC45E, 0xBA77,
+    0x100A, 0xC802, 0x3C64, 0x0288, 0x6FE3, 0x4365, 0xB29C, 0x8410,
+    0xB780, 0x821C, 0x7651, 0x0074, 0x3447, 0xD14F, 0x05D3, 0x6445,
+    0xE41F, 0x2206, 0x474F, 0x45A2, 0x933D, 0x3688, 0x5E41, 0xF820,
+    0xC79F, 0x2A11, 0x69C9, 0x2C44, 0x0D1F, 0x4D4F, 0x47CF, 0x913B,
+    0xE2B2, 0xB121, 0xC42C, 0x1DA0, 0x5D7A, 0xA6EC, 0x7D7B, 0x8A90,
+    0x1007, 0x5B84, 0xB116, 0x016B, 0x9352, 0x3EC7, 0xC790, 0x6078,
+    0x0500, 0xE344, 0x9000, 0x8D80, 0xFFCD, 0x99E3, 0xD43B, 0x4208,
+    0x929D, 0xDC82, 0x27B1, 0x3428, 0xF55C, 0x08F4, 0xE9D0, 0xFAB5,
+    0x3840, 0xDEA3, 0x732C, 0xD961, 0xEF9D, 0xD230, 0x0090, 0x481C,
+    0xF303, 0x70E4, 0x9D16, 0x4B18, 0x9215, 0xDE21, 0x7789, 0x3D8B,
+    0xC032, 0x83D6, 0x15A2, 0x0812, 0x9DC2, 0x7A7E, 0x196E, 0x23AA,
+    0x463D, 0x1618, 0x2019, 0x2604, 0x1C50, 0xA1E2, 0x3EB4, 0x491C,
+    0x95F1, 0xBE6E, 0x0C60, 0x7330, 0x7C78, 0xDE50, 0x97D0, 0x85DF,
+    0x7569, 0x915D, 0x1B90, 0x4107, 0x51B2, 0x986A, 0x007A, 0x3564,
+    0x7B7E, 0xF88A, 0x9261, 0x0B8A, 0x4010, 0x126D, 0xEB07, 0x4135,
+    0x86C0, 0x415C, 0x1771, 0x54C5, 0x5CB0, 0x6E1F, 0xF8C0, 0x0402,
+    0xED87, 0xF16C, 0x48E3, 0x4824, 0x6A19, 0xB2D2, 0x1889, 0x82A3,
+    0xBD11, 0x08DD, 0x2201, 0x23C0, 0x1B37, 0x7CBF, 0x5A46, 0x40C0,
+    0x540D, 0x01DD, 0xDEA1, 0x8574, 0x7A1B, 0x1840, 0x2005, 0x9EDE,
+    0xC23C, 0xA894, 0x0DC3, 0x538E, 0xD610, 0x0232, 0x9307, 0x2A12,
+    0xB0C3, 0xCF04, 0xC025, 0xCC58, 0x500D, 0x0604, 0xFA8F, 0x890F,
+    0x2FFA, 0x8878, 0x4808, 0xDD08, 0x3C7D, 0x6764, 0x3E38, 0x531E,
+    0xE8E3, 0x1007, 0xD20C, 0xE7C4, 0x35C8, 0xD02C, 0xFC6B, 0xF45E,
+    0xC57E, 0x407F, 0xF129, 0xD244, 0x7069, 0xC415, 0xD5F0, 0x1A18,
+    0x957D, 0x5858, 0x2069, 0xA655, 0x7682, 0xC17A, 0x3B4C, 0xB89B,
+    0x1080, 0xBE8E, 0xC621, 0xF860, 0x20C6, 0x2E88, 0xFE1B, 0xBCC0,
+    0x1F34, 0x8A6C, 0x0ED1, 0xDFD9, 0xE604, 0xFB13, 0x5102, 0x0B93,
+    0x1097, 0x518E, 0x9746, 0xE999, 0x0411, 0x756A, 0x9176, 0xC231,
+    0xC209, 0x0411, 0xF665, 0xF978, 0x4858, 0xFD5D, 0x6E44, 0xCCC0,
+    0x212F, 0xA3C0, 0x08E8, 0x2860, 0xCC9F, 0x3489, 0x7999, 0xE5F5,
+    0x7804, 0x40A3, 0x9099, 0x888A, 0x47C4, 0x1429, 0x1701, 0x65FE,
+    0xB24A, 0x1A04, 0x3714, 0x0A10, 0x368E, 0x1F80, 0x4907, 0xC023,
+    0xE971, 0xE3F1, 0xF009, 0x00E6, 0xBF10, 0x124F, 0x0683, 0x07B0,
+    0xDCD0, 0x6001, 0x0D3B, 0x44F9, 0x4188, 0x34F0, 0xDB92, 0x83BD,
+    0xD341, 0xD20B, 0xA3CD, 0xF407, 0xA8F6, 0x4BD1, 0x9825, 0xD47C,
+    0x85D0, 0x5462, 0x0D21, 0xE8ED, 0x41E3, 0xCF0A, 0x0600, 0x6FA3,
+    0xB292, 0x1F54, 0x3D1F, 0xD646, 0x88D7, 0xC50E, 0x07D1, 0xEDE3,
+    0xD473, 0x44C1, 0x111A, 0x7EAB, 0xCA1E, 0x702E, 0x3CC6, 0x74F9,
+    0x8BF8, 0x82DE, 0x946D, 0x2E39, 0xBA46, 0xEA03, 0x8811, 0x7DBA,
+    0x0010, 0x31E8, 0x7651, 0xEEB2, 0x7124, 0x007F, 0x09FA, 0x09A3,
+    0xB1BE, 0x4881, 0xE910, 0x320B, 0x4000, 0x504D, 0x3634, 0x6DF4,
+    0x0031, 0xE8F9, 0x11EF, 0xD172, 0x06C9, 0x0F44, 0x5F09, 0x29D4,
+    0x7904, 0x5882, 0x010F, 0xA440, 0x0FB8, 0x3B85, 0x9F44, 0x5B93,
+    0x2431, 0x6281, 0xAC27, 0xA64E, 0x3E88, 0xC213, 0x404D, 0xF35A,
+    0x1890, 0x7CEB, 0x0C69, 0x0018, 0x9EAC, 0x0538, 0x7011, 0x7B96,
+    0x68BD, 0x2154, 0x5DA7, 0x1244, 0xB045, 0xDCB9, 0xE22F, 0x1A02,
+    0x3796, 0x6E84, 0x4622, 0x8603, 0xA01A, 0xF019, 0x8090, 0x5EC5,
+    0x1B13, 0x0796, 0x7E49, 0x1E3C, 0x9E05, 0xB1C4, 0x4B1C, 0x6378,
+    0x8D81, 0xF822, 0x0067, 0x17C7, 0xAF40, 0xDD08, 0x0059, 0x16CC,
+    0x73F9, 0x11B7, 0x4801, 0xF1C4, 0x3D02, 0xA5B0, 0x8774, 0xC41A,
+    0x41C9, 0x7060, 0x955E, 0x8A5E, 0x1258, 0x40EE, 0xD541, 0x04B8,
+    0x72F9, 0x618A, 0x1108, 0x7F14, 0x386D, 0x3090, 0x84B0, 0x87C3,
+    0x834A, 0x6000, 0xA802, 0x0180, 0x2EEA, 0x7012, 0x1391, 0x170F,
+    0xAAC1, 0xC404, 0xEEFA, 0xA31E, 0x3A01, 0x78C0, 0xF028, 0x3408,
+    0x131F, 0xCFDC, 0x5982, 0x0AF8, 0x1B40, 0x4021, 0xCCC0, 0xEC72,
+    0x6100, 0xBBBC, 0x2C4C, 0xDECC, 0x3E20, 0x3CFA, 0x0D3C, 0x803E,
+    0x3C43, 0x1472, 0x65C7, 0xC5C9, 0x25DE, 0xD048, 0x796E, 0xA0BC,
+    0xB758, 0x5B30, 0xD0B0, 0x0F9D, 0xDD09, 0xC458, 0x0804, 0xD867,
+    0xCDA9, 0xC5E9, 0x0FC3, 0xF487, 0x8242, 0x623E, 0x90F2, 0x36BD,
+    0x2704, 0x7A1B, 0x62D0, 0x0410, 0x60C8, 0x01E0, 0x48A4, 0x78AB,
+    0x5217, 0x2721, 0xE90F, 0x4583, 0x4072, 0x4424, 0xE410, 0x6CBB,
+    0x43E4, 0x84E3, 0xF20C, 0xA240, 0x0979, 0xC552, 0x44B8, 0x44D0,
+    0x39AA, 0xAC0D, 0x539B, 0xD16E, 0x4543, 0x46C0, 0xA8FA, 0x2DDD,
+    0x2AB0, 0x1F45, 0xBB0F, 0x1DCB, 0x42C9, 0x29FA, 0x0D1C, 0x7889,
+    0xD952, 0xD134, 0x3902, 0xDA1C
+};
+
+static const u16 ap1302_fw_bootdata4[ ] = {
+    0x8000,
+    0x555C, 0xB8AA, 0x897A, 0x45E8, 0xC623, 0xC003, 0x1D41, 0xA340,
+    0xD3F4, 0x8BE1, 0x69F8, 0x2BA0, 0x7FC7, 0xA601, 0x2420, 0xEEB0,
+    0xA3E1, 0xEB03, 0x6291, 0x0D0D, 0x905C, 0xCCB0, 0xD04A, 0x8990,
+    0x83B3, 0x6D46, 0xF920, 0x6321, 0xB47A, 0x67A0, 0x7C38, 0xA43E,
+    0x18F0, 0x105C, 0x700A, 0xC17E, 0x2AF2, 0xAC38, 0x6526, 0x9068,
+    0x8E44, 0xD89E, 0x0080, 0x1072, 0xCC50, 0x6897, 0xFE89, 0x5443,
+    0x0DA0, 0x8560, 0x714D, 0x1A65, 0xAF21, 0xB21B, 0x748F, 0x6681,
+    0x2442, 0x8460, 0xAFA4, 0xBBCE, 0x6417, 0x6E51, 0xF252, 0x3796,
+    0x7D21, 0x0472, 0x1480, 0x34CC, 0x061E, 0x9303, 0x53D2, 0x1049,
+    0x3021, 0x07FC, 0xC841, 0x7B4F, 0x880E, 0xDF32, 0x202A, 0x3806,
+    0x812D, 0xCCB5, 0x5134, 0x12E8, 0x9191, 0x60C8, 0x5233, 0x0B04,
+    0x58C8, 0x420E, 0xEBAC, 0x3EEC, 0xF12E, 0x9A49, 0x1258, 0x2287,
+    0x201B, 0x543F, 0x2CF4, 0xD429, 0x71D1, 0x51E2, 0xDF42, 0x049E,
+    0xC0E1, 0x4088, 0xE01D, 0x74D3, 0xA944, 0x8F40, 0xA011, 0xC4DF,
+    0xA30D, 0xC804, 0x104B, 0x6080, 0x9608, 0x610C, 0x2140, 0x22E2,
+    0xAC42, 0x08FB, 0x1234, 0x4222, 0x5BA4, 0xE487, 0xABEF, 0x8400,
+    0x2D82, 0x3E42, 0xE05D, 0x75A0, 0x4127, 0xA473, 0xC40D, 0x20AA,
+    0x4840, 0xCE42, 0xCC3D, 0x47E6, 0x5310, 0x1A48, 0xE78C, 0x1721,
+    0x5610, 0x03C3, 0x1704, 0x0498, 0x5106, 0x4D77, 0xF891, 0x1BC0,
+    0x170E, 0x2213, 0x7BA2, 0x5D8A, 0x8D88, 0x07E7, 0x7842, 0xA643,
+    0xDA51, 0xC263, 0x780C, 0xBC7D, 0x2326, 0x4390, 0xD5D3, 0xE485,
+    0xE91C, 0x71ED, 0x8D81, 0xE2F9, 0x23D2, 0xE443, 0x6CC1, 0x183D,
+    0x22F4, 0x89B4, 0x954E, 0x0F21, 0x752A, 0xAF58, 0xD116, 0x7D22,
+    0xF4CF, 0x216F, 0x4790, 0xB697, 0x2177, 0x29CD, 0x00E9, 0x5BBF,
+    0xC387, 0xD22F, 0x487A, 0x330C, 0xBC61, 0x4434, 0x29E5, 0x2039,
+    0x000B, 0x20CB, 0xC0E7, 0xA542, 0xC436, 0x4BB3, 0xF6C5, 0x80FD,
+    0x48DE, 0x661C, 0x390D, 0x1D78, 0x0F25, 0x5BAC, 0x8A74, 0x4039,
+    0x56F6, 0x3028, 0x80FD, 0x8224, 0x6402, 0x00F9, 0xEC09, 0xCD05,
+    0xD309, 0x620A, 0x746E, 0x8081, 0xDD23, 0x5020, 0xB79B, 0x31CB,
+    0xD7DB, 0xA223, 0x7806, 0x7CF0, 0xE78D, 0x92C8, 0xD007, 0xFB57,
+    0x947C, 0x0672, 0x3D77, 0x4C5D, 0x774A, 0x2027, 0x94B5, 0x0BD1,
+    0x3082, 0x2955, 0xC19F, 0x1D1B, 0xDA5D, 0x5F52, 0x5D24, 0x1A5E,
+    0x5DC8, 0x1083, 0x8A1D, 0x2225, 0x1B1D, 0x6F38, 0x2780, 0x91D0,
+    0x0946, 0x5223, 0xD271, 0x05A2, 0x2A2F, 0x15CB, 0x1FA5, 0xE888,
+    0x8671, 0x0183, 0x4F48, 0x893C, 0xAF66, 0x45EC, 0xEA91, 0xB1E6,
+    0x5681, 0x283D, 0x28CE, 0xC74D, 0x2D15, 0x3712, 0x0BD4, 0xE465,
+    0xE0AC, 0x12E6, 0x2E82, 0x03D1, 0x72F2, 0xADE0, 0xF9FD, 0x544B,
+    0x9090, 0xB9D0, 0x3509, 0xA26E, 0x5100, 0xA8B2, 0xEBC0, 0x52EE,
+    0x0E11, 0xEFF9, 0x610D, 0x0050, 0x6CF6, 0x8603, 0x0BB2, 0x86C7,
+    0x8884, 0x9646, 0x80F8, 0x540C, 0x8013, 0x62BA, 0xCAF1, 0x02AA,
+    0x3134, 0x0D1F, 0x4C12, 0x2400, 0x82A1, 0xA77E, 0x9A28, 0x6D54,
+    0x6886, 0x9D19, 0xBAA9, 0x923B, 0x02BE, 0x8CF5, 0x2028, 0xDE0D,
+    0x3CBA, 0xEE21, 0x5003, 0xE4E2, 0x82F0, 0x69E8, 0xF468, 0x88F9,
+    0xE600, 0x7C76, 0xDC57, 0xB800, 0x75D4, 0x49C2, 0x1478, 0x6FD4,
+    0xAA50, 0x0790, 0x3F01, 0x4884, 0xA020, 0x8615, 0x7A47, 0x9C8B,
+    0xD502, 0xA490, 0x1AC0, 0xD3A5, 0x0611, 0x203F, 0xAC0B, 0x3758,
+    0x1DBD, 0x7CEC, 0x3D60, 0xAE40, 0x1746, 0x860F, 0x4309, 0x98F4,
+    0x2EFA, 0x47B5, 0x1E89, 0x751E, 0x9E9A, 0x500A, 0x1AC2, 0x410F,
+    0x0778, 0x8464, 0xA853, 0xE571, 0x7103, 0x0950, 0xAFB8, 0x7488,
+    0x0911, 0x8344, 0x2EE6, 0x0ED3, 0x1610, 0xBFA0, 0xAF25, 0x8E31,
+    0x343E, 0x190F, 0x10C0, 0x1090, 0x8740, 0x448F, 0x7BD8, 0x0830,
+    0x5814, 0x6607, 0x3C0F, 0x2254, 0x0424, 0x421C, 0x8001, 0xCDB8,
+    0x1E97, 0xAA12, 0xC0A0, 0xE8FF, 0x422C, 0xD024, 0xFD12, 0xA246,
+    0xA130, 0x3AFA, 0x4668, 0xC750, 0x9F09, 0x1812, 0xA031, 0xD1DD,
+    0x9FC2, 0x789B, 0x7D09, 0x945C, 0x412C, 0x7C3C, 0x7460, 0xAF74,
+    0x518F, 0x7B1C, 0x178C, 0x000B, 0x5758, 0x3E1C, 0x7926, 0x2300,
+    0xB401, 0x3D13, 0x425E, 0x923A, 0x4489, 0x0528, 0x5903, 0x360E,
+    0x2F17, 0xE517, 0xA47A, 0x0980, 0xC3DA, 0x43C2, 0x2078, 0xBB91,
+    0x608B, 0xA115, 0x8687, 0x90E1, 0x4287, 0xD23D, 0x0665, 0x9208,
+    0x6108, 0x2CC7, 0x3123, 0x7A56, 0x0440, 0xDEF1, 0x343F, 0x48F5,
+    0x1F8B, 0xD88C, 0xB571, 0x3507, 0x0F48, 0xF4BA, 0x692B, 0x8115,
+    0x006D, 0xFA05, 0x008F, 0x0028, 0x6A2C, 0xBB93, 0x0C6B, 0xC827,
+    0x20EF, 0x8541, 0xE638, 0x0401, 0x8935, 0x1026, 0x0014, 0x7590,
+    0x6397, 0x49F2, 0x4F2B, 0x051A, 0xB40F, 0x231D, 0x91AC, 0x3002,
+    0x9CAC, 0xD103, 0x0886, 0x0D8B, 0xA0A0, 0x7916, 0x00D3, 0x7AA3,
+    0x83D2, 0x3982, 0x2D02, 0xB976, 0x820A, 0x8C81, 0x021E, 0xA43B,
+    0x47B8, 0xBB48, 0x211C, 0x8630, 0x4BC0, 0x11A2, 0x6CB1, 0xE884,
+    0x1408, 0x1F1A, 0x4B10, 0xC58F, 0xD08E, 0x904B, 0xD02E, 0xC205,
+    0x0DA7, 0x9639, 0x00C1, 0x3803, 0xB8C7, 0xC471, 0x1005, 0xCF02,
+    0x43A5, 0x3C88, 0xEEAB, 0x5207, 0xCF02, 0x438A, 0xCF08, 0x1A16,
+    0xA049, 0xFB34, 0x644B, 0xBEB0, 0x0212, 0x4C6A, 0x01FB, 0x5650,
+    0xB0A1, 0x8D05, 0x000C, 0x6DC2, 0x8E47, 0x8100, 0x078F, 0xE3A0,
+    0x3078, 0x107E, 0x5A95, 0x23C7, 0x8C47, 0x881E, 0x970E, 0xFA1C,
+    0x7B41, 0xE898, 0x8407, 0x7040, 0x22F0, 0xF8B8, 0xDAC8, 0x44E3,
+    0x8888, 0xEB36, 0xC301, 0xC804, 0x0D30, 0xD3C2, 0xA643, 0xC7B9,
+    0xC861, 0xE7F2, 0x220A, 0xF8A5, 0xD88A, 0xB087, 0xC2D2, 0xC46A,
+    0x863E, 0x7A6C, 0x22AB, 0xBF55, 0x27CA, 0x9BE2, 0x139A, 0x0177,
+    0x1CD1, 0x2F0F, 0x9AA0, 0x7903, 0xEC04, 0x7E9B, 0x111F, 0x11C0,
+    0x10C1, 0xE1EE, 0xA33E, 0xBBDF, 0xC480, 0xC1FA, 0x9C99, 0xB438,
+    0x0546, 0x904A, 0x0607, 0xC0E0, 0xC1D0, 0x4065, 0xE90A, 0xA1C3,
+    0xE266, 0x9043, 0x8A74, 0x1860, 0x703A, 0xBBCD, 0x54B8, 0xA610,
+    0xE448, 0x1749, 0xE110, 0x03D4, 0x7A82, 0x2272, 0xB242, 0x2E42,
+    0x8F57, 0x9617, 0x35B2, 0x1E87, 0x5D1E, 0x8D06, 0x4FA4, 0xCC91,
+    0x0183, 0x8BFA, 0x10BF, 0xF12E, 0x88F2, 0x2BF8, 0x10BF, 0xA8BC,
+    0x2604, 0x5801, 0x11F2, 0xF851, 0x0818, 0x0790, 0x0D3A, 0xAE71,
+    0x1F0B, 0x8A18, 0xF090, 0x8C9F, 0x0B90, 0x241A, 0x8687, 0xA007,
+    0x8252, 0x0240, 0x379D, 0x078F, 0x871C, 0x8C6D, 0x07C6, 0x5401,
+    0x5E6C, 0xF03C, 0x5764, 0xC6B3, 0xDBBD, 0x6724, 0xA4E1, 0xEFA3,
+    0x0C27, 0x6781, 0x8646, 0xE570, 0x3079, 0xD579, 0x7881, 0x584E,
+    0xB078, 0x46B8, 0x643C, 0x809A, 0x5C4A, 0x107B, 0x3F9C, 0x7894,
+    0x48FA, 0x4839, 0x1C57, 0x200E, 0x67C8, 0x182A, 0x307A, 0x057C,
+    0xC42A, 0xD523, 0x44E1, 0xC7FA, 0x800A, 0x1A86, 0x7D16, 0x08A1,
+    0xBB97, 0x8266, 0xE267, 0xE81B, 0xC51F, 0x113C, 0x833E, 0xEE75,
+    0x58A1, 0xE6B2, 0x63DB, 0x3992, 0x0586, 0x5310, 0x12C1, 0x574D,
+    0xF888, 0x7878, 0x01A5, 0xA80C, 0x4B01, 0x24B0, 0x5605, 0x8453,
+    0x9144, 0x81AC, 0x6716, 0xA039, 0x2C0A, 0x201B, 0x0160, 0x9442,
+    0x05AF, 0x2798, 0x1603, 0x702C, 0x0287, 0x400C, 0x3982, 0x0E9D,
+    0x821F, 0x5253, 0x0844, 0x5804, 0x04A8, 0x8668, 0x18A5, 0x8081,
+    0xE1F2, 0xF225, 0x409F, 0x4068, 0x0986, 0x4AD9, 0x8E06, 0x0F05,
+    0xB391, 0x2420, 0x73AF, 0x420A, 0xFCDE, 0x5841, 0x3F56, 0xDC0F,
+    0x8CEB, 0x44EB, 0x28FB, 0xDB3C, 0xF8E7, 0x30D8, 0x3882, 0xAAF0,
+    0x2014, 0xD22E, 0x3A2F, 0xDC40, 0xDF37, 0x9AA3, 0xE0D5, 0x31E8,
+    0xBFF2, 0x3A40, 0x634C, 0xB31C, 0x0282, 0x4FC0, 0x68A2, 0x6896,
+    0x4488, 0x41E2, 0x47D2, 0x3648, 0x5EB2, 0x929C, 0x3C02, 0x5AFA,
+    0x95E5, 0x0246, 0x9B25, 0xE046, 0xE326, 0x8253, 0x03B0, 0xA3CC,
+    0x20EE, 0x7D12, 0xF512, 0x2194, 0xA482, 0x1D1D, 0xA83D, 0xAEB4,
+    0x3ED7, 0x4A2B, 0x2387, 0x4613, 0x8F45, 0xFD8F, 0x63F7, 0x09AB,
+    0xD3C4, 0x467A, 0xA8ED, 0xE1D3, 0xAF5C, 0xB815, 0xC203, 0x4097,
+    0x2602, 0x6263, 0xB860, 0x0580, 0xC38B, 0xAD11, 0xB5EB, 0x46F1,
+    0xE3F7, 0x0201, 0x9160, 0x00F2, 0x1E8F, 0x2010, 0xD22D, 0x1741,
+    0xEF5C, 0x6509, 0x85E4, 0x9F22, 0x2AF8, 0x7751, 0xE518, 0x1FA3,
+    0x5F88, 0x620C, 0xD534, 0xE504, 0x390B, 0x5E7E, 0x8420, 0x6C4C,
+    0x0C78, 0xA9F8, 0xFA42, 0x1511, 0x5143, 0xA973, 0x86CB, 0x31D9,
+    0x2A68, 0x7259, 0x9132, 0x821F, 0x56E5, 0x8840, 0x0571, 0xBE22,
+    0x0904, 0x8E9C, 0x9E91, 0x1034, 0x62F6, 0x1112, 0x034C, 0x200A,
+    0xE21F, 0x1067, 0x8D8B, 0x179E, 0x6C8B, 0xB120, 0x47CB, 0x7D43,
+    0x7561, 0x02BE, 0xCDBC, 0x1E8E, 0xCC1E, 0x9144, 0x106C, 0xB6E9,
+    0x5191, 0x2CB0, 0x3D89, 0x69DA, 0x1CA6, 0x00F8, 0xEC3C, 0xBC76,
+    0x2C47, 0x812A, 0x688C, 0xD77B, 0x1762, 0x1588, 0xD5E9, 0x04C2,
+    0xF6B8, 0x7885, 0x5C96, 0x04ED, 0x1603, 0x0B18, 0x8D00, 0x56F1,
+    0x2AA0, 0x994C, 0x7A30, 0x3C65, 0x45D1, 0xC404, 0x3EE1, 0x4F20,
+    0x0FD2, 0x0782, 0x069D, 0xA077, 0x434D, 0x9048, 0x6063, 0x5F11,
+    0x8072, 0x0AC1, 0x2F48, 0x58A3, 0xE4B5, 0x911F, 0x3D1D, 0xC624,
+    0x0480, 0x40FE, 0xABE6, 0x1F48, 0x5798, 0x1061, 0x5904, 0xB036,
+    0x170F, 0xA019, 0x0910, 0x059A, 0x1CDF, 0xC858, 0x2141, 0xD9F4,
+    0x483A, 0x2844, 0x283D, 0x8504, 0x4C4F, 0x2643, 0x910A, 0x0FC5,
+    0x088B, 0xD1E2, 0xE468, 0x085E, 0x90AD, 0x447C, 0x52C4, 0x543D,
+    0x7D04, 0x4688, 0x7A40, 0xFA42, 0xA8B8, 0xD6E9, 0x4494, 0xB034,
+    0x5B43, 0xE90A, 0xD336, 0x158C, 0xC51A, 0x0C8D, 0x4645, 0xE2BC,
+    0x2F8A, 0x3816, 0xCCC4, 0xF464, 0x1185, 0xA801, 0x5E8C, 0xEF31,
+    0xA873, 0x0ABD, 0x215A, 0x853B, 0x0607, 0xE487, 0xC4FB, 0x359C,
+    0x6100, 0x8286, 0x1201, 0x432B, 0x547D, 0x215A, 0x882C, 0x980B,
+    0xCF6F, 0x840F, 0x3A81, 0xCCE5, 0xB1C9, 0x832F, 0x4856, 0xA60C,
+    0x2603, 0x280F, 0x33A3, 0x8FD2, 0x06A3, 0xCD61, 0x0BC1, 0x5045,
+    0xDE25, 0x8650, 0x5C20, 0x2044, 0x1081, 0x9D1E, 0x1487, 0xA308,
+    0x13F4, 0xDCD2, 0x3807, 0x8FCF, 0xC948, 0x79CE, 0x1902, 0x83C5,
+    0xD00D, 0x334A, 0x0300, 0x7164, 0x2198, 0x2007, 0x93C0, 0xE041,
+    0xD09B, 0xC580, 0x44B2, 0x190A, 0x2448, 0xA4CD, 0x7317, 0xA22C,
+    0x8440, 0xF486, 0xB220, 0x5429, 0xB7E4, 0xAAD1, 0x601A, 0x4C2A,
+    0x4068, 0x9183, 0xA5BB, 0xCFD1, 0xC042, 0x078A, 0xD2A2, 0xF485,
+    0xA161, 0x380F, 0x4858, 0x97A4, 0x2D4B, 0xAA7E, 0x8BA5, 0xBBCA,
+    0x3C43, 0xA4C7, 0x0F24, 0x0108, 0x493D, 0x9E5D, 0x109E, 0x54B8,
+    0xFAA7, 0xE842, 0x3E4D, 0x9A42, 0xE451, 0x9BC9, 0xFA43, 0x0447,
+    0x450E, 0x98E1, 0x103A, 0xA04F, 0xAE57, 0x0CC2, 0x852F, 0x4860,
+    0x902B, 0xD486, 0x46C0, 0x1E80, 0xE0B0, 0x38AA, 0x951B, 0x0338,
+    0x3F29, 0x102D, 0x2269, 0x8766, 0xC391, 0x24E1, 0xE90C, 0x0507,
+    0x84A6, 0xD1E8, 0x5B51, 0xF077, 0xE8C7, 0x17A4, 0x300B, 0xA551,
+    0x47AA, 0x8D44, 0xD022, 0xFAAB, 0xF040, 0xF949, 0x1B5E, 0x8B32,
+    0x1F19, 0xD591, 0xA1C5, 0x18A6, 0x1CA4, 0x41D9, 0x4065, 0xC6C3,
+    0xC448, 0xE984, 0x32C6, 0xEA22, 0x40F2, 0x780F, 0xF830, 0x202D,
+    0xBC01, 0x0E7F, 0x9C22, 0x0F8B, 0xEC4C, 0x2C3D, 0x8CC0, 0x8B48,
+    0xDA8F, 0x66BB, 0x91B3, 0xCE7F, 0x0840, 0x958D, 0x9560, 0x2B92,
+    0xA239, 0x9008, 0x0EE8, 0xED73, 0xB333, 0x5CFB, 0x5A04, 0x5837,
+    0xD0E3, 0x2464, 0x12B5, 0x988A, 0x2450, 0x1C09, 0x54A1, 0x74AA,
+    0x0152, 0x10A3, 0x407B, 0x081E, 0x90F3, 0x5024, 0x4B2D, 0x7873,
+    0x04C4, 0x0D3B, 0xA448, 0x7A43, 0xC88F, 0x613D, 0x5C24, 0x6801,
+    0x1FA0, 0x5038, 0x0E8D, 0x2900, 0xDB00, 0x47F0, 0x1404, 0x4520,
+    0xEAC1, 0xFE04, 0x9E8A, 0x26C1, 0xFFA2, 0xB810, 0x4CD5, 0xE841,
+    0xA108, 0x019F, 0x4878, 0x97A4, 0x3D49, 0x8C5E, 0x23CF, 0xB6C4,
+    0xC7F4, 0x879B, 0x8030, 0x8F1C, 0x4EC5, 0x0280, 0xF0D4, 0x1266,
+    0x6136, 0xE9E7, 0xA166, 0xE760, 0x1CCA, 0x2D3C, 0x90C2, 0x8104,
+    0x478F, 0xE3D0, 0xA1D5, 0x8904, 0x1134, 0x3497, 0x45EF, 0x7FC3,
+    0x91C8, 0x3C96, 0x05D7, 0xA43C, 0x442A, 0x5121, 0x1443, 0x2888,
+    0x5114, 0xA191, 0x4472, 0xB20B, 0x4581, 0xB122, 0x30B6, 0x4924,
+    0xA251, 0x0622, 0x096E, 0x96F6, 0x1261, 0x9C53, 0x8318, 0x04D4,
+    0x5079, 0xDA84, 0x7938, 0xD913, 0x88F1, 0x5091, 0x157B, 0xA480,
+    0x7A82, 0x00BC, 0xF73E, 0x4420, 0xE061, 0x7A43, 0xBD42, 0xD444,
+    0x54F1, 0xAB48, 0xB050, 0x242A, 0x2AE5, 0x9062, 0xFF18, 0x0CDD,
+    0x0060, 0xBC33, 0xE8A7, 0x4477, 0x25B1, 0x607D, 0x1C2F, 0xD044,
+    0x24CC, 0x0410, 0x2833, 0x203D, 0x3C20, 0x6301, 0xBBE2, 0xD563,
+    0x2005, 0x0344, 0x4D24, 0x460E, 0xCFC5, 0x22E3, 0xD3E7, 0x6404,
+    0x1A62, 0x59E5, 0xEAAD, 0x99C2, 0x6E03, 0xF01F, 0xD638, 0xE279,
+    0x78BD, 0x5044, 0x8240, 0xC22F, 0x88A2, 0xC0C2, 0x2ACA, 0x0018,
+    0x399A, 0x80B1, 0xF53B, 0xE202, 0x2795, 0xA84B, 0x9217, 0x9981,
+    0xD82A, 0x45EB, 0x60E3, 0x017A, 0x9070, 0xAF72, 0x03FC, 0xE8BE,
+    0xA0B9, 0x09D2, 0x3E2F, 0xFE1F, 0x1801, 0x17B1, 0x4C88, 0x0E38,
+    0x81E1, 0x00D1, 0x0E4D, 0x00E6, 0xAEE3, 0xD47A, 0x05CB, 0x580A,
+    0x6703, 0x64FF, 0x3403, 0x6A06, 0x00C1, 0x05D4, 0x3942, 0x2900,
+    0x681A, 0x01A1, 0xA3E2, 0x1311, 0x3583, 0x5280, 0x2884, 0x1324,
+    0xD740, 0x180A, 0x3C37, 0xA221, 0xA14E, 0x040D, 0xC039, 0x4E05,
+    0x771B, 0x5903, 0x0164, 0x4086, 0x2801, 0x7DE5, 0xE420, 0x0762,
+    0xB58C, 0x3005, 0xE801, 0x8906, 0x8804, 0x068A, 0x0B51, 0xDE7E,
+    0xA20F, 0x000C, 0x0701, 0x0205, 0x381D, 0x8224, 0x2600, 0x0603,
+    0xCE6A, 0x9422, 0x694E, 0x079E, 0x0067, 0x836E, 0x4442, 0x0386,
+    0xEBB1, 0x4210, 0x3BDD, 0xC07A, 0x1860, 0xFCAB, 0x8A40, 0xA21D,
+    0x3454, 0x2060, 0xF05D, 0x674F, 0x8F7D, 0xBC48, 0x479F, 0x4E67,
+    0x40EB, 0xEB26, 0x8402, 0x73C0, 0x1310, 0x4F71, 0x9B8B, 0xBE89,
+    0x8478, 0x9C80, 0x285A, 0x1990, 0x1E04, 0x2643, 0xA868, 0x0400,
+    0xD007, 0x21EA, 0x6F83, 0x13B0, 0x380F, 0x679A, 0x15CC, 0x044D,
+    0x5580, 0x9488, 0xF18D, 0x6226, 0x8A4E, 0x2D84, 0x872A, 0x683D,
+    0x3D20, 0x85BA, 0x8D81, 0xEB81, 0xE900, 0x4590, 0x619D, 0x8318,
+    0x7C38, 0x0B40, 0x08AB, 0xD2BA, 0x1225, 0xE9D3, 0x8448, 0xF09D,
+    0x74EB, 0xA287, 0x3380, 0x7020, 0x08E4, 0x8100, 0x6A9F, 0x1E65,
+    0x0512, 0x8095, 0x303B, 0x9E60, 0x7AD9, 0xB088, 0x3F42, 0xFE11,
+    0xE59A, 0xBC38, 0x32C0, 0x33D0, 0x2F20, 0x2756, 0xF09E, 0x2407,
+    0x42D7, 0x8EDF, 0xA446, 0xA9DE, 0x7B9B, 0x64A8, 0x4069, 0x1DE1,
+    0x0EC1, 0xDC25, 0xAFA1, 0xFD86, 0x2C8D, 0x3053, 0xCF51, 0xE221,
+    0x9643, 0x11EE, 0x6B73, 0xD444, 0x0FF2, 0xFBAD, 0x45C6, 0x244B,
+    0xB21A, 0x3C8E, 0x3382, 0x344C, 0xA4B4, 0x0FA2, 0x7DB2, 0x1020,
+    0x4281, 0x0019, 0x656C, 0xF0F0, 0xDE58, 0xF846, 0xC842, 0x3F3D,
+    0x5989, 0xBA48, 0x21E2, 0xAE24, 0x3004, 0x01A2, 0x6D92, 0x3DD8,
+    0xC85A, 0x1B21, 0x340D, 0x9F3D, 0x0710, 0x081E, 0xD024, 0x00B2,
+    0xE913, 0x54D3, 0x087C, 0xE8A4, 0x33F0, 0x1A06, 0xA218, 0x4640,
+    0x52EB, 0xD5B1, 0xB83A, 0x4D63, 0x4878, 0xC282, 0x2087, 0x3885,
+    0x1340, 0xD036, 0xB40E, 0xA306, 0x1803, 0x400A, 0x1A42, 0x1E9E,
+    0x4C13, 0x4CCE, 0xC05C, 0x20F8, 0x047A, 0x94C3, 0x07A3, 0x0610,
+    0xCC3C, 0x1050, 0x7D60, 0x0601, 0x81F0, 0x781D, 0xF3A1, 0xEDDA,
+    0xB23C, 0x83C6, 0x20D9, 0xA663, 0x1263, 0x0609, 0x80F3, 0x6CF8,
+    0x83E6, 0x9979, 0x0A05, 0xD9D2, 0x11F9, 0xC290, 0x6084, 0x2143,
+    0xA83F, 0x8803, 0x34CC, 0x02EC, 0x8A2E, 0xC892, 0xEC88, 0x2EC8,
+    0x7608, 0x6408, 0x5410, 0x9E1A, 0x7C13, 0x00A6, 0x9B40, 0xBC2A,
+    0xEFE4, 0x0160, 0xE7E8, 0xEB82, 0xF3A1, 0xF108, 0x5E9C, 0xEE1F,
+    0x1E5E, 0x09A0, 0x5BF9, 0xD0F5, 0x2908, 0x3005, 0x9A65, 0xACD8,
+    0x25AF, 0x9AB1, 0xC7C1, 0xAEA2, 0x0581, 0x7E7B, 0x3512, 0xCE10,
+    0x0EA0, 0x13CA, 0x36C3, 0x8314, 0x0A9C, 0x1821, 0x7C1C, 0xCF00,
+    0x5024, 0x722C, 0xF201, 0x0B8D, 0x14C0, 0x9A65, 0x5906, 0x3017,
+    0x6754, 0x409C, 0x211F, 0x9D0B, 0x8CB8, 0x21E2, 0x80BB, 0x8612,
+    0x0284, 0x19E4, 0x0817, 0x0424, 0xCA20, 0x4F9A, 0xAD44, 0x8529,
+    0x98E9, 0xF101, 0x00FC, 0x9EA6, 0x2019, 0x76C1, 0xAA4F, 0xFA3D,
+    0x0C6B, 0x0009, 0xD404, 0x4090, 0x0D2C, 0xCA0E, 0x361E, 0x20F9,
+    0xA445, 0x7907, 0xFC4E, 0x908B, 0xCE21, 0x05E7, 0x4323, 0xC0D0,
+    0x13D0, 0xF700, 0x90F9, 0x70F8, 0x48C8, 0x5125, 0x48A1, 0x80D0,
+    0x254A, 0x8180, 0x0231, 0x6D08, 0x0550, 0x41D5, 0x90C5, 0xE7D4,
+    0x9938, 0x7A8B, 0xC4BD, 0x33EA, 0x20F7, 0x49D5, 0x081C, 0x7479,
+    0xAB44, 0x80CF, 0x30AA, 0x88BE, 0x6811, 0xB083, 0xEA6F, 0x21EC,
+    0x1ED2, 0x3D01, 0x2407, 0x4E9C, 0x2A12, 0xA0B1, 0x63B8, 0x3544,
+    0x8824, 0x7042, 0xA276, 0x9FFD, 0xD090, 0x242A, 0x4562, 0x7A14,
+    0x0C6A, 0xFC08, 0x43A4, 0x8834, 0xC842, 0x0CBE, 0x3488, 0x4288,
+    0xA024, 0xC4D3, 0xC3B6, 0x9E48, 0x5134, 0xC822, 0x0CBF, 0x3488,
+    0x0883, 0x0252, 0x244D, 0x31FC, 0xD21F, 0x6420, 0xD960, 0x2174,
+    0x9B00, 0x8F24, 0x8854, 0x8016, 0xC078, 0x851F, 0x155E, 0xCB04,
+    0x8A03, 0xB922, 0x8F42, 0xCB88, 0xEDDA, 0xD022, 0x0480, 0x20F9,
+    0x21DF, 0x9483, 0xDCF8, 0x822B, 0x961D, 0x6446, 0x3DB6, 0xBC87,
+    0x8B09, 0xC7CE, 0x9C82, 0x11D0, 0xB201, 0x8711, 0x234A, 0xCB20,
+    0x30F4, 0x184A, 0x045B, 0xF535, 0x78F4, 0x6F68, 0x8442, 0x860C,
+    0xB888, 0x2340, 0x6700, 0x809A, 0x6405, 0x478A, 0x5308, 0x8EB3,
+    0x008C, 0xA480, 0x21A2, 0x4748, 0x0807, 0x0020, 0x08D5, 0x1880,
+    0xA358, 0x2128, 0x08DC, 0x7980, 0x6EC8, 0x80AD, 0x303D, 0x2624,
+    0x9012, 0x2B06, 0x7E0D, 0xF313, 0x585C, 0x258E, 0x2258, 0x00EF,
+    0x5A51, 0x043A, 0x1208, 0x4013, 0x04A4, 0x2D80, 0x31D4, 0x8B02,
+    0xC660, 0x83B7, 0x9105, 0x838B, 0xCECD, 0x03E9, 0x3E62, 0x2A40,
+    0xB0C8, 0x33CF, 0x6730, 0x0487, 0x0CD2, 0xAA41, 0x3E83, 0x3E60,
+    0x3AA0, 0x91CA, 0x5507, 0xD0BE, 0x43C9, 0xB84B, 0xA45A, 0x8413,
+    0x05FB, 0xF63C, 0x74E8, 0x6227, 0xC308, 0x286A, 0x8781, 0x274E,
+    0xA8A2, 0x5FF6, 0x9AE8, 0x9ADD, 0xAABC, 0x3655, 0x0358, 0x40E4,
+    0x8266, 0x7EE5, 0x8D96, 0x58A9, 0xF49A, 0xB892, 0xC011, 0x2C11,
+    0x81E1, 0x7037, 0x9D18, 0x7E6E, 0x731B, 0x3AC0, 0x450C, 0x5ED7,
+    0x6720, 0x3C16, 0x8540, 0xD00D, 0x3BDF, 0xB080, 0xE358, 0x1BCC,
+    0x9C10, 0xA38A, 0x3450, 0x05E3, 0x7791, 0x6317, 0x0004, 0x5382,
+    0x2C7A, 0x335C, 0x4F01, 0x6BB3, 0xD48C, 0xD044, 0x342F, 0xB526,
+    0xC508, 0x2435, 0xC3C8, 0x85CC, 0xE2B2, 0x2E97, 0xB220, 0x1874,
+    0x4704, 0x4178, 0xBA50, 0x835F, 0x6772, 0x4EEF, 0x1661, 0x079D,
+    0x7245, 0x8010, 0xD30A, 0x2188, 0xF440, 0xAA0B, 0xFCB8, 0xE442,
+    0x279D, 0x6944, 0x4DF3, 0xACB0, 0x89BD, 0x8138, 0x806A, 0x3623,
+    0xE74F, 0xE326, 0x5226, 0x93D3, 0x4285, 0xA252, 0x2E9A, 0x1633,
+    0x4910, 0xD02C, 0xC598, 0x8680, 0xF8BB, 0x9ED0, 0xBD71, 0x1497,
+    0xA0CB, 0x8C98, 0x6844, 0x472B, 0x18B0, 0x6017, 0xA492, 0x8BBE,
+    0xA386, 0x8E18, 0x0A26, 0x53F0, 0xF1C4, 0x4088, 0x1941, 0xC5E9,
+    0x5881, 0x09A9, 0xC154, 0x3852, 0xC4BB, 0x5930, 0x48B0, 0xA7AF,
+    0x9D07, 0xC4A3, 0x8225, 0x0F41, 0x6720, 0x4A10, 0x3BB5, 0xC687,
+    0xA766, 0x4840, 0xF088, 0x1175, 0x8359, 0x01A6, 0x1545, 0x171F,
+    0x311E, 0x8B9B, 0x3EBD, 0x4732, 0xBA24, 0xB534, 0x63E8, 0xDA93,
+    0x0841, 0x8020, 0x62AD, 0xB0BF, 0x1C0D, 0x1E98, 0x7D10, 0x0412,
+    0x0ABA, 0x441C, 0x8090, 0xB851, 0x1C02, 0xA06C, 0xA02D, 0x0400,
+    0x204A, 0x0CFB, 0x3EC0, 0xC060, 0xF82A, 0xE5B4, 0xC5D8, 0x4042,
+    0x170A, 0x17BC, 0x8168, 0x801A, 0x5150, 0x32C6, 0xEC61, 0xD75E,
+    0xCC19, 0x2510, 0x5D6F, 0x5438, 0x58C0, 0x4EE8, 0x1AC3, 0x13A7,
+    0xA3CD, 0x1E3E, 0x4CD8, 0x2048, 0x49EC, 0x0EF1, 0x02C2, 0x1080,
+    0x5202, 0x44EC, 0x2420, 0x6899, 0x8068, 0xC55B, 0x4635, 0x7B55,
+    0x90A4, 0x860D, 0x7B5D, 0x4CBB, 0xCDAC, 0x4430, 0x57CF, 0x8769,
+    0x81FD, 0xA54D, 0x2387, 0xA561, 0xC802, 0x9097, 0x4C57, 0x8B1D,
+    0x6654, 0x5EB8, 0x3230, 0x2405, 0xBCA0, 0x00D0, 0x341E, 0x988B,
+    0xD1FD, 0xC202, 0x7824, 0x64A3, 0x0C08, 0x0150, 0xF069, 0xF904,
+    0x3ED3, 0x5650, 0x4A8C, 0x3EEE, 0x511D, 0x3BA8, 0x82B9, 0xDEA5,
+    0xC7DB, 0x8440, 0x2742, 0x6E3F, 0xFC22, 0x05A3, 0x8403, 0x1C48,
+    0x2CCC, 0x52E8, 0xA721, 0xE9AD, 0x41F0, 0x1F79, 0xC803, 0xAE03,
+    0x4580, 0x9D7D, 0x8686, 0x5C78, 0xF218, 0x827D, 0x5F42, 0x554C,
+    0x1CB4, 0x887B, 0xACBC, 0x486C, 0xD914, 0xC300, 0x2C86, 0xF066,
+    0x8886, 0x8657, 0x5847, 0x2410, 0x254F, 0x03D9, 0xFB45, 0x7958,
+    0x5162, 0xC4F4, 0x4C00, 0x41A6, 0x2252, 0xC861, 0x20AA, 0x9E98,
+    0xB610, 0xF98F, 0x6062, 0x5106, 0x9403, 0xB274, 0x261C, 0x04BF,
+    0x04BE, 0x9815, 0x1059, 0x9485, 0x4240, 0x700A, 0xFB04, 0xE0CF,
+    0x6892, 0xCCBA, 0x1E8A, 0x0F10, 0xC019, 0xC090, 0x3B0A, 0x9CE0,
+    0x1A00, 0xC3C7, 0x7A03, 0xE41C, 0xB129, 0x11E9, 0xC2F2, 0xED81,
+    0x931D, 0x7A84, 0x3CB7, 0x0591, 0x10B9, 0x09E9, 0x604F, 0x1203,
+    0x944A, 0x1681, 0x5C48, 0xA0CF, 0x3428, 0x7A26, 0x6C45, 0x90CD,
+    0x11FA, 0x1880, 0xC03A, 0xB2A0, 0xBF12, 0x224B, 0xA269, 0x046E,
+    0x6FB0, 0x1B50, 0x07C0, 0xE60C, 0x42E0, 0xE4EC, 0xD4B1, 0x310F,
+    0x2E82, 0xF01F, 0x2D9C, 0x090A, 0x2100, 0xC530, 0x5068, 0x0C35,
+    0x163E, 0x7A73, 0x3F34, 0x5115, 0xA300, 0xD6F1, 0x91A0, 0x9A22,
+    0xF4BC, 0x00F0, 0xCA5A, 0x4680, 0xAB14, 0x01E6, 0xC5D5, 0x2008,
+    0x3214, 0x8081, 0xB07C, 0x686D, 0x0943, 0x6108, 0xF04B, 0xA080,
+    0xC19E, 0x43E8, 0xE854, 0x08D7, 0x1573, 0xCB04, 0x1702, 0x80D0,
+    0x9064, 0x2DF5, 0xE3F2, 0x137A, 0x00E4, 0x42A0, 0x1425, 0xF468,
+    0x011A, 0x5211, 0x0AC7, 0x9043, 0xB2EC, 0x4BB9, 0x6DCA, 0x2510,
+    0x2E54, 0x5250, 0x6049, 0x1D81, 0x6C84, 0x1110, 0x38D9, 0xEA00,
+    0x19A2, 0x078F, 0x80E2, 0x4029, 0x0A8E, 0xAC39, 0x204F, 0x0A3A,
+    0x0019, 0xA407, 0x8D00, 0xE1D2, 0x880A, 0x4492, 0xFD05, 0xFC7C,
+    0xA50C, 0x7A9A, 0xA4BB, 0x1874, 0xFC1A, 0xA43D, 0x6B44, 0x8F52,
+    0x6091, 0x75E7, 0xAA01, 0xEB95, 0x6120, 0x3986, 0x04FB, 0x573C,
+    0x7D2D, 0xAE40, 0x51AD, 0x59C4, 0x4374, 0x5C18, 0xF901, 0x5CFC,
+    0x095A, 0x64B8, 0x41D2, 0xC842, 0x40C7, 0x9974, 0xA169, 0xD010,
+    0xBCF5, 0x3EA7, 0x45CD, 0x1045, 0xEBF6, 0x243C, 0xF5E8, 0x2019,
+    0xB607, 0x1D80, 0xE7AA, 0x8844, 0x0522, 0xC218, 0xA50D, 0xC40D,
+    0x8626, 0x8037, 0xCA6A, 0x88EA, 0x02FD, 0xA16C, 0x2289, 0x0DD7,
+    0xE2C7, 0xE2C8, 0xC2EE, 0x85F2, 0xE8F9, 0x810C, 0xB44B, 0x0248,
+    0x90D9, 0xEA82, 0x5379, 0xC768, 0x4860, 0x880A, 0x1140, 0x1046,
+    0x1D0F, 0x06AA, 0x218B, 0x38C3, 0x0E8F, 0x7C40, 0x16F0, 0xF0D1,
+    0x1C9A, 0xE9A2, 0xD7A7, 0x21E9, 0xDFC3, 0x0D32, 0x4292, 0x8A00,
+    0x1772, 0xF62F, 0x1B8A, 0x0DF4, 0xA268, 0xCE68, 0x0E21, 0x114C,
+    0x1173, 0xE742, 0x0EF7, 0x7792, 0xE2D0, 0xA200, 0x23D9, 0x7182,
+    0x4084, 0x7CB1, 0x98B1, 0x9F09, 0xEB8C, 0xF4B9, 0x6321, 0x3643,
+    0x0C46, 0x89E5, 0x7AD8, 0x12FC, 0xD498, 0xBCAD, 0x7239, 0x48C2,
+    0x4265, 0x1F17, 0x930D, 0x07B5, 0xCACB, 0xB8D2, 0x872B, 0x9040,
+    0x460E, 0xAF4E, 0x6991, 0xA075, 0x1822, 0x0E07, 0xD0E4, 0x5E23,
+    0xCB4D, 0x0F91, 0x1E88, 0x0DCB, 0x4CCB, 0xB3A1, 0xC4E5, 0x1DB2,
+    0xE147, 0xC402, 0xE5C8, 0x7EC4, 0x4FEE, 0x04A1, 0xE9E9, 0x1203,
+    0x8BF0, 0x200F, 0x0F74, 0x9D93, 0x7008, 0x183E, 0x03C4, 0x138F,
+    0xAC50, 0xC809, 0x0DAC, 0xC241, 0x35B9, 0xD020, 0x2DBA, 0x5D2B,
+    0xF822, 0xB559, 0x104D, 0x6E54, 0x080B, 0x7997, 0x473F, 0x1735,
+    0xA11B, 0x6280, 0x51CC, 0xF409, 0x803D, 0x5005, 0x6804, 0x7882,
+    0x7064, 0x0014, 0xAFB0, 0x024D, 0x0308, 0x90F1, 0x063A, 0x0147,
+    0x9ECF, 0x44D9, 0x358C, 0x0EFF, 0x6211, 0x6016, 0x0A81, 0x1150,
+    0x2810, 0x0302, 0x3C16, 0x0A01, 0x1F0A, 0xEA08, 0x4048, 0x02C1,
+    0x6022, 0x2BF7, 0x0FC8, 0x9243, 0xC1E7, 0xDCC3, 0x820C, 0xF3AA,
+    0x01F0, 0xBE58, 0x80A6, 0xD72A, 0xA022, 0x43BB, 0x3A08, 0x91E3,
+    0x9AC3, 0xD63B, 0x4204, 0x1054, 0x68AF, 0x3102, 0x5817, 0xEBC3,
+    0x112A, 0xADCA, 0x7D65, 0x023C, 0xD7F4, 0x7C4D, 0xD642, 0x5F5D,
+    0x6290, 0x102F, 0x4851, 0xC782, 0x2C10, 0xC9F3, 0x0521, 0x9108,
+    0x103D, 0x5EB2, 0x7704, 0x18E4, 0x041E, 0xC2BF, 0x6B62, 0x90E1,
+    0x3490, 0x5C9D, 0x2F01, 0xD808, 0xF3ED, 0xA984, 0x50E4, 0x3F31,
+    0x3F07, 0x564D, 0x49A6, 0x1379, 0x5338, 0x4F00, 0x6FB0, 0x418C,
+    0x4802, 0x03A9, 0x80B4, 0x14C4, 0x3874, 0xF148, 0x81E7, 0xD036,
+    0x5023, 0x4E82, 0x5680, 0x1E75, 0x4393, 0x6028, 0xA4A0, 0x68F8,
+    0x5318, 0xB12F, 0x0E20, 0x6001, 0xA7B3, 0x1E82, 0x0F3E, 0x8C96,
+    0xAED8, 0x8C29, 0x296B, 0x0687, 0x3FC8, 0x620C, 0xB250, 0x1EA8,
+    0x0078, 0x3D40, 0x5A03, 0xCA28, 0x829A, 0xC180, 0xA501, 0xA981,
+    0x24B1, 0x98F9, 0x9F07, 0x55CB, 0x2021, 0x1FE5, 0x1292, 0xECEA,
+    0xB1E5, 0xE2E4, 0x02F6, 0x3F89, 0x76E4, 0x3172, 0xDD51, 0x313B,
+    0x7221, 0x0354, 0x6AB0, 0x588D, 0x5EDB, 0xBD43, 0xD11B, 0xE442,
+    0x8803, 0x4053, 0xA047, 0x3CFF, 0x8129, 0x7A34, 0xB47A, 0x14DC,
+    0xBAC9, 0xA132, 0x2AB3, 0x8BAD, 0xBDC4, 0x6321, 0x4221, 0xAC09,
+    0xE428, 0x6914, 0xBD5B, 0x6223, 0x9F9F, 0x6091, 0xEB22, 0xD1EA,
+    0x2A51, 0xF705, 0x988A, 0xF982, 0xA900, 0x0748, 0x67A3, 0x3E44,
+    0x0834, 0x8334, 0x0D01, 0x48D2, 0x14BD, 0x5428, 0x2309, 0x018B,
+    0xF60A, 0x5203, 0xDC19, 0xE249, 0xD8D8, 0x04F4, 0x0064, 0x801E,
+    0x2959, 0x2188, 0xA231, 0x4823, 0x187D, 0x3942, 0x6038, 0x9033,
+    0x8A21, 0x9BAB, 0x9448, 0x8219, 0xC7D3, 0x1423, 0x0388, 0x010C,
+    0xA209, 0xFB29, 0x8088, 0x20A0, 0x7B29, 0x4210, 0x3ADC, 0x4051,
+    0x011E, 0x2422, 0x3194, 0xD30E, 0xBCA1, 0xB02C, 0x1246, 0xA677,
+    0x5898, 0x0590, 0xE5D3, 0x0C45, 0xD9F3, 0xE38C, 0xCC00, 0x5248,
+    0x1324, 0xC60E, 0xA53F, 0x1036, 0x30BC, 0xE8AE, 0x8300, 0xEF63,
+    0xDC91, 0x6439, 0xF9D4, 0x8C44, 0xE2C8, 0x3450, 0x0173, 0x7AC6,
+    0x9204, 0xD407, 0x590A, 0x5184, 0xE812, 0x027A, 0x02BA, 0x0044,
+    0x1058, 0x3F1C, 0xB389, 0xFA30, 0x1CA1, 0xC00D, 0x1E4C, 0x5F3A,
+    0xFB89, 0x81EB, 0xA9B4, 0x0820, 0x38A2, 0x1B7C, 0xEA40, 0x2201,
+    0xA612, 0x2739, 0x883C, 0x8944, 0x574F, 0xC63F, 0x2669, 0xF585,
+    0x0892, 0x40FC, 0x501A, 0xA0F2, 0x80FE, 0xBCAB, 0x3107, 0x0911,
+    0x83D6, 0x53B2, 0x0110, 0x6219, 0x6250, 0x5222, 0x08C0, 0x5DCB,
+    0x5059, 0x382A, 0x044A, 0x2200, 0xC320, 0x8112, 0x8B17, 0x1C05,
+    0x1E1D, 0xFE3E, 0xDC0A, 0x47CA, 0x0F09, 0x8688, 0x9017, 0x0B08,
+    0x0054, 0x2417, 0x27A6, 0x978B, 0xD402, 0x0662, 0x450F, 0x72F0,
+    0x1139, 0x8119, 0x0E9A, 0x5C3F, 0x4A90, 0x279E, 0x1020, 0xE79D,
+    0x864B, 0xCEAB, 0x6441, 0x1E5E, 0x755C, 0x2A5C, 0x267A, 0x0393,
+    0x01CC, 0x7847, 0xAEE9, 0xC443, 0x4C78, 0x1948, 0x21D0, 0xA22C,
+    0xE1C4, 0x834E, 0x8508, 0x1A69, 0x9044, 0x9E58, 0xE894, 0x46A0,
+    0x1607, 0xE260, 0x0358, 0x8025, 0x8C00, 0x3877, 0x04C9, 0xFE99,
+    0x441B, 0x9BE0, 0xCA2C, 0x40AF, 0x3ADF, 0x1122, 0x05A7, 0x58E0,
+    0x6B0F, 0x64B7, 0x9D63, 0x8880, 0x2C4C, 0xBF35, 0x0418, 0x0B8C,
+    0xE047, 0x7A4E, 0x250A, 0x0616, 0x7618, 0x80E4, 0x102C, 0x511E,
+    0xD401, 0x33DD, 0x46BC, 0x4182, 0xDD40, 0xB81E, 0x1012, 0x81C4,
+    0x991B, 0xE756, 0xA260, 0xA540, 0xB928, 0x8D80, 0x9504, 0x899A,
+    0x0D0C, 0x9DAE, 0x5431, 0x263C, 0x01E6, 0xA8CC, 0x6B0C, 0xC471,
+    0xD046, 0x9401, 0x3D82, 0xC7CE, 0xF747, 0xEB0A, 0xC92B, 0x8A8A,
+    0xC122, 0xC475, 0xF5CB, 0x81E1, 0xE501, 0x7C91, 0xDCF5, 0x27CE,
+    0xB265, 0xE015, 0x5100, 0xCB10, 0x5AC1, 0x660E, 0x2072, 0xFA1A,
+    0xEC8D, 0x9EA1, 0x9B3F, 0x17CB, 0x08AF, 0xC939, 0x48A2, 0x0F3C,
+    0xEB42, 0xA1A0, 0x2A58, 0x7001, 0x6057, 0xCEB5, 0xA845, 0x982A,
+    0x9F4B, 0x7B88, 0x9E41, 0x03C4, 0x2941, 0xE756, 0xA4A5, 0xA041,
+    0x03E5, 0x117D, 0x3291, 0xAA25, 0x2909, 0x2510, 0x7F5B, 0xC048,
+    0x0405, 0x8140, 0x10F9, 0xD64C, 0x4D51, 0x193F, 0x2D34, 0x1574,
+    0x2058, 0x1429, 0x9AA2, 0x1796, 0x9B4A, 0x2512, 0x8940, 0x3E50,
+    0xC6C8, 0xA35C, 0x408C, 0x8492, 0x843A, 0x04C3, 0x18DD, 0x20B0,
+    0x2919, 0x2008, 0x32C0, 0x4589, 0x2B45, 0xC450, 0x1243, 0xC920,
+    0x2316, 0x0337, 0xAEF6, 0xD460, 0x2F20, 0x8601, 0xEC7D, 0x2204,
+    0xEC51, 0x20EB, 0xD930, 0x65B3, 0xB5C8, 0x8454, 0x0DC7, 0x971D,
+    0x171D, 0x2C9A, 0x0029, 0xCA19, 0xF463, 0x3201, 0x2F2A, 0x072F,
+    0x383B, 0x172B, 0x2826, 0x4D00, 0x8C88, 0xC916, 0x1343, 0xC4EF,
+    0xA23D, 0x181C, 0xC3E0, 0x4213, 0x8798, 0x7C8F, 0x8DE2, 0x4420,
+    0xF15D, 0x51DD, 0xA704, 0xD041, 0xD0C5, 0x640B, 0x9220, 0x17A0,
+    0x5548, 0xB828, 0xCB10, 0x0B4F, 0xB096, 0x62A1, 0x9B89, 0x662B,
+    0x237A, 0xA193, 0x162C, 0x10F1, 0xA23B, 0xCEBC, 0xCADE, 0xBC43,
+    0xC460, 0x8B89, 0x788D, 0x7921, 0xC91D, 0x24C1, 0x61A6, 0x2058,
+    0x8067, 0x3170, 0x8350, 0x9210, 0x4D96, 0x8F64, 0x8F55, 0x1E89,
+    0x0D42, 0xCF3A, 0xDC36, 0x5B24, 0x7A3D, 0x3A01, 0xCB53, 0x4046,
+    0x1405, 0x8178, 0x661B, 0x07A7, 0x8405, 0x0862, 0x288E, 0x2489,
+    0x8278, 0xAA78, 0x0BA2, 0xF8C3, 0x1063, 0x18CE, 0x360E, 0x23B0,
+    0xF640, 0x10A4, 0x511C, 0x4992, 0xC4CF, 0x9D6E, 0x64A9, 0x2B8B,
+    0x52E4, 0xC031, 0xCE00, 0x0063, 0x16CF, 0x0330, 0x7BC4, 0x8C06,
+    0x50F4, 0x360E, 0x6179, 0xE063, 0x79D6, 0xCC44, 0x20CF, 0x9711,
+    0x8B01, 0x5A85, 0xFB80, 0x5F38, 0x1ECA, 0x10E0, 0x5B38, 0x1E0A,
+    0x42B5, 0xD3C4, 0xC02A, 0x9814, 0x3F03, 0x79DD, 0x62C0, 0x1E3D,
+    0x8887, 0x8148, 0x3D88, 0xA781, 0x443D, 0x88E7, 0x8141, 0xD2C0,
+    0x0261, 0x9E04, 0xF0F6, 0x3944, 0x0935, 0xD2CC, 0x65C6, 0x81C4,
+    0x963A, 0x87F3, 0xC007, 0xF3AD, 0x721E, 0x8B8C, 0x1BD8, 0x808E,
+    0xEFAC, 0xE123, 0x07B1, 0x60F0, 0x2287, 0xB168, 0xF022, 0x07B1,
+    0x64F0, 0x6073, 0x143B, 0x27AC, 0x8F02, 0x0ABE, 0x4ABE, 0x08F0,
+    0x1FA2, 0x4BB6, 0xB748, 0xF01E, 0x2151, 0x32CF, 0x01D1, 0x48CA,
+    0x3C06, 0xE646, 0x61E0, 0x3532, 0x3350, 0x3232, 0x314F, 0x0BB4,
+    0x8180, 0x8FCE, 0xB5E4, 0x2E44, 0xA267, 0x1E02, 0xB344, 0x19E0,
+    0x2A64, 0xD68C, 0x180A, 0x1E7E, 0x5A11, 0xC4F0, 0xF1FD, 0xF0D1,
+    0xD0F3, 0xAD61, 0x0144, 0x1421, 0xB405, 0x5E7C, 0x2E03, 0x1900,
+    0x888E, 0x8F13, 0x840B, 0x1768, 0x8322, 0x21B2, 0x20E5, 0x1589,
+    0x0078, 0x94A0, 0x6EA3, 0xBC64, 0xA250, 0x9A22, 0x0F9D, 0x6950,
+    0x0308, 0x6BB6, 0x249B, 0x7409, 0xA1C4, 0x937E, 0x3D10, 0x045B,
+    0x00CC, 0xC0A3, 0x281B, 0xE3E4, 0x02C0, 0xF730, 0x2004, 0x8055,
+    0x545E, 0xD43F, 0x2880, 0xEA36, 0xB400, 0x30FC, 0x33CF, 0x1F33,
+    0x5426, 0x0331, 0x018F, 0x9D6D, 0x5203, 0x062C, 0xFA31, 0x13CF,
+    0x117C, 0x7838, 0x0691, 0xE8BB, 0x307B, 0x5BC8, 0x41E3, 0x481F,
+    0x2485, 0x73C0, 0x0483, 0x1F39, 0x588C, 0x408B, 0xC5D1, 0xD210,
+    0x98C0, 0x6042, 0x019B, 0x210F, 0x8157, 0x901E, 0x833D, 0x1432,
+    0x80B9, 0xA40B, 0x9422, 0x559A, 0x442E, 0xF56A, 0x58F8, 0x8D18,
+    0x7CD6, 0x9C46, 0xFEAA, 0xD879, 0x3340, 0x81E6, 0xB026, 0x5C14,
+    0x00B0, 0x6408, 0x8225, 0xB752, 0xDA08, 0x1825, 0x0423, 0x0730,
+    0xB52F, 0x6C2C, 0x0FAB, 0x19C7, 0xC439, 0x85D9, 0x5562, 0x4074,
+    0xE6B1, 0x16C0, 0xCEB9, 0xF880, 0x50D1, 0x1D73, 0x5142, 0x179C,
+    0x7492, 0xD933, 0xA8AD, 0x3019, 0xC5E0, 0x5A1E, 0xE20D, 0x4E4D,
+    0x4282, 0xDEA6, 0xB713, 0xF11E, 0xC901, 0x107F, 0x95FB, 0x3604,
+    0xFA99, 0x6C4E, 0x4D42, 0x817A, 0x26CC, 0x40D3, 0x4006, 0x0603,
+    0x2013, 0xC02A, 0x2601, 0x0421, 0x9F83, 0xC413, 0xF1B8, 0xD198,
+    0x9E39, 0xF463, 0xA064, 0x0CA2, 0xA5C8, 0x74FF, 0x98E9, 0x6B0D,
+    0x9E53, 0x5C5C, 0xCA0C, 0x4A7F, 0x68A1, 0x306E, 0xF89B, 0xD07D,
+    0x6D54, 0x6306, 0xA4A0, 0xBD83, 0x2625, 0x0412, 0x13F0, 0x4186,
+    0x5161, 0xC8C0, 0x91EA, 0x7FA2, 0xC9AA, 0x2D88, 0x60B7, 0xF47A,
+    0xE8C6, 0x820E, 0x09BC, 0x9B62, 0xD91F, 0x07D1, 0x9082, 0x54FB,
+    0x3604, 0xFD56, 0xCA46, 0xC84F, 0xD334, 0x83CE, 0x7848, 0xA328,
+    0x7D56, 0xB467, 0x80C2, 0x6C19, 0xF713, 0x0943, 0xC8AC, 0x4CA0,
+    0xF1D8, 0x7494, 0x4780, 0xB240, 0x9C46, 0xA93F, 0xEA75, 0x41EA,
+    0x8661, 0xEAC7, 0xF13A, 0x11EB, 0x27F1, 0xECFD, 0x7211, 0xC85B,
+    0xA980, 0x371E, 0x01B0, 0x3F16, 0xC80C, 0x1DB7, 0x5E5D, 0x8228,
+    0x7AD6, 0x9303, 0xC020, 0x6D2E, 0xABE3, 0x1391, 0x1F25, 0x3E20,
+    0x071E, 0x5125, 0xEDD8, 0xD100, 0x7B7A, 0xB4B1, 0x2489, 0xA469,
+    0x1164, 0x9045, 0xE7CD, 0x71E6, 0x83A7, 0x82C2, 0x0D22, 0x1892,
+    0x3208, 0x10C0, 0xE6EB, 0x12C1, 0x2404, 0x4208, 0xC3F3, 0xC539,
+    0x1DC0, 0xA1A2, 0x4276, 0x1298, 0x9246, 0x8907, 0xD127, 0x0207,
+    0x9DE4, 0x7774, 0x97C9, 0x9E77, 0x915D, 0x7690, 0x2689, 0x7025,
+    0xE474, 0x8906, 0x7080, 0x9EB7, 0xB540, 0xB21A, 0x01A0, 0x4BD8,
+    0x5D42, 0x3B10, 0x2011, 0x4201, 0x82BE, 0x17CD, 0x1EF8, 0x4540,
+    0x002E, 0x6AE1, 0x2CBC, 0x61C5, 0x0403, 0x79D2, 0x4B30, 0x6874,
+    0xB740, 0x9CBD, 0x4E86, 0x5E98, 0x9023, 0x486F, 0x02C0, 0x9004,
+    0x5E20, 0x8523, 0xC003, 0x2085, 0x1280, 0x5DF1, 0x24C9, 0x805E,
+    0x23FD, 0x1E5D, 0xC425, 0x007B, 0xD495, 0x4234, 0x1201, 0x2C10,
+    0x7AC4, 0x3858, 0x67C7, 0x9306, 0x3212, 0x0134, 0x1044, 0x0B0E,
+    0x3EA5, 0x7C20, 0xC8C0, 0x3546, 0x2034, 0x4209, 0x4202, 0x37A6,
+    0x6506, 0x7602, 0xB7CD, 0x85C4, 0x4F04, 0x8874, 0xF6D1, 0x8BC5,
+    0x8043, 0xE9BD, 0xA4B3, 0x7910, 0xE813, 0x63F0, 0xB0D8, 0xC407,
+    0x6AF5, 0x978E, 0xAC44, 0xA030, 0x000E, 0xE4B5, 0x2F1D, 0xF70B,
+    0x1C13, 0x6A42, 0x0911, 0x75D9, 0x9A1E, 0xD12A, 0x1103, 0xCF09,
+    0xCD5C, 0x7000, 0xD819, 0x88A6, 0x3AEC, 0xB087, 0x20A2, 0xCEA1,
+    0x893A, 0x3BA0, 0x4846, 0x9004, 0x1F35, 0x4482, 0x17D0, 0xAE48,
+    0x08E0, 0x419D, 0x6A80, 0x1C46, 0x8F54, 0x9C8F, 0xAA4E, 0xC7AF,
+    0xF244, 0x0104, 0xC10E, 0x011A, 0x2060, 0x61A4, 0x5933, 0x4443,
+    0x9EC2, 0x5E5A, 0x4181, 0x1003, 0x38B2, 0x0026, 0x01B6, 0xD8C3,
+    0x9766, 0x7D08, 0x801A, 0x2068, 0x0652, 0x62A7, 0x6068, 0x0732,
+    0xC100, 0x8A01, 0x2E6B, 0x430C, 0x197B, 0x6D54, 0x6DBA, 0x6039,
+    0x0E19, 0x7B2A, 0xA920, 0xCB40, 0xBE37, 0x5580, 0x11E0, 0x4289,
+    0xA702, 0x6886, 0x1A93, 0xB2E9, 0xF041, 0x004A, 0x80C0, 0xF1E4,
+    0x0083, 0xCE1C, 0x5034, 0x02BE, 0x5ADC, 0x5E62, 0xF510, 0x84F1,
+    0x1FFD, 0x5FB4, 0x2081, 0x0410, 0x9D24, 0x99D0, 0x079A, 0x3856,
+    0x2001, 0xE816, 0xE33A, 0xAC08, 0x4D04, 0x8078, 0x540E, 0xF613,
+    0x719E, 0x2359, 0xFE79, 0x1E23, 0x4C08, 0x78ED, 0xB92F, 0x1D4E,
+    0x2996, 0x1C40, 0x778D, 0xE311, 0x0774, 0x7502, 0x071B, 0xA8F8,
+    0xE2E1, 0x067D, 0xB680, 0x859A, 0x0414, 0x6765, 0xFE2C, 0x1184,
+    0x0388, 0x9A3A, 0x2282, 0x1CB1, 0x810E, 0x2F50, 0x10E3, 0x2F78,
+    0x4051, 0x3220, 0x4204, 0x4B0E, 0x56C8, 0x85AF, 0x0628, 0x45C4,
+    0xAF52, 0x1003, 0x4774, 0x5A92, 0x61E0, 0x13F5, 0xE7F6, 0xF9E4,
+    0x9604, 0x38F3, 0x0113, 0xB846, 0x0D33, 0x5470, 0xF548, 0x7901,
+    0x67C1, 0xFA41, 0x01E5, 0x103C, 0x8431, 0x0121, 0x458C, 0xC006,
+    0x1E43, 0x2AF4, 0x23E8, 0x3240, 0xD61A, 0x4D51, 0xA7C2, 0x5062,
+    0x700E, 0x00D1, 0x4CC0, 0x103B, 0x03DE, 0x367E, 0x1E64, 0x2E40,
+    0x3083, 0x52A0, 0x52F8, 0xF6E0, 0x863E, 0x5466, 0x631F, 0xB9A5,
+    0x8FA4, 0x5B04, 0x32EA, 0xD1C4, 0x060F, 0x552E, 0x2A2F, 0x226A,
+    0x8BCA, 0x1798, 0x7AB1, 0x8CC9, 0x5F56, 0x9420, 0x289A, 0x22DA,
+    0xCD86, 0x03CF, 0xC282, 0x1E80, 0x8281, 0xAC2B, 0xF8E8, 0x2442,
+    0x7E92, 0x0520, 0x6FC2, 0x1BD2, 0x688A, 0x9E50, 0x5B1F, 0x3F18,
+    0xA606, 0x1A51, 0x47E7, 0x4791, 0xF3F1, 0x9200, 0x6185, 0x1062,
+    0x6A3E, 0x58D7, 0x29C4, 0x44D4, 0xFD54, 0x2CB7, 0xAA97, 0xCA0D,
+    0x3121, 0x3257, 0xD54F, 0x0806, 0x2688, 0x76B5, 0xC974, 0xC842,
+    0x6020, 0x4042, 0x6020, 0xB4F5, 0x52C3, 0xCBED, 0xBCFD, 0x9654,
+    0x0110, 0xEA0D, 0x50E5, 0x5838, 0x6C1B, 0xB60D, 0x9B06, 0xBEAA,
+    0x7244, 0x3453, 0x010D, 0x9B29, 0x25D4, 0x3788, 0x5850, 0xBD54,
+    0x9441, 0x37B1, 0x0791, 0xF55C, 0xF17A, 0xA9A1, 0xAE99, 0xCA2F,
+    0x1F33, 0x25A7, 0x022F, 0x2A32, 0x1968, 0x8869, 0xEACA, 0x057D,
+    0x54D4, 0xD774, 0x2613, 0xFAFB, 0xF7EE, 0x6D48, 0x3E68, 0xB330,
+    0x28E4, 0x084C, 0x1D05, 0x8200, 0x70CC, 0x0021, 0x64E0, 0x02F6,
+    0xC789, 0x033D, 0xC1E4, 0x3E40, 0x8323, 0x44E3, 0xE9F0, 0xC43D,
+    0x920A, 0x2020, 0x5042, 0x8040, 0xE1A3, 0x70D8, 0x81A6, 0x3685,
+    0x3842, 0xF344, 0xDFAF, 0x91F5, 0x98B0, 0xE0F5, 0x137C, 0xD038,
+    0x0211, 0x6403, 0xF17D, 0x48C4, 0x0768, 0x080D, 0x90A0, 0xDE85,
+    0x1F44, 0x928C, 0x4141, 0x9312, 0x011C, 0xC48D, 0x9EEC, 0x4DFD,
+    0xE538, 0x8A01, 0x14D3, 0x3798, 0x090D, 0x2378, 0xA218, 0x2088,
+    0xD392, 0x0C60, 0x1462, 0x04C4, 0x069E, 0x11A2, 0x380A, 0x3282,
+    0x6620, 0x10C3, 0x9393, 0x0C00, 0xC012, 0x1606, 0x099C, 0xD837,
+    0xA148, 0x0319, 0x6AF8, 0x0A01, 0x3FB5, 0xB108, 0x2240, 0xD137,
+    0x3AB9, 0x9848, 0xB44F, 0x1D04, 0xF91A, 0xC197, 0x7F50, 0x89A6,
+    0x6C7B, 0x1D20, 0x4D8E, 0xBD88, 0x4C2C, 0xEC53, 0xE238, 0x484F,
+    0x0ADC, 0x8DE4, 0x0013, 0x1B3E, 0x22F1, 0x1F04, 0x978F, 0xA449,
+    0x4C7A, 0x093D, 0x374A, 0x46A9, 0xA279, 0x0146, 0x91A2, 0x4566,
+    0x1788, 0x0208, 0x1B40, 0x215C, 0x2079, 0xDF68, 0x4802, 0x9503,
+    0x48CD, 0x2484, 0x01E4, 0x440A, 0x753F, 0xC41B, 0x1A26, 0x4CC0,
+    0x0048, 0xCA01, 0x0206, 0xC810, 0x5779, 0x27BE, 0x4B92, 0x03AB,
+    0x5786, 0x6A03, 0x1B98, 0xEB91, 0xD202, 0xCD04, 0xC048, 0x4720
+};
+
+static const u16 ap1302_fw_bootdata5[ ] = {
+    0x8000,
+    0x6917, 0xE748, 0x0DDE, 0x81C3, 0xE804, 0x3160, 0x2035, 0x4C00,
+    0x5455, 0x0408, 0x1F04, 0xAC9C, 0x5260, 0xA934, 0x0880, 0x204E,
+    0x02A0, 0x07A2, 0x03C7, 0xAE82, 0x06F5, 0xEFF8, 0x91DE, 0x6900,
+    0x2BAE, 0xA0ED, 0x01BA, 0xF814, 0xBCD1, 0xFC52, 0xC12B, 0x8851,
+    0x03C5, 0x9068, 0x8043, 0xD04C, 0x6896, 0x0489, 0x81E8, 0x6714,
+    0x0A5E, 0xC604, 0x1004, 0xDEF3, 0xF260, 0x8C40, 0x7072, 0x090E,
+    0xBD5E, 0x3C60, 0x7F9F, 0x9352, 0xF347, 0x5A86, 0xC981, 0x3A83,
+    0x000C, 0xCE4D, 0x9724, 0xD172, 0x42C3, 0x1374, 0xD026, 0x10F6,
+    0xA761, 0x0F01, 0x2146, 0x0000, 0x40CD, 0xC504, 0x0482, 0xC117,
+    0x316C, 0x1223, 0x91C1, 0x9F74, 0x2911, 0xA03D, 0x901E, 0x31BB,
+    0x1340, 0x9406, 0x7D0B, 0x3040, 0x0F8D, 0x3910, 0x0247, 0xEB88,
+    0x9035, 0x8902, 0x7940, 0x72F2, 0xF649, 0x54D0, 0x0B67, 0x2802,
+    0x6891, 0x848E, 0xB638, 0x4801, 0x13CB, 0x13E3, 0xDE8E, 0x6441,
+    0x1A64, 0x49C4, 0x421A, 0xE44F, 0x3E2F, 0x1048, 0x22EE, 0x9362,
+    0x040D, 0x8EA2, 0x599B, 0x4A87, 0xA2A8, 0x4486, 0x2602, 0x0F1F,
+    0xCCA4, 0x3C01, 0xD7D7, 0x0132, 0x1030, 0x0A01, 0xB824, 0x23CC,
+    0xC9E3, 0x2008, 0xF11F, 0xD0C9, 0x6813, 0x6410, 0x1E4B, 0xA2AC,
+    0x202B, 0xC201, 0xE0B8, 0xE6DD, 0x04C0, 0x1C3C, 0x9703, 0xC85C,
+    0x6B8E, 0x1829, 0x4017, 0xEE65, 0x0963, 0xD1AC, 0x43CD, 0xBE08,
+    0xE222, 0x022E, 0xCDEF, 0x202C, 0x17F0, 0x58F8, 0x843E, 0x2D0D,
+    0x4841, 0x20CB, 0xE3C8, 0x0C34, 0x0703, 0x6FD7, 0xCE02, 0x5181,
+    0x1CB2, 0xC846, 0x3E47, 0xD020, 0x91A0, 0x3714, 0x209D, 0x6381,
+    0xA036, 0xFA5C, 0x9C7D, 0x6256, 0x5DDC, 0xBC3D, 0x82B6, 0x2067,
+    0x4CF6, 0x8830, 0x3C02, 0x7914, 0x0372, 0x80EA, 0x49D0, 0xF742,
+    0xC094, 0x5CC6, 0xACC0, 0xA981, 0x01E0, 0xB32E, 0x0CEE, 0x45B2,
+    0x6029, 0xB431, 0xF8A0, 0x4443, 0x2288, 0x1305, 0xC5B2, 0x5F4A,
+    0xF442, 0x1749, 0xB389, 0x025C, 0x9887, 0x0A03, 0x41FA, 0x5F98,
+    0x85C1, 0x89D3, 0x5924, 0x4F20, 0x7380, 0x3E0D, 0xF21B, 0xA380,
+    0x4F26, 0x8404, 0x0C0E, 0xDF20, 0x21EB, 0x6FD1, 0x1080, 0x8E1C,
+    0x82F3, 0x9884, 0x09B9, 0x76E0, 0x9E9E, 0xA0B1, 0x1008, 0xC182,
+    0x000C, 0x0E2E, 0x84DE, 0xDF47, 0x10B0, 0x7222, 0x3524, 0xA220,
+    0xF8ED, 0x4087, 0x113B, 0xC264, 0xA438, 0x8843, 0xF1A0, 0x5F02,
+    0x03D0, 0xA03D, 0x18A5, 0x1892, 0x3C86, 0x06B0, 0x8851, 0x855E,
+    0x6D2F, 0x2A10, 0x80F2, 0x5164, 0x4410, 0xFE17, 0x13DD, 0x9B00,
+    0x30C1, 0xD843, 0x230E, 0x3ABE, 0x590B, 0x3B97, 0x4C8F, 0x01DA,
+    0xE2C4, 0x01C3, 0xD327, 0xC10C, 0xC4C2, 0xEFA9, 0xC2EB, 0x45A2,
+    0x156E, 0x1011, 0x0890, 0x47AD, 0x1788, 0x380E, 0x11F1, 0x0231,
+    0x071E, 0xE7B6, 0x1F14, 0xC3CB, 0x01C6, 0x8BB8, 0x414D, 0x3720,
+    0x82C0, 0xE321, 0xBE29, 0x81F5, 0x8964, 0xB025, 0x779F, 0xE14A,
+    0x0437, 0xD994, 0x8437, 0xC7E4, 0x20C0, 0x388F, 0x605E, 0x107B,
+    0x2C2E, 0xCCD8, 0x2EC5, 0x2047, 0xBB0B, 0x8BCE, 0x0044, 0x258F,
+    0x9220, 0x0A3C, 0xE00C, 0x8799, 0xA713, 0xE086, 0xB5D7, 0xD485,
+    0xE68F, 0x64BA, 0xFAF0, 0xBA89, 0xC8BA, 0xC930, 0x81CD, 0x2992,
+    0x3DE8, 0x6065, 0xC23C, 0x118C, 0x837B, 0x9804, 0x37F0, 0xE1A0,
+    0xF0E3, 0x0161, 0x8A48, 0x21B9, 0x6DE6, 0x6B42, 0x1FCF, 0xB1FF,
+    0xB28D, 0x8608, 0x819E, 0xEE2C, 0x4406, 0xE866, 0xC103, 0x46A0,
+    0x6F60, 0x2C20, 0xA81B, 0x4218, 0x0682, 0xF330, 0x7045, 0xA883,
+    0xC20A, 0x0C76, 0x60C8, 0xF849, 0x207C, 0xDB54, 0x45B0, 0x605B,
+    0x7982, 0x40C0, 0x70C4, 0x32E5, 0x4D09, 0x81C6, 0x5065, 0xD3A2,
+    0xC819, 0x06E8, 0xDE48, 0x035E, 0x865F, 0x2F31, 0xD017, 0x98B3,
+    0x4410, 0xEC0E, 0x22E5, 0xC005, 0xCCB8, 0x0898, 0x42CD, 0x046B,
+    0x79AB, 0xEC73, 0x2144, 0x7043, 0x2AD0, 0x48E4, 0x3D82, 0x3A83,
+    0x0C73, 0x2E62, 0xBF24, 0x89B1, 0x8096, 0x3847, 0xB033, 0xCCE8,
+    0x4878, 0xD6CC, 0x59F5, 0xF6F0, 0xF9A2, 0xA8BC, 0x6C86, 0x260F,
+    0x7262, 0x091E, 0x529C, 0x8528, 0x0E3D, 0x0CBD, 0xC88C, 0x452F,
+    0x99D0, 0xC7A5, 0x4F46, 0xB1E3, 0x9C01, 0x0CC0, 0x04E8, 0x186B,
+    0x959E, 0x0AAB, 0x12D8, 0x1B08, 0x396D, 0x3117, 0x0281, 0x7032,
+    0xF32A, 0xE103, 0xCD52, 0xA0A5, 0x0F09, 0xFF47, 0xA58F, 0x9C62,
+    0x4E93, 0x0B35, 0xEE16, 0xBB02, 0x7C0B, 0x25BC, 0xE324, 0x808D,
+    0x1288, 0x244F, 0x8192, 0x2443, 0x6520, 0x409F, 0x0359, 0x044B,
+    0xF2D5, 0xA8F5, 0x8480, 0x847E, 0x7702, 0x18E1, 0x003C, 0xB038,
+    0x21EB, 0x0309, 0x7066, 0x7AFF, 0xB88B, 0x8F34, 0x9C10, 0x0A68,
+    0x50C0, 0x0FAD, 0x561E, 0x85B7, 0x1F5B, 0xC608, 0x1B50, 0xC3E4,
+    0x3021, 0x22FD, 0xAA48, 0x5CD2, 0xD840, 0xEED9, 0x8922, 0x1BAE,
+    0x39C7, 0x9C7E, 0x1693, 0x0049, 0x93D8, 0x0103, 0xECE9, 0x0507,
+    0x255C, 0x23B4, 0x8F05, 0x80D9, 0x1015, 0xDE38, 0x6928, 0x30C2,
+    0x530C, 0x73B2, 0x7103, 0xD127, 0xBD08, 0x8A24, 0xF780, 0xEF06,
+    0x603F, 0x3D8A, 0x895D, 0x6A40, 0x1D49, 0x8F05, 0x1C89, 0x320B,
+    0xD6E4, 0x1320, 0xC16C, 0x00D3, 0x2008, 0x737B, 0x84D0, 0x1D08,
+    0x8082, 0x692B, 0x1341, 0xA439, 0xF639, 0xDA56, 0xF002, 0x698E,
+    0xA19C, 0x2F1D, 0xEB15, 0x6D81, 0x7260, 0xB1E4, 0x40D1, 0x2E40,
+    0x52EA, 0xA600, 0x2534, 0x46B3, 0x4C6B, 0xF329, 0x4194, 0x05C0,
+    0x083E, 0x84E5, 0xEA1E, 0xE6EF, 0x2C84, 0x3119, 0xFAED, 0x8089,
+    0x3188, 0xBD02, 0xBCE3, 0xC888, 0x87EC, 0x4C41, 0x297A, 0x5498,
+    0x445F, 0x38EC, 0x206C, 0x0DFE, 0x5AE3, 0x2014, 0x610C, 0xB3EB,
+    0x1036, 0x8324, 0x3A1A, 0x407A, 0x6FB8, 0xFA58, 0xAC49, 0xE360,
+    0x69D0, 0x4608, 0x0DC9, 0x4DC7, 0x0E70, 0x183D, 0x165A, 0x3D71,
+    0xB625, 0xC085, 0xE7E1, 0xD103, 0xD814, 0xC760, 0x480B, 0x1B82,
+    0x1639, 0x0B44, 0x8226, 0x88A2, 0x680A, 0x3D9F, 0xB222, 0x11ED,
+    0x6220, 0x2BA9, 0xD212, 0xF334, 0xC032, 0x7BB5, 0xECC7, 0xB95C,
+    0xC4D7, 0x1339, 0x59E9, 0x10E1, 0x0014, 0x5F55, 0x9973, 0x0DE1,
+    0x240D, 0x6120, 0x8602, 0xC0D1, 0x7832, 0x283C, 0xC106, 0x4430,
+    0x32C0, 0xAD0A, 0x5E1D, 0xE01D, 0x1AD0, 0xF72C, 0x5081, 0x9E36,
+    0x6B29, 0x3891, 0xCA44, 0xA90C, 0x0601, 0xA194, 0x844A, 0xAE6D,
+    0xE620, 0xD01A, 0x1542, 0x9804, 0x5A81, 0xA09E, 0x9EFC, 0xE482,
+    0x3329, 0x1208, 0x0340, 0xD029, 0x5EA6, 0x2616, 0x01B0, 0x3402,
+    0x4A6A, 0x03E3, 0xB982, 0x040E, 0xB0D8, 0x13BE, 0x6F30, 0x484E,
+    0x40DB, 0x61D7, 0x9CC2, 0x5A8D, 0xE050, 0xC567, 0xC202, 0xC224,
+    0x6400, 0x341B, 0x84E8, 0x1C05, 0x0A51, 0x0609, 0x5A11, 0x1204,
+    0x7E34, 0xCB50, 0xC07E, 0x9D40, 0xD1F4, 0x3BE1, 0xF868, 0x486A,
+    0x2913, 0x7817, 0x01FA, 0x2F74, 0x7C47, 0x053C, 0xAEA2, 0x491F,
+    0x2FAD, 0x0F2A, 0xAF1E, 0x5F88, 0x2201, 0x4329, 0x03B4, 0x32D7,
+    0x381F, 0x9A1B, 0x12CA, 0x042C, 0x66C3, 0xE6AB, 0xE312, 0xF22D,
+    0x0410, 0x3E11, 0xCE2E, 0x2EA6, 0x1A2F, 0x38E5, 0x2DD9, 0x83C4,
+    0x1BE4, 0x6808, 0x220E, 0x23B8, 0x37D3, 0x02A2, 0x037F, 0x3386,
+    0x202C, 0x669A, 0x00D3, 0x3CCD, 0x23CC, 0x9B00, 0x09A0, 0x809A,
+    0xD317, 0x89A0, 0x7913, 0x0551, 0x3076, 0x0CA1, 0xEE3B, 0x6024,
+    0x08DA, 0x151D, 0xAE1E, 0x2721, 0x7A21, 0x1425, 0x0136, 0x508C,
+    0xC5F1, 0x3055, 0x8CA6, 0xEC59, 0x4522, 0x5093, 0x4513, 0x1EE2,
+    0xF311, 0x94FD, 0x8A56, 0x240C, 0x3268, 0xA326, 0x0ED8, 0xB658,
+    0x60C4, 0x40A4, 0x260E, 0xE745, 0x220C, 0x5268, 0xA541, 0xDEE8,
+    0xA541, 0x8C4D, 0x14C4, 0xC1E0, 0xE8A6, 0x40CE, 0x811D, 0x0088,
+    0xC43D, 0x75C2, 0xF8B1, 0xC981, 0x27AF, 0x588C, 0xA101, 0xC030,
+    0x46A1, 0x88D0, 0x31FD, 0x2FA8, 0x59E4, 0xA863, 0xE713, 0xFBCD,
+    0x3A05, 0xD01E, 0xA440, 0xF740, 0x20EC, 0x65C9, 0xF518, 0x1984,
+    0x4230, 0x0621, 0x171E, 0x60EB, 0x1F33, 0xC30F, 0x99E8, 0xC7CC,
+    0xF2A6, 0x3E25, 0xE631, 0x0260, 0xBB5A, 0xF28C, 0xD221, 0x5065,
+    0xB085, 0xA856, 0x0E26, 0xD0E4, 0x5D0E, 0x64D7, 0x6D8B, 0x9045,
+    0xEA52, 0xF210, 0x11D2, 0x5598, 0x888F, 0xB659, 0xC981, 0x2031,
+    0x43C2, 0xE522, 0x536A, 0x00C8, 0x0CB0, 0x909B, 0x40C7, 0x9727,
+    0x50CC, 0xAA10, 0x3BA7, 0x968B, 0x4F18, 0x3E52, 0xD01D, 0x5821,
+    0x74D6, 0xF088, 0x3A7A, 0x91EC, 0x5411, 0xD582, 0x172C, 0x4A2D,
+    0x5939, 0x7302, 0x62EC, 0x5951, 0xEA4E, 0x31C5, 0xEE1A, 0x4241,
+    0xDA13, 0x8662, 0x1F60, 0xCD11, 0x9439, 0x155E, 0x4963, 0x2F75,
+    0xD29B, 0x0D74, 0x3998, 0xE131, 0x0F22, 0x4117, 0x9440, 0x87CA,
+    0x20C5, 0xD9DB, 0xA399, 0x4C5E, 0x50FC, 0x2F28, 0x8008, 0x2238,
+    0x835A, 0x2A81, 0x1047, 0x9033, 0x30B4, 0xAFF8, 0x0EC9, 0x4013,
+    0x781A, 0x383A, 0xC040, 0x7A5C, 0x108A, 0xDD7F, 0xB088, 0x204F,
+    0x9ADC, 0x4B22, 0xF847, 0x714B, 0x2491, 0x0087, 0x4BF6, 0x5E51,
+    0x9B44, 0x7B09, 0x7A03, 0x8441, 0x7010, 0x62C8, 0xC610, 0x5404,
+    0xA240, 0x2606, 0x3D47, 0x8C2C, 0x0A50, 0x63E5, 0x19E4, 0x0650,
+    0x281D, 0x08CE, 0x2440, 0xF06D, 0x149C, 0x0486, 0x8880, 0x4C4E,
+    0x8312, 0x1013, 0x143C, 0xA348, 0xF2FA, 0x74E9, 0x22C8, 0x1472,
+    0x80FD, 0x73DE, 0x264F, 0x9453, 0x9101, 0x1500, 0xBBC1, 0x1234,
+    0x056F, 0x0D92, 0x08AD, 0x9DDC, 0x5DDF, 0xF087, 0x9A15, 0x9E5D,
+    0xBC70, 0xC496, 0xFA78, 0x50CB, 0x9F35, 0xDDCE, 0x36F1, 0xC6CE,
+    0x04C0, 0x3981, 0x702A, 0x203C, 0xD2A2, 0x2662, 0x793D, 0xA3E6,
+    0x7D21, 0xAF30, 0x3484, 0x0C65, 0xE069, 0x786F, 0xDC7C, 0xA640,
+    0x3E85, 0x6353, 0xA9FE, 0xC7C1, 0xE1C5, 0x4810, 0x1A45, 0x4ECA,
+    0x2B10, 0x5481, 0xC6F2, 0x0430, 0x094F, 0x8727, 0x3840, 0x62EC,
+    0x07F2, 0x9F89, 0x1A41, 0xA134, 0x301A, 0x2131, 0x35DF, 0x3E23,
+    0xB152, 0x8E36, 0xB800, 0x8D00, 0xC498, 0xEEA0, 0x63AA, 0xB034,
+    0x82F2, 0xC463, 0x8E08, 0xD101, 0x6304, 0x6460, 0x06ED, 0x1042,
+    0x712C, 0x4673, 0xFC25, 0xF560, 0x4198, 0x1E24, 0xDC9E, 0xB595,
+    0x1A60, 0x2140, 0x4026, 0xFA48, 0x08C2, 0x9F31, 0x080E, 0x6970,
+    0x8430, 0xE3DC, 0xC825, 0xE6AD, 0x82A1, 0xE069, 0x845E, 0x843C,
+    0x1EA1, 0x7C3C, 0xB581, 0x137B, 0x2C5C, 0xB844, 0x0483, 0xFEAF,
+    0x4C30, 0xBE58, 0x97B0, 0x8E4B, 0xCCD7, 0xA212, 0x1A20, 0xD132,
+    0x104B, 0xC8F0, 0x0CB0, 0x070E, 0x93F8, 0x8AC6, 0x7560, 0x43E6,
+    0x78C1, 0xC6E4, 0x8040, 0x900A, 0x3627, 0x2AD0, 0xBAA0, 0x98C8,
+    0x8670, 0x0208, 0xC1B7, 0x1656, 0x5611, 0x768C, 0x64B1, 0xC037,
+    0x0581, 0x1301, 0x7081, 0xE512, 0x3E67, 0x863F, 0x32C3, 0x21E6,
+    0x7923, 0xF32C, 0x429D, 0x8ACA, 0x581E, 0x42F0, 0x3136, 0x8A3F,
+    0x3A6E, 0x9301, 0x0D0D, 0x4228, 0x02FF, 0x3373, 0x9740, 0xE337,
+    0x7480, 0x7AE6, 0x2480, 0xDF32, 0xA020, 0x6B19, 0xD9B8, 0x6228,
+    0x9EC0, 0x21A0, 0x6696, 0xC0B5, 0xD6C0, 0x1174, 0x2149, 0x901D,
+    0x45F6, 0x4221, 0xB5DA, 0x5184, 0x0F13, 0xA81B, 0x5D3D, 0x8285,
+    0xE6C3, 0xD77E, 0x43D2, 0xE787, 0xCBA9, 0xC49F, 0xC746, 0x1B00,
+    0x0A1E, 0x658C, 0x1304, 0xBA07, 0xBCFE, 0x1846, 0xA97D, 0xDA8B,
+    0x4241, 0x90A1, 0x31D6, 0x0282, 0xA148, 0x2041, 0x9D64, 0x1172,
+    0x50C6, 0x9172, 0x680F, 0x222F, 0x99B8, 0x8ECF, 0xF030, 0x8040,
+    0xF1AE, 0x5B12, 0xE0A9, 0xA25B, 0x6955, 0x4472, 0x0CBD, 0x1696,
+    0x3E65, 0xAE10, 0x409E, 0x04FC, 0xC63E, 0x5D14, 0xAA5E, 0x0DF5,
+    0x1F2F, 0xF18E, 0x26E8, 0x068E, 0x0F31, 0x8D18, 0x744B, 0x829D,
+    0x04A2, 0x3424, 0x3983, 0xB88F, 0x007F, 0x9ED2, 0x8897, 0x04E2,
+    0x0422, 0x51F2, 0xFCB0, 0x98BE, 0x20DF, 0x9F71, 0xE98E, 0xC03A,
+    0x3E65, 0xC730, 0x1889, 0x0C84, 0x0E6C, 0x4499, 0x5885, 0x2F46,
+    0xC724, 0x7B00, 0xFE65, 0xBB4C, 0x1B03, 0xC260, 0x8840, 0x277C,
+    0x7DAE, 0x4678, 0x43A8, 0x6A1F, 0x50C1, 0x15DF, 0x03E8, 0x06F1,
+    0xE9CE, 0xD2EC, 0x0051, 0xDB92, 0x4B13, 0xA80C, 0x05E9, 0x925C,
+    0x1945, 0xC79F, 0x1446, 0x567E, 0xDF6C, 0x3018, 0x4D0C, 0x860E,
+    0xC182, 0x60C1, 0x2A01, 0xB383, 0x5F9C, 0x3D82, 0xEC81, 0xE0A0,
+    0x7E0F, 0x418C, 0x4227, 0xC0F2, 0x18FA, 0x9638, 0xA1D1, 0x3D3B,
+    0x04F8, 0xA24C, 0x41EC, 0x1416, 0x3AB5, 0xA883, 0x2512, 0x0700,
+    0xF179, 0x94C5, 0x1EAC, 0xF316, 0x0A4F, 0x3296, 0xA236, 0x2892,
+    0x4703, 0x01A5, 0x55C7, 0x0348, 0xF073, 0xD799, 0x1242, 0x1799,
+    0xD384, 0x47F3, 0x48F1, 0x0F7E, 0x360A, 0x11EF, 0xCCE5, 0xA268,
+    0x0C79, 0x8AC2, 0x3C9B, 0xA319, 0x7663, 0x1760, 0x460D, 0x30F3,
+    0x3AC8, 0x98DD, 0x71AE, 0x45EF, 0x7968, 0x8DFD, 0x6052, 0xF671,
+    0x1884, 0x1D9F, 0x3E21, 0x01BF, 0xDCF1, 0x2468, 0xF6B6, 0xF89E,
+    0x02C7, 0x40FA, 0x9121, 0xD85E, 0x8776, 0xA01A, 0x62AD, 0xDAA4,
+    0x5C84, 0xF767, 0x1126, 0x6117, 0x0140, 0x5C01, 0x0202, 0xB126,
+    0x61F3, 0x0A81, 0x2061, 0x458B, 0xC580, 0x270B, 0xC253, 0x0467,
+    0x37C7, 0xF0E8, 0x9B09, 0x7992, 0xE882, 0x4308, 0xB3D7, 0x85E2,
+    0x0878, 0x606C, 0x8260, 0x2230, 0x0D61, 0x23D8, 0xC344, 0x4F77,
+    0x8948, 0xD498, 0x59F8, 0x0721, 0xABB3, 0x264B, 0xCCA6, 0x0862,
+    0x3016, 0xB9E6, 0x3880, 0x6340, 0x7413, 0x3011, 0x9805, 0xDF57,
+    0x2A91, 0x1F77, 0x940F, 0xE329, 0x4A73, 0x1AE1, 0xE11E, 0x7067,
+    0xE296, 0xBA34, 0x4CE1, 0xEC05, 0x2946, 0x7058, 0x2304, 0x0830,
+    0x5821, 0x0408, 0x02EC, 0x08F3, 0xB168, 0xF981, 0x10FC, 0xBA18,
+    0x3E65, 0x1A12, 0x973A, 0x287B, 0xD61C, 0x7179, 0x413E, 0x52F2,
+    0xA951, 0x3402, 0xD240, 0x7224, 0x0D32, 0xECCB, 0xF303, 0xA112,
+    0x00A7, 0x9A8D, 0x058B, 0x030C, 0xCE16, 0xC300, 0xA4D7, 0x0ABC,
+    0xCA2E, 0x4C50, 0xC033, 0xBCCA, 0x2A64, 0x5A81, 0x14C0, 0xC32E,
+    0xD1D3, 0x3782, 0x6997, 0xCC17, 0xC898, 0xA52F, 0x993A, 0x47CC,
+    0x9CED, 0x1A60, 0xE14A, 0x08F5, 0xC928, 0x9D68, 0x0200, 0x88E8,
+    0x008A, 0xA12F, 0x9939, 0x9104, 0xC220, 0x0453, 0x26FB, 0xB378,
+    0x4F63, 0x12E9, 0x5025, 0x0D23, 0xD028, 0xF6BE, 0x3081, 0x0780,
+    0xB3E0, 0xA5A3, 0x3091, 0xC354, 0x1D9B, 0x3086, 0x41C1, 0x6BD1,
+    0x898D, 0x37A2, 0x3CC9, 0xE120, 0x5084, 0xF329, 0x529E, 0x5CAE,
+    0x2CE0, 0xC2EC, 0x9162, 0xD139, 0x161C, 0xA0EC, 0x18A2, 0x0306,
+    0xA0CB, 0xA737, 0xC7DA, 0xF0A8, 0x7339, 0x71C2, 0xC231, 0x061D,
+    0x6A73, 0x8B60, 0x4F48, 0x7830, 0x8B80, 0x300C, 0x10A3, 0x0BA5,
+    0x4644, 0x4EF6, 0xA0E9, 0x6D39, 0xC62F, 0xE960, 0x08E0, 0x1F80,
+    0xC0AA, 0x340D, 0x91FF, 0xA28C, 0x040A, 0x0301, 0xE999, 0x0DAF,
+    0x6041, 0x6852, 0xDA21, 0x442A, 0xBDE0, 0x6147, 0xA56D, 0x487E,
+    0x33CB, 0xE020, 0x7931, 0x7CB9, 0x2456, 0x961F, 0x3295, 0x094A,
+    0x2A9A, 0x2671, 0x3201, 0x9322, 0x129F, 0x827A, 0x0582, 0xE8CD,
+    0xAB61, 0x619A, 0xB213, 0x23CC, 0xA4A2, 0x2A12, 0x0622, 0x42A9,
+    0x4660, 0x1208, 0x340C, 0x5EB9, 0x2511, 0x8355, 0xE827, 0x4905,
+    0xEDC4, 0x7203, 0xFB50, 0xA848, 0x326E, 0xE1D0, 0x304B, 0x810C,
+    0x7E15, 0x4A6F, 0x3290, 0x09A6, 0x5FC9, 0x03CC, 0xA3C5, 0x2122,
+    0x210E, 0xEDE0, 0x2358, 0xBCED, 0x6A41, 0x07C0, 0x317B, 0xCCA3,
+    0xC44B, 0x265F, 0x0347, 0x0340, 0x2730, 0x9441, 0xADA6, 0xA87C,
+    0xCA3E, 0x7E65, 0x1E4B, 0xCCA3, 0x6ADC, 0x0293, 0x812C, 0xA84B,
+    0x3029, 0x418F, 0x0720, 0x8B00, 0x6834, 0x1173, 0xCC71, 0x23BC,
+    0xCA38, 0x894A, 0x0C92, 0xC901, 0xA034, 0x5144, 0x812D, 0xE651,
+    0xD44A, 0x5401, 0x44F8, 0xEE34, 0x48E6, 0x0B84, 0x8286, 0x004F,
+    0x8E85, 0x4496, 0x7029, 0x50E8, 0x5921, 0x1280, 0xC34A, 0x643F,
+    0x328D, 0xA2C3, 0x0C38, 0x14A8, 0x12C0, 0x761D, 0x688D, 0x3F32,
+    0x8E19, 0x724C, 0x1724, 0xCC78, 0xF994, 0x79E4, 0x0A56, 0x452B,
+    0x1354, 0x32F4, 0x6A62, 0x8530, 0x64A5, 0x6E52, 0xD8AD, 0x8444,
+    0x2858, 0x020C, 0x2F30, 0x4CCE, 0xD6A8, 0x5CE9, 0xC081, 0x1F31,
+    0xE908, 0xEE4C, 0x0645, 0xC888, 0x5CFA, 0x9AC8, 0x6E52, 0x0368,
+    0x692E, 0x810F, 0x676A, 0x8F3A, 0xE313, 0x4472, 0xF320, 0x2883,
+    0x0488, 0x41EC, 0xA121, 0xC796, 0x7E3C, 0x9596, 0x0823, 0x06F4,
+    0xE0C7, 0x981C, 0xACD8, 0x4032, 0x6CB6, 0x26CD, 0x4C1F, 0x804D,
+    0x96E4, 0xD8F1, 0xE025, 0x2118, 0xBC38, 0x2E5E, 0x4A0F, 0x21E4,
+    0xC0D9, 0x494B, 0xCC3A, 0xE85F, 0x7C3C, 0xBB10, 0xC012, 0x3432,
+    0x5202, 0x41AB, 0x8D03, 0xC430, 0x8583, 0x2133, 0x06DE, 0x856F,
+    0x303C, 0x81E3, 0xA09C, 0xE719, 0x2206, 0x92A0, 0x1F96, 0x8A84,
+    0x0EF4, 0x6618, 0x8064, 0xE80B, 0xAD7D, 0x1840, 0x0149, 0xD43C,
+    0xEB74, 0x23F0, 0x4484, 0x296B, 0x618A, 0x10AE, 0x9202, 0xD7D3,
+    0xC842, 0x3C03, 0xB230, 0x3C02, 0x13A4, 0x9D3A, 0x01DF, 0x1229,
+    0x0CB4, 0x8434, 0x81D6, 0x40E0, 0xF21E, 0x0F18, 0x30E0, 0x4696,
+    0x112C, 0x0113, 0xA12A, 0x1EAA, 0x5419, 0x6983, 0x6A13, 0x80B0,
+    0x0181, 0x4156, 0x87C8, 0x4F50, 0xCB2E, 0x387D, 0xB54E, 0x7DAF,
+    0x6E37, 0x3B21, 0xEB1F, 0x01B9, 0xD47D, 0x63E6, 0x5695, 0x808F,
+    0x96CD, 0x15D1, 0xC206, 0x64E4, 0x49A2, 0x1992, 0x2049, 0xD002,
+    0x1225, 0x5CB4, 0x0912, 0x9357, 0x4488, 0xEEA5, 0x8E68, 0x090F,
+    0x1F9C, 0x8803, 0xE685, 0x3108, 0x0D20, 0x9F96, 0x8B28, 0x4973,
+    0xD111, 0xD013, 0x1799, 0xE548, 0x8B18, 0x12ED, 0x1C69, 0x180D,
+    0x835B, 0xBA97, 0xC810, 0x21BC, 0x95FC, 0x5D3D, 0x4C5D, 0xE170,
+    0x30C1, 0xE98C, 0xB32A, 0x7D48, 0x0220, 0x0FB8, 0xB40B, 0xB63B,
+    0xC6E4, 0xD03F, 0x7B8C, 0x4887, 0xF014, 0xDA07, 0x794D, 0x489C,
+    0xA3C8, 0x7B62, 0x50F3, 0x8761, 0xD548, 0xD0B0, 0xA345, 0xD8CE,
+    0x09F9, 0x9AB8, 0x7CCD, 0x445E, 0x669D, 0x2F32, 0x8F37, 0xE632,
+    0xA53A, 0xA908, 0x8FAC, 0xFF64, 0x4224, 0x79E7, 0x1182, 0x97E1,
+    0x090C, 0x1972, 0x8D41, 0xF5E7, 0x4917, 0x6469, 0x0B81, 0x040D,
+    0xB368, 0x2720, 0x0ECE, 0x5DF6, 0x202E, 0xDD78, 0x2675, 0xD101,
+    0xDCD0, 0x822F, 0x1041, 0x37A9, 0x2844, 0x251E, 0x4640, 0x38E3,
+    0x2404, 0x101C, 0xBD0C, 0xBD9A, 0xF05E, 0x1EFA, 0x173F, 0x4B9B,
+    0x11AE, 0x6791, 0xE069, 0xAC66, 0xF918, 0x088D, 0x5334, 0x95EB,
+    0x1244, 0x470D, 0x5030, 0xE453, 0x0927, 0x7078, 0xF866, 0x8840,
+    0x4316, 0x1049, 0x3EF8, 0xA31B, 0x9540, 0xE4D9, 0x53C4, 0x11F7,
+    0x60D9, 0x5AF4, 0x0F20, 0x9E58, 0x1E46, 0xF012, 0x4826, 0x0541,
+    0x1007, 0xDD0A, 0x7391, 0xFA21, 0x7922, 0x8F79, 0xCA08, 0x4407,
+    0xE16E, 0x0080, 0x7122, 0x0291, 0x04A2, 0xF144, 0x089E, 0x41E4,
+    0x8C47, 0x5000, 0xD223, 0xC2D2, 0x1BC2, 0x3762, 0x11F6, 0x5EB8,
+    0xB1DC, 0x9FC4, 0x208F, 0x0216, 0x36F1, 0xF370, 0xB08F, 0x0510,
+    0xFA81, 0xE015, 0x6C63, 0x825D, 0x4109, 0xEE76, 0x837C, 0xD734,
+    0x440D, 0x92C8, 0xAD52, 0x00D6, 0xBA44, 0xFC52, 0x2C2C, 0x4419,
+    0x849E, 0xC290, 0x2026, 0xA229, 0x0004, 0xFF40, 0x49D0, 0xB58E,
+    0x4708, 0xF88A, 0x8464, 0x2814, 0x49F9, 0x16A5, 0x01F4, 0xBC29,
+    0x8ADC, 0x5522, 0x0010, 0xC06F, 0x56C0, 0x2019, 0x297A, 0x41D0,
+    0x7C62, 0xD23E, 0x49CE, 0x1F14, 0xA88F, 0x6F45, 0x164D, 0x9081,
+    0xB8B2, 0x0492, 0x1C08, 0xB3FC, 0xBA34, 0x4902, 0x0457, 0x0AB5,
+    0x9845, 0xDD7E, 0x4206, 0x1140, 0xD677, 0xD177, 0x0C99, 0x143E,
+    0x4998, 0x4488, 0x2001, 0x7D66, 0x8A1E, 0x25CC, 0x10F0, 0x8003,
+    0x8041, 0x9642, 0x5A7B, 0xE33E, 0xAAA1, 0x7E8D, 0x291E, 0xB8C9,
+    0x23FC, 0xA634, 0x8781, 0xD808, 0x04BC, 0xD564, 0x2740, 0x4F06,
+    0x3EBB, 0x6712, 0xC042, 0xEF20, 0x9108, 0xED8A, 0x80E0, 0x8172,
+    0x1655, 0x5090, 0x6708, 0x059C, 0xD03A, 0x75A9, 0x8612, 0x070A,
+    0x0810, 0x5E80, 0x5910, 0xAFBE, 0xE5C7, 0xC53E, 0xE267, 0x90FE,
+    0x0449, 0x11DC, 0x271F, 0xCA2E, 0x8820, 0x13C4, 0x8010, 0x80E2,
+    0x2832, 0xEF4E, 0xB1DA, 0x0A84, 0x6620, 0x01A3, 0xA00C, 0xF6EF,
+    0xB09B, 0x0510, 0x23E0, 0x0A72, 0x20B5, 0xE1C3, 0xEC3A, 0x2121,
+    0x7356, 0x8746, 0x9B21, 0x1901, 0xCD46, 0x8B96, 0xB409, 0x01ED,
+    0x9544, 0x032E, 0x8DAC, 0x5062, 0x0C90, 0xF226, 0x5080, 0x7E03,
+    0xA644, 0x4B43, 0xC0CF, 0xE23E, 0x9807, 0xA049, 0xE236, 0x5106,
+    0x0D21, 0x3BB2, 0x9652, 0x20BB, 0x351C, 0x85AA, 0xA323, 0x444D,
+    0x1F41, 0x3047, 0xC97A, 0xC3DC, 0x22C9, 0x79C0, 0x8443, 0xE3D0,
+    0x0EF4, 0x3DB8, 0xE398, 0x1258, 0x3902, 0xC369, 0x117B, 0x8B04,
+    0xB2FC, 0x8703, 0x8002, 0x6028, 0xDA19, 0x7A76, 0x5110, 0x30F6,
+    0x618E, 0xF9F6, 0x10F4, 0x8005, 0xCD50, 0xF6A5, 0xD10E, 0x12A6,
+    0x6003, 0x338E, 0xC480, 0x203C, 0x9DEC, 0xB361, 0x3583, 0x1ED6,
+    0x9C10, 0xB40A, 0x3CA2, 0x8867, 0x07C9, 0xD06C, 0x860B, 0x8B80,
+    0x13A1, 0x594A, 0x2080, 0x5064, 0x3262, 0x9D04, 0xCC65, 0x7064,
+    0xC1AC, 0x1411, 0xC06E, 0x1C60, 0xD584, 0x8964, 0x3A8D, 0x2088,
+    0x99D4, 0xC3A2, 0x5181, 0xA790, 0x35B6, 0xC110, 0x509E, 0x1E70,
+    0x3482, 0x1248, 0x03EF, 0xF283, 0x2448, 0xE0B7, 0xC791, 0x0249,
+    0x6CD1, 0xE529, 0x0020, 0xED60, 0x5088, 0x103C, 0x00E8, 0x1161,
+    0x3441, 0x9204, 0x3A3A, 0x50F1, 0xA3F0, 0xE0AD, 0x2280, 0x6527,
+    0x4A5E, 0x0945, 0x2197, 0xBB71, 0x1007, 0xAB71, 0x52FB, 0x460C,
+    0x4680, 0x1A6A, 0x81E8, 0x78FF, 0xB07C, 0xC128, 0x3811, 0x8008,
+    0xCE1D, 0x1047, 0xD1F1, 0xE228, 0x753A, 0x6892, 0x0801, 0x0400,
+    0x35E9, 0x7EA4, 0xFB14, 0xEC4F, 0x006B, 0x0E30, 0xEC19, 0x0207,
+    0x1A08, 0xE8FA, 0x8BD7, 0x6009, 0x03D8, 0x718B, 0x3508, 0x8284,
+    0x6DA4, 0x00B7, 0x91DD, 0xC863, 0xBED0, 0xCCD4, 0x3C9D, 0x447D,
+    0xF086, 0x2109, 0xBF95, 0x7C24, 0x286E, 0x0F09, 0x8080, 0x04A6,
+    0x4287, 0xDA93, 0xF3D3, 0x0708, 0x1409, 0x035E, 0xEC94, 0x3CF2,
+    0xD581, 0xB2E0, 0xB3D5, 0x619E, 0x08B0, 0x3FCE, 0xFD83, 0x307C,
+    0x532A, 0x3CC5, 0xCC42, 0xCEAB, 0x172B, 0xB600, 0x880F, 0x3D5E,
+    0x7226, 0x679D, 0x80C4, 0x123A, 0x483D, 0x9048, 0x40BF, 0x1910,
+    0x8840, 0x748F, 0xBD64, 0xC454, 0x3900, 0xE098, 0xF4BD, 0x1896,
+    0x8580, 0x8454, 0x1F99, 0xE8A5, 0xD624, 0xC3E5, 0x3541, 0x21B9,
+    0xD310, 0xF810, 0x3844, 0x03A0, 0x8EF1, 0xB740, 0x823D, 0x5022,
+    0x4389, 0xD404, 0x9353, 0xE187, 0x40F0, 0x900A, 0x6CD0, 0x4243,
+    0x061D, 0xF3C6, 0x4748, 0x0A68, 0x9BF3, 0x3880, 0x80A6, 0xB7CC,
+    0x4A60, 0xC3DD, 0x8264, 0x0487, 0xD5A2, 0x5B0F, 0x5179, 0x4D38,
+    0xC2A8, 0xA30A, 0x93F4, 0x1E50, 0x93DC, 0xAA88, 0x4BC2, 0xC3DD,
+    0x84E6, 0x0482, 0xD144, 0x06FB, 0x7A94, 0x475E, 0xF154, 0x9EAA,
+    0xCB3D, 0x1BF0, 0xFBCC, 0x0511, 0x074C, 0xEA24, 0x17B3, 0x254B,
+    0x6204, 0x1F29, 0xE40F, 0x7D61, 0x4988, 0x5B20, 0x3A81, 0x43E8,
+    0x85B2, 0x3A89, 0x9087, 0xB579, 0x8810, 0xF106, 0x7101, 0x2035,
+    0x092F, 0x6486, 0x0F49, 0x3788, 0x167F, 0x57D0, 0x79CB, 0xE869,
+    0x201B, 0x5DCB, 0x9C20, 0xB014, 0x2E86, 0x0088, 0x2C26, 0xF56D,
+    0xA885, 0x5CFA, 0x9476, 0x9C65, 0x2ED2, 0x8057, 0xC9E0, 0x4568,
+    0x8021, 0x814F, 0x0B36, 0x9010, 0x634C, 0x05CD, 0xEF08, 0x7A04,
+    0x4D12, 0xC3AE, 0xF40B, 0xAD0A, 0xA7CC, 0xBD52, 0x5879, 0x42D4,
+    0x67B0, 0x1E80, 0x2078, 0x0EC5, 0x4410, 0xA2C6, 0x9840, 0xB996,
+    0x8144, 0x0808, 0x0B02, 0x4108, 0x25B0, 0xC688, 0x260D, 0x9A85,
+    0xA108, 0x437A, 0x6C84, 0x4082, 0x0A81, 0x21CF, 0xB5C7, 0xC469,
+    0x0604, 0x5402, 0x0CB1, 0xB107, 0x0925, 0xD638, 0xA5D6, 0x1F45,
+    0x3197, 0x66AF, 0x9845, 0x72C9, 0x877E, 0x7125, 0x104C, 0x3004,
+    0x0141, 0x83C4, 0x13E8, 0x0100, 0x54A8, 0xF9AE, 0x98E1, 0xF40F,
+    0x00CA, 0x8F88, 0xE8C6, 0x602F, 0x2935, 0x94E2, 0x3EEC, 0xF323,
+    0xA81A, 0x4A20, 0xA7B0, 0x2D84, 0x0F1B, 0xA990, 0x364E, 0x1666,
+    0x0570, 0x8026, 0x4A7A, 0xACDC, 0xD862, 0x0865, 0xE468, 0x0F99,
+    0x06E2, 0x541A, 0x03FF, 0x650E, 0x895B, 0xE5DB, 0x011F, 0x8710,
+    0x2898, 0xEC92, 0x622B, 0xA5E5, 0xD8D0, 0x47AC, 0x191D, 0xA0C8,
+    0x7C1F, 0xE03E, 0x38D6, 0x106F, 0xA65B, 0x4C92, 0x8E3D, 0x65C8,
+    0x8E1D, 0x6374, 0x5755, 0x87AC, 0x2DC4, 0x03EB, 0xBE92, 0x3031,
+    0x5E08, 0xCBB4, 0xB097, 0x6348, 0x978F, 0x690F, 0xA5BD, 0x84F0,
+    0x0C00, 0xA154, 0x2004, 0x2771, 0x03C7, 0xF28B, 0xB532, 0xC43D,
+    0xAC62, 0xBD98, 0x25E5, 0x6534, 0xBC5A, 0x6027, 0x1836, 0x744B,
+    0xC00D, 0x39C9, 0x610B, 0xD1D6, 0x05B7, 0xFF94, 0xE25E, 0xCD43,
+    0x21E4, 0xF163, 0xCCE3, 0xE3D3, 0xFDC3, 0x328F, 0x8F7A, 0xC40A,
+    0xA6C4, 0x7801, 0x1ECD, 0xEF2E, 0xBCAF, 0x29C8, 0xAB58, 0x81E1,
+    0x3416, 0x00BD, 0x1EBC, 0x551C, 0x56B8, 0x2D25, 0x7175, 0x08C1,
+    0x9CC0, 0xD680, 0x390F, 0x1178, 0x900D, 0x6492, 0xB8B8, 0x2801,
+    0x01A7, 0xBE22, 0x1002, 0x07FA, 0x890F, 0x73A5, 0x0E2E, 0x41F3,
+    0x3A21, 0x883E, 0x92BE, 0x4009, 0x3B81, 0xAD08, 0xC084, 0x2605,
+    0xF770, 0x0008, 0x1E6A, 0x7B43, 0x0BB1, 0x7BB5, 0x9081, 0xA4B7,
+    0x6049, 0x107B, 0x74CC, 0xE665, 0xC901, 0x0BD9, 0xEEC4, 0x5316,
+    0x8530, 0x2BD9, 0xA7E8, 0x01C5, 0x3035, 0xA052, 0x1F10, 0xA88C,
+    0xD23E, 0x0319, 0x3B42, 0x981C, 0x4745, 0x9330, 0xE206, 0x9E1D,
+    0x8442, 0x2050, 0x0F63, 0x70B4, 0xC80E, 0x0117, 0xBB64, 0xCC3E,
+    0xA708, 0x5131, 0xEEC4, 0x9200, 0x6A4D, 0x0F39, 0x7C88, 0x057B,
+    0x1080, 0x93B2, 0x0069, 0xF649, 0x9C5E, 0x2376, 0x2B31, 0x0CCC,
+    0x0212, 0x7E69, 0x391B, 0x3481, 0xB5E0, 0x34E4, 0xBC50, 0x4A60,
+    0x9785, 0xC20A, 0x7844, 0x1E4E, 0xD281, 0x404B, 0xBB30, 0x8459,
+    0x0045, 0xE3C0, 0x18CF, 0x5C47, 0x6A88, 0x1014, 0x8F47, 0x454C,
+    0x59C7, 0x041C, 0x64F8, 0x0801, 0xA3FC, 0x20A2, 0x0875, 0x0843,
+    0xBF06, 0x1070, 0x386B, 0xE10B, 0xA4E1, 0x04DA, 0xA367, 0xD9B8,
+    0x430C, 0x2672, 0x6390, 0x1012, 0xF8A8, 0xDC6D, 0x062C, 0x0E22,
+    0x5778, 0x9B95, 0xE945, 0x8148, 0xA721, 0x38D1, 0x95A2, 0x5127,
+    0xD02D, 0xC24F, 0x5539, 0x5CB3, 0x0780, 0xC71E, 0x20C8, 0x0287,
+    0xB944, 0x480D, 0x21A3, 0x9120, 0x930A, 0x8C0F, 0x107B, 0x0F8F,
+    0x6C4B, 0x4C2C, 0x219F, 0xB3C4, 0x084B, 0x21C2, 0x0988, 0x8099,
+    0x38C9, 0x845A, 0x5215, 0x9614, 0x6D3A, 0xC5E2, 0x3991, 0x2D00,
+    0x0028, 0x77F6, 0x3834, 0x8161, 0x290B, 0xE39A, 0x0106, 0x72F8,
+    0xC825, 0x267B, 0x5B74, 0xAFD5, 0x13DA, 0xA908, 0x0816, 0xC06F,
+    0x4EB3, 0x8D56, 0x1019, 0x6003, 0xD953, 0x0AAB, 0x133B, 0x1400,
+    0x4AA3, 0x2030, 0xFE4E, 0x780A, 0xA14A, 0x7A42, 0x544D, 0x81F7,
+    0x8D8B, 0x2151, 0x8008, 0x7B3D, 0x60E8, 0x601E, 0x2482, 0x7200,
+    0x0738, 0xC800, 0xE01A, 0x1F0A, 0x9597, 0x7BC6, 0x8F97, 0x65C4,
+    0x0807, 0x84C0, 0x4CC2, 0x03C2, 0xA08C, 0xE0B1, 0xD94F, 0x8040,
+    0x0337, 0x3B11, 0x4C08, 0x63CB, 0x4031, 0xC748, 0x881C, 0x1506,
+    0x39B5, 0x47DA, 0xDF22, 0x0A92, 0x001E, 0x3A43, 0xC02E, 0x051A,
+    0x00AA, 0x7C05, 0x223E, 0x06B1, 0x1344, 0x1122, 0x42D3, 0x8482,
+    0xEBEA, 0xD9DA, 0x7108, 0x9134, 0x40D2, 0x26F3, 0xB334, 0x40C2,
+    0x0417, 0x37C0, 0x0F49, 0x73A4, 0x4087, 0xD8A7, 0x844A, 0xAC84,
+    0x7DD1, 0x407D, 0x6EEC, 0x876A, 0x6296, 0x8E20, 0xAECC, 0x2BC5,
+    0x800B, 0x3CA9, 0xD15D, 0xE8BE, 0x8880, 0x6B4C, 0x80F2, 0xC8FF,
+    0x2BFA, 0x8620, 0xBB4A, 0x006E, 0xDA16, 0x0463, 0xFCCF, 0xDA04,
+    0x4CC2, 0xA9A3, 0x28AE, 0xAA42, 0xEA81, 0xB278, 0x01D4, 0xD4FD,
+    0x9992, 0x3EDB, 0x1F3D, 0xBCA0, 0x40B3, 0x4A7B, 0x21DF, 0x9894,
+    0xCF8B, 0x4544, 0xE520, 0x0521, 0xDC3A, 0xF40E, 0x0200, 0x295B,
+    0x4C12, 0xD034, 0x09DD, 0x8204, 0x98F6, 0xACFC, 0x9A07, 0x69A2,
+    0x76DE, 0xD604, 0x894F, 0x3000, 0x1E05, 0x7888, 0x188D, 0x13AF,
+    0x45F4, 0x6510, 0x0A54, 0x8628, 0x6078, 0x13A0, 0xD1E8, 0x8431,
+    0x340E, 0x9831, 0x0B4D, 0x9057, 0x9A2E, 0x0885, 0xD10A, 0x2220,
+    0x1B5E, 0xDFDC, 0x9F2E, 0x5F08, 0x0E6C, 0x13FE, 0x3620, 0x1EB7,
+    0xE841, 0xA340, 0xD924, 0x3A02, 0xBC7C, 0x70E6, 0x87BC, 0xB444,
+    0x02EB, 0x2BA1, 0x2039, 0x913A, 0x2569, 0x4287, 0xB5E6, 0x0799,
+    0x2893, 0x0C1B, 0x0C65, 0x2D8F, 0x9390, 0x47AF, 0x6804, 0x190B,
+    0x0000, 0x0BC6, 0xAD48, 0x0627, 0x078E, 0x1710, 0x354D, 0x12B4,
+    0x1C92, 0x1632, 0x8020, 0x046F, 0x57C9, 0x8D5E, 0x88C0, 0x2C75,
+    0x57B8, 0x9995, 0x3E20, 0x3F7B, 0x0509, 0x0641, 0x8125, 0xD0C2,
+    0x5181, 0x59CD, 0x6229, 0x91A2, 0x60D5, 0xE390, 0x3300, 0x0662,
+    0xB40C, 0x2340, 0xDBF4, 0x44B2, 0x284C, 0xAC48, 0x8040, 0x805D,
+    0xB186, 0x4061, 0xE553, 0xC1E0, 0x9E01, 0x13C0, 0xE04C, 0x1331,
+    0x772F, 0x3121, 0x3A8A, 0x184C, 0x4F31, 0x2C96, 0x883C, 0x4A53,
+    0x67C9, 0x2544, 0x62F8, 0x9B20, 0x774F, 0x092B, 0x40D9, 0x7001,
+    0xA555, 0x8740, 0xD02D, 0x7402, 0xA652, 0xD482, 0x86A9, 0x5FD5,
+    0x4B82, 0x6077, 0x7431, 0x95F8, 0x0C90, 0x6404, 0x2564, 0x0056,
+    0x83DD, 0xF2C0, 0x893C, 0x4A80, 0x789F, 0xCCFB, 0x473C, 0xF871,
+    0x1B81, 0x5006, 0x1FDD, 0xA4DC, 0x201C, 0x5A27, 0xBA5D, 0x74F4,
+    0x2C15, 0x3D33, 0x4825, 0x0758, 0x4390, 0x082C, 0x863E, 0x5D24,
+    0x231A, 0xC588, 0x1AA4, 0x792B, 0x62B4, 0x8A54, 0x04F4, 0x1A26,
+    0x8131, 0x9FD8, 0x538C, 0xEB90, 0x47D3, 0xD4C8, 0x91FE, 0x7FE4,
+    0x124C, 0xA840, 0x1238, 0x3B25, 0x30F0, 0x508F, 0x9FCF, 0xCB05,
+    0x105D, 0x8204, 0x106B, 0xE296, 0x5206, 0xB432, 0xC811, 0x8059,
+    0xFD8A, 0x260D, 0x900F, 0x0171, 0x9B67, 0x8198, 0x6B10, 0x24B0,
+    0xAE75, 0x01E6, 0x98F2, 0x4981, 0x5E2F, 0x784E, 0xAF81, 0x82CC,
+    0x0ABB, 0x9406, 0xA027, 0xCED4, 0xE20B, 0x9C44, 0x01E8, 0x5D01,
+    0x66B1, 0xFF75, 0x90F6, 0x6DC8, 0x86FD, 0x037E, 0x2095, 0xDD69,
+    0x0240, 0x6742, 0xBC14, 0xD400, 0x48C5, 0x3680, 0xE5EB, 0x13E1,
+    0x21B3, 0x2807, 0xD0E0, 0x9379, 0x300A, 0x53A9, 0x10C1, 0x0841,
+    0xB278, 0x0F68, 0x028E, 0x1980, 0x113B, 0xDB84, 0x4C5E, 0x7409,
+    0x2426, 0xE202, 0x5B3D, 0x18FA, 0x952C, 0x40F0, 0x1C10, 0x216A,
+    0x400E, 0x8073, 0x03A0, 0x9046, 0x80C2, 0x0557, 0x6812, 0x44A8,
+    0x87DE, 0x7C24, 0x1579, 0xD4E0, 0x80EF, 0x22EE, 0x8F54, 0xC30F,
+    0x6B91, 0x0863, 0xD508, 0xC246, 0xDD74, 0x2617, 0x611B, 0x0F54,
+    0x1896, 0xEED0, 0x2780, 0x2C6C, 0x8113, 0x1862, 0x0536, 0x3101,
+    0x0144, 0x00DA, 0x8C45, 0x3354, 0x51AE, 0x708E, 0x0EDA, 0xF912,
+    0x27CA, 0x4843, 0x5DC0, 0x06D2, 0xE329, 0x012B, 0xFC8F, 0x6E36,
+    0x4456, 0xAF81, 0x2A40, 0x2148, 0x1507, 0x7B23, 0x510D, 0x5478,
+    0xDFEE, 0x1E23, 0x8C12, 0x1BD8, 0xCFF2, 0x3C75, 0x5168, 0x90C7,
+    0x3EA2, 0x0A49, 0x0218, 0x681E, 0x8E29, 0xE471, 0xD741, 0xD3D3,
+    0xFD14, 0x3D9C, 0x411F, 0x6A0F, 0x1648, 0x810B, 0x03C0, 0xC5B7,
+    0xC10D, 0xF322, 0x3917, 0x5D66, 0x6420, 0xA7BB, 0xE348, 0x0B29,
+    0x81AF, 0x0DA9, 0x8F58, 0xA888, 0x25EB, 0x7572, 0xBD8C, 0x0091,
+    0x4400, 0xF38A, 0xA084, 0x9C2A, 0xEE84, 0x2E61, 0x8821, 0x08F3,
+    0x6530, 0x0CC7, 0x8150, 0x081E, 0xAD58, 0x8049, 0xD519, 0xA205,
+    0x8E52, 0x92F4, 0x2149, 0x867A, 0xEE01, 0x00C1, 0xD074, 0x1510,
+    0x81E0, 0xB815, 0x1135, 0x1003, 0xDA52, 0x630E, 0x5DBA, 0x325C,
+    0xC2B0, 0x8AD0, 0x7747, 0xE660, 0xCD8B, 0x92E7, 0xFF42, 0x0F23,
+    0xD586, 0xE5AD, 0xEE1D, 0xAF7C, 0x817B, 0x1821, 0x9550, 0x95B3,
+    0x8407, 0x5019, 0x5160, 0xC0E2, 0x3A12, 0x7416, 0x3721, 0x0608,
+    0x3138, 0x0D9C, 0x6EC0, 0x1E75, 0x8AE1, 0x9008, 0xE2FC, 0x2DB6,
+    0x58B9, 0x30E1, 0xE582, 0x09AE, 0x226B, 0x6410, 0x35CC, 0xCC29,
+    0x0932, 0x0298, 0xB850, 0x10DA, 0x9608, 0x002F, 0x30A6, 0x206A,
+    0x689B, 0x0583, 0x5928, 0x6135, 0x88CE, 0xA240, 0x1037, 0xAA3F,
+    0x4492, 0x024C, 0x2B04, 0x8778, 0xE691, 0x4A07, 0x02A1, 0xEF36,
+    0xC123, 0x63C6, 0x2D83, 0xE02F, 0xE2BA, 0xF03B, 0xEA08, 0x8B50,
+    0x5C01, 0x276C, 0xBC40, 0x483C, 0x81C0, 0x6D82, 0xBB33, 0x78E1,
+    0xBA01, 0x24BB, 0x0447, 0xA090, 0xA012, 0x4832, 0x8BC4, 0x2385,
+    0xCC93, 0x87DC, 0xA804, 0x2394, 0xDD69, 0xE823, 0xC949, 0x7FF0,
+    0xF91E, 0x3479, 0xCC81, 0x6E58, 0x65EA, 0x5621, 0xF1C0, 0x2A27,
+    0x9037, 0xD7CA, 0x2601, 0xF7AF, 0xC97A, 0x394C, 0x8BF0, 0x9023,
+    0xC048, 0x0C0F, 0x6259, 0xE407, 0xE34A, 0x0F4E, 0x7E17, 0x4EF0,
+    0x1699, 0x1C8B, 0x80A8, 0x2001, 0xFAB4, 0x84BD, 0xC7DA, 0x2019,
+    0xFE5E, 0xFB95, 0x14BD, 0xCB4E, 0x3EC5, 0xA030, 0x0401, 0xA000,
+    0x5314, 0x1410, 0x0FE3, 0xD40D, 0x3883, 0x1100, 0xF11A, 0x6A18,
+    0x42AC, 0xD882, 0x0748, 0x6347, 0xDED6, 0xC372, 0x78DC, 0x943E,
+    0x5347, 0x16AE, 0x360B, 0x8ED6, 0xD18F, 0x21CB, 0xFB87, 0xAD03,
+    0x04D8, 0xE217, 0xE47E, 0x6403, 0x08B4, 0x18E8, 0xEAC7, 0xBA94,
+    0x4468, 0x3446, 0x8F2B, 0xCFC8, 0xDC0D, 0x6C02, 0xC404, 0x7A10,
+    0xB846, 0x6208, 0x0DC8, 0x5290, 0x04A2, 0x0376, 0xCD81, 0x117D,
+    0xD3C2, 0x58F6, 0x4193, 0xB403, 0xEFEC, 0x2107, 0xB6B7, 0x92F3,
+    0xF959, 0x1DA0, 0x3F9F, 0xC993, 0x3E40, 0xE1A8, 0x1ACD, 0xF413,
+    0x4458, 0x1E0B, 0x8E67, 0x2A23, 0x8863, 0xD0C6, 0xE3A4, 0x0020,
+    0xC4A0, 0xB9D4, 0xC262, 0x00C5, 0x3545, 0x3184, 0xD921, 0x79E6,
+    0xB99F, 0xE71F, 0xBA5A, 0x044E, 0x294C, 0x0200, 0x4D35, 0x44FC,
+    0x6360, 0x5289, 0x44A8, 0x6652, 0x8161, 0x0E2C, 0x312E, 0x50C0,
+    0xC621, 0xDF82, 0x8F07, 0xB77D, 0x04D3, 0x1101, 0x3F67, 0xAD8D,
+    0xB250, 0x04CD, 0x0E6B, 0xC620, 0xE631, 0x3401, 0x0D05, 0x1907,
+    0xC3C5, 0xDE71, 0xEBB9, 0xF100, 0x3626, 0xE1B8, 0x1C47, 0x9B81,
+    0x4B15, 0xE0E2, 0xB100, 0x6BDC, 0xBFA2, 0x1676, 0x49C8, 0x8A5B,
+    0x9F01, 0x4D81, 0xE21B, 0xC10E, 0x7C86, 0x1245, 0xC014, 0x6887,
+    0x0069, 0x9543, 0xC885, 0xF0E4, 0x08C8, 0x0445, 0x2142, 0xADB7,
+    0x8841, 0x6BA7, 0xC244, 0x1969, 0xA3AA, 0x431F, 0x3C41, 0x0904,
+    0x7F9E, 0x05E9, 0x8125, 0x10B5, 0x0289, 0x9EB5, 0x5840, 0x5215,
+    0x8B63, 0x079A, 0x2844, 0x0B03, 0x8CE3, 0xFCCF, 0x01C9, 0x90C7,
+    0x4700, 0x26D0, 0x9B77, 0x9084, 0x9E82, 0x081F, 0x163A, 0x0972,
+    0x46F5, 0xDC20, 0x8BC5, 0x104A, 0x7F98, 0xC051, 0xCC0E, 0x6DD6,
+    0xC74D, 0xCC25, 0x3401, 0x8BC5, 0x07A0, 0x57C5, 0x9E81, 0x1A10,
+    0xBA29, 0x1DE4, 0xC858, 0x04C8, 0x0128, 0xD1C5, 0x0100, 0x5942,
+    0x26E9, 0x1846, 0xC990, 0x099A, 0x20A5, 0x6B3C, 0x9EA2, 0x1442,
+    0x143D, 0x8352, 0x2507, 0xB5FF, 0x4842, 0xF537, 0x0220, 0x3942,
+    0xC33A, 0x3CE2, 0x03C0, 0x8641, 0xEF28, 0x9D21, 0xAAA2, 0x3F02,
+    0x854D, 0x9F8C, 0xD9B3, 0x80EF, 0xC682, 0xC4E9, 0x1D6A, 0xD841,
+    0x8E6F, 0x2A85, 0x1DF5, 0x6B78, 0xE4A8, 0x79BC, 0x211C, 0xB3B9,
+    0x84B8, 0x2CCB, 0x6E3F, 0x2F5F, 0x1797, 0x5C1F, 0x08BD, 0xE610,
+    0x2939, 0x628E, 0x204D, 0x6EE8, 0x1912, 0x1BA7, 0x8947, 0xDC9E,
+    0x437D, 0x3018, 0x1E42, 0x2C10, 0x127E, 0x2298, 0xE0BF, 0x0CB0,
+    0x099F, 0x934C, 0xA5BC, 0xC7E3, 0x24A4, 0x6178, 0x3082, 0xE680,
+    0x3042, 0x85DD, 0x6CA0, 0x2150, 0x1813, 0x5894, 0x8850, 0xB429,
+    0xD0F7, 0x9513, 0x1018, 0x6593, 0x00E0, 0x13F6, 0xF131, 0x7938,
+    0x5469, 0x7805, 0xA407, 0x7DF7, 0x4970, 0x1800, 0xDE3D, 0x681E,
+    0x220D, 0x3D05, 0x1847, 0xD170, 0x2400, 0xC60C, 0x38D4, 0x6001,
+    0x191B, 0x420B, 0x9748, 0x5DEC, 0x8508, 0x0AF0, 0x0010, 0x0DAC,
+    0xA2D3, 0x1921, 0x4D88, 0x0631, 0x3DDA, 0xAE54, 0xC14F, 0x144E,
+    0x89E8, 0x3B02, 0xA691, 0xE9B1, 0xE60F, 0x82BF, 0xC490, 0x200D,
+    0x13CF, 0x3A64, 0x8990, 0x80B8, 0x10B6, 0x4CA1, 0x0480, 0xBC5C,
+    0xA010, 0x769C, 0xE8FB, 0x46DC, 0x4D13, 0xB91C, 0x8952, 0x0FD0,
+    0xF194, 0xF091, 0xC691, 0xD005, 0x9040, 0xD041, 0xDB7A, 0x8468,
+    0x760C, 0x590E, 0xD460, 0x8D9F, 0x0B1D, 0x225C, 0x921D, 0xA72C,
+    0x873C, 0x831F, 0x2697, 0x0EAB, 0xEC41, 0x7CE3, 0x9125, 0x3579,
+    0xA43C, 0x977A, 0x69D1, 0x24FB, 0x2F88, 0x4EAA, 0x143E, 0x15F2,
+    0x1E8E, 0x5F2F, 0x1943, 0x0874, 0x0B6D, 0x21E5, 0xED9A, 0x6236,
+    0x7649, 0xE4C0, 0x321C, 0x213C, 0x3CD1, 0xCA21, 0x774E, 0x4089,
+    0xC1E4, 0x71B2, 0xF33D, 0xA0EC, 0xB9A3, 0x0A20, 0x9290, 0xE1DF,
+    0xA5A2, 0x5C01, 0xC368, 0x7405, 0x85D3, 0x315E, 0x6A19, 0x64C2,
+    0x011C, 0xDE6A, 0xE71F, 0x0B0A, 0x0954, 0x18EC, 0x6382, 0x3F02,
+    0xC43F, 0x60F4, 0x0ECA, 0xFA20, 0x8016, 0x0548, 0x4ADA, 0x6261,
+    0x121A, 0x5F71, 0x0548, 0x8BC0, 0x4BD4, 0xE8A2, 0x0677, 0x9209,
+    0xCF08, 0x9B20, 0x4F5E, 0x8788, 0xC3D1, 0xDC62, 0x1097, 0x3E67,
+    0xB71C, 0x4451, 0x351B, 0x0691, 0x5E05, 0x5400, 0xF570, 0x48E9,
+    0x8F87, 0x09B0, 0x7574, 0x4947, 0x0778, 0xA691, 0x721E, 0x8E21,
+    0x38EE, 0x1797, 0x2218, 0x1611, 0x4FC8, 0x6F5F, 0x4256, 0x1201,
+    0xCF77, 0x5B08, 0x1A05, 0x13D5, 0x6E59, 0x6FA5, 0xE1D5, 0x1124,
+    0xA18B, 0x5C8E, 0x5908, 0xE229, 0x5489, 0x01C1, 0xDA00, 0x1EA9,
+    0xE8FB, 0x4EE9, 0x1F76, 0xBF98, 0x751A, 0x5733, 0x8652, 0x9097,
+    0x9E95, 0x6428, 0x722E, 0x04ED, 0xCF88, 0x4569, 0x7979, 0x6154,
+    0x8663, 0xFAA4, 0x08D1, 0x233A, 0xDF55, 0x1003, 0x61AD, 0x1F68,
+    0x7708, 0xF202, 0x83DD, 0xD218, 0x2108, 0x1011, 0xE467, 0x9806,
+    0x7486, 0x3D1A, 0xC091, 0x855D, 0xC801, 0x2490, 0x4995, 0xD481,
+    0x0E48, 0x0E04, 0x80A2, 0x6890, 0xC488, 0x07AA, 0xA71E, 0xCB0E,
+    0x2284, 0xB100, 0xCF63, 0x1869, 0x28B6, 0xE811, 0x204B, 0x543B,
+    0xD7AD, 0x0BD0, 0x00E1, 0x00BC, 0x754E, 0x8055, 0xCC92, 0x4FC8,
+    0x0864, 0x5004, 0xC758, 0x0D50, 0xE5A5, 0xF213, 0x072C, 0x10A7,
+    0x9088, 0x0F21, 0x8A17, 0x86A1, 0x4BD0, 0xFD82, 0x0867, 0x1E97,
+    0x9896, 0x0425, 0xD2B4, 0xA074, 0x06A6, 0x80E1, 0x7990, 0x867E,
+    0x4521, 0x331C, 0xD71B, 0x902A, 0x0811, 0xA502, 0x5022, 0x1679,
+    0x10AE, 0xAD6B, 0x008E, 0xF920, 0x208A, 0x202F, 0x526E, 0x8809,
+    0xEDAE, 0x2221, 0xFBD5, 0xCE48, 0x7010, 0xA102, 0x4870, 0x14A1,
+    0x0288, 0x7018, 0xA102, 0xC870, 0x1F06, 0x7010, 0xE041, 0x4206,
+    0x90E0, 0x4DBB, 0x4087, 0x028A, 0x103C, 0xA730, 0x8A72, 0x8CA7,
+    0x190A, 0x7114, 0x1F06, 0x012C, 0x5DF0, 0x0E02, 0x2600, 0x3E10
+};
+
+static const u16 ap1302_fw_bootdata6[ ] = {
+    0x8000,
+    0x0224, 0x076E, 0xE588, 0x800F, 0xF4FC, 0x98D3, 0x7311, 0x546C,
+    0xFC1B, 0x2492, 0x1EB9, 0x2911, 0x8C0A, 0x0F7B, 0x0AD0, 0x4304,
+    0x803F, 0x4A4F, 0xA4C0, 0x1A80, 0x280A, 0x6A3D, 0x87CC, 0x4846,
+    0x02F6, 0xC9E9, 0x6C22, 0x620C, 0x78F6, 0x30A2, 0x4FA6, 0xD688,
+    0x5082, 0x1243, 0xB0B1, 0x1109, 0x1208, 0x9410, 0xC108, 0x5490,
+    0x56A0, 0xB3C3, 0xACC4, 0x18F6, 0xE6E1, 0x1743, 0x8A03, 0xB090,
+    0x398F, 0x5DD5, 0x0E59, 0x9EC3, 0xEB28, 0xB230, 0x3B66, 0x0840,
+    0x4E7F, 0xE421, 0xF67F, 0x6102, 0x8172, 0x0069, 0xE432, 0x0E04,
+    0xC784, 0x1104, 0xFB0B, 0x10C1, 0xCA07, 0xA0BD, 0xB302, 0x8808,
+    0x8D8D, 0x0407, 0xEB71, 0x52BF, 0x5471, 0xDA00, 0x2073, 0x1301,
+    0x3198, 0x4B84, 0x47A7, 0xBB73, 0x0701, 0x0001, 0x6035, 0x220B,
+    0xF180, 0x7F63, 0xB3E7, 0xC4C1, 0x1C50, 0xF2AE, 0x3A1A, 0x2491,
+    0x0207, 0x50CB, 0xB27F, 0x07C8, 0x8744, 0x2178, 0x8D60, 0xBC4A,
+    0x6A26, 0x4FBE, 0xE34C, 0x80EC, 0x9EC2, 0x0385, 0xE090, 0xE0CF,
+    0xE62F, 0x0C77, 0x0990, 0x3A86, 0x5E13, 0x0E23, 0x1644, 0xC73A,
+    0xCE20, 0xAF9E, 0xB425, 0x95E0, 0x2702, 0x3ED2, 0x641F, 0x6934,
+    0x1ECB, 0xE03E, 0x250F, 0x2019, 0x0343, 0x535C, 0x803C, 0x4275,
+    0xAAF2, 0x81C8, 0xE0CE, 0xA688, 0x484F, 0x6764, 0x5889, 0x3531,
+    0xA022, 0x2034, 0xE69F, 0x10BF, 0x847C, 0x3C8C, 0x6048, 0xBD63,
+    0x243A, 0x82C4, 0x7DA2, 0xA026, 0x8885, 0x9F42, 0x63A8, 0x23A5,
+    0x511D, 0xC050, 0x435E, 0x691A, 0x2027, 0x8409, 0x441C, 0x3B40,
+    0x6023, 0x702C, 0x2861, 0xA5E1, 0x7BF2, 0x18FC, 0x844A, 0x0675,
+    0xF8A5, 0xE00F, 0xD1C0, 0xEE00, 0x902A, 0x6806, 0xD859, 0x401B,
+    0x080D, 0x90A3, 0xD9E9, 0x0218, 0xE400, 0x1471, 0x12C1, 0x87A6,
+    0xAB50, 0x0040, 0x4C69, 0x5000, 0x1023, 0x48AB, 0xBC52, 0x8DFA,
+    0x01E3, 0xC891, 0xD482, 0x0F8D, 0x16C4, 0xA418, 0x3AC7, 0xC840,
+    0x9005, 0x002C, 0xF520, 0x004B, 0x9060, 0x682A, 0x7D52, 0x3C22,
+    0x7004, 0x0776, 0xE5E8, 0x91B1, 0xE7E1, 0x3381, 0x60F3, 0xF42D,
+    0x90EE, 0xEAE2, 0x3D86, 0xBB9D, 0xD1FB, 0x7C08, 0x4E02, 0x1B9E,
+    0x0815, 0x4B89, 0x4C5E, 0x805E, 0x6C4D, 0x4B4C, 0x7C59, 0xB265,
+    0xE664, 0x6105, 0xFB4C, 0x244C, 0x0F1A, 0xCF94, 0xE400, 0x7036,
+    0x099C, 0x811F, 0x7A59, 0x0F9A, 0xFFCB, 0x765E, 0x901C, 0xA209,
+    0xCA51, 0x90A2, 0xF0E7, 0x80C1, 0x8785, 0xA58A, 0xFA50, 0x2942,
+    0x3F4B, 0x7D97, 0xB37B, 0x8BCD, 0xA602, 0x11EA, 0x00D0, 0x0C76,
+    0x2E64, 0x41E1, 0x111F, 0x66FF, 0x2156, 0x41D6, 0x9812, 0x156C,
+    0xB013, 0xCD22, 0x072C, 0x4840, 0x8B46, 0x0916, 0x0712, 0xC129,
+    0x8068, 0x00C4, 0xC044, 0x6800, 0xC580, 0x4668, 0x00DE, 0xE6DE,
+    0x2D54, 0x7241, 0x7771, 0x8122, 0x0463, 0xD210, 0x3C0C, 0xF72B,
+    0x0106, 0x2207, 0xB96B, 0xCBDD, 0x5645, 0xD9DD, 0xE53C, 0x8040,
+    0x7804, 0x1E33, 0x861C, 0xC7C1, 0x3E7C, 0x0310, 0x2675, 0xCDC2,
+    0x648E, 0x01D7, 0x6AF0, 0x899F, 0x9CF8, 0x27E7, 0x8444, 0x0468,
+    0xF573, 0x9081, 0xB221, 0x30BC, 0x4BD0, 0x5EB4, 0x4621, 0xF44C,
+    0x38FC, 0x2436, 0x23E9, 0x5838, 0x84E0, 0x59DB, 0x2900, 0x380E,
+    0x0675, 0xA9C5, 0xD0E0, 0xA5AF, 0x9C23, 0x2AAC, 0x8BD6, 0xD9E5,
+    0xCE3F, 0x0CDD, 0x0C71, 0x090F, 0x7A95, 0x9756, 0x6C88, 0x05B8,
+    0x9088, 0x8678, 0x0110, 0x65B4, 0x518F, 0x7494, 0x9F75, 0x7721,
+    0xB821, 0x17B7, 0x6153, 0xD90D, 0x9160, 0x4800, 0x4821, 0xC028,
+    0xD16F, 0x0F56, 0xB20C, 0xE059, 0xFCEA, 0x7843, 0x34AF, 0x6A30,
+    0xD831, 0xBF08, 0x0FBC, 0xFCB1, 0x20F3, 0xEC04, 0xFA40, 0x2DEE,
+    0x03F2, 0x358F, 0xA218, 0xA5EC, 0x1C32, 0xE6E2, 0xC227, 0x0405,
+    0x010C, 0x18F9, 0x0350, 0x42D2, 0x1BBF, 0x3987, 0x720E, 0x10FA,
+    0x2043, 0x205B, 0xBF39, 0x9123, 0x944E, 0xFDDB, 0x7849, 0x8287,
+    0xCEF1, 0x820E, 0x658D, 0x903C, 0x1088, 0x7E70, 0x9011, 0x80D5,
+    0x3B0D, 0x13B0, 0x951D, 0xC791, 0x50B1, 0x180D, 0x73AC, 0x861A,
+    0xC7F1, 0x54A7, 0x180D, 0x33AB, 0xB66B, 0xC405, 0x1EC5, 0x4254,
+    0x18F0, 0x1704, 0x889D, 0x3364, 0x2021, 0x0C06, 0x77E1, 0x6912,
+    0xA0F0, 0x370C, 0x371F, 0x4063, 0xD5AC, 0x0814, 0xD420, 0x4E1E,
+    0xFC91, 0x3C3F, 0x40C7, 0x7F35, 0x15C7, 0x1143, 0x40D5, 0x3548,
+    0xDB83, 0x43A4, 0xD9C7, 0xD56A, 0xA404, 0x79D2, 0x2A40, 0x8E8E,
+    0x7C92, 0x77BF, 0x23D1, 0x030D, 0x2A5A, 0x4C9A, 0x0657, 0x7E47,
+    0x2406, 0x11D5, 0x3E43, 0xBB1B, 0x6D19, 0x60F0, 0x8065, 0x0E81,
+    0x6B12, 0x0071, 0xED21, 0x12EC, 0x3B61, 0x0307, 0x2067, 0x6FBA,
+    0x3EFC, 0x8E13, 0x0930, 0x3D66, 0x3010, 0x7359, 0xC04A, 0x39BC,
+    0xAAFC, 0x0D6C, 0xE3B1, 0xECD7, 0x91D2, 0x000C, 0x94BB, 0xF570,
+    0xB12C, 0x8903, 0xE66A, 0x1120, 0x330E, 0x510B, 0xA311, 0x304D,
+    0x62E4, 0x7E0D, 0x5860, 0x0615, 0x4311, 0x039C, 0xB214, 0x181A,
+    0xA5B1, 0x2A2C, 0x84DD, 0xF2F2, 0xF289, 0x56A0, 0x3D81, 0x04A3,
+    0xE40A, 0x06D3, 0xE85F, 0xF160, 0x981C, 0xD126, 0x0324, 0x0FA4,
+    0xC028, 0x80F1, 0x00F1, 0x7E83, 0xC05D, 0xF052, 0xA0F7, 0xCBC2,
+    0x0522, 0x04DB, 0x623D, 0x445B, 0xF6C4, 0xC3F6, 0x049B, 0x5318,
+    0x0463, 0x7684, 0x17C2, 0x1428, 0x0F20, 0x7200, 0xE180, 0x0116,
+    0xA6F1, 0x7081, 0xEC0E, 0x403A, 0x4A9F, 0x23C1, 0x9DCE, 0x000F,
+    0x81DC, 0x0CF6, 0x2271, 0x7FDF, 0x2F04, 0x4711, 0xC609, 0x6A7C,
+    0xF9C0, 0xA040, 0x4EF9, 0x7A2D, 0x25A0, 0x89E7, 0x8017, 0xDF29,
+    0xE85A, 0x3A28, 0xD01B, 0x6029, 0x770A, 0x1D4E, 0xCE2C, 0x03C0,
+    0x576D, 0xA611, 0xF3DF, 0x29E5, 0xE2A5, 0x82EF, 0x9471, 0x0F36,
+    0x2F21, 0xEDC9, 0x518F, 0x0ED6, 0x6242, 0x421D, 0xF274, 0x3DF2,
+    0x9EB0, 0x23DF, 0x2828, 0x6133, 0x1643, 0xC8E1, 0x30D3, 0xF095,
+    0x48B2, 0x3EA5, 0xDF2B, 0xAA03, 0xD8BC, 0x4481, 0xF107, 0x818A,
+    0xE680, 0xC956, 0xA00D, 0x789F, 0xE880, 0x4274, 0x1B27, 0x43DD,
+    0x3312, 0x1E6E, 0x5290, 0x08D9, 0x1FCB, 0x901F, 0xB6E1, 0x0C59,
+    0xF509, 0x5087, 0x7DB7, 0xE854, 0x9809, 0xD0F8, 0x9D07, 0x3C00,
+    0xCA32, 0xC405, 0x740A, 0xE640, 0xE76D, 0xD19B, 0xF878, 0xA1DF,
+    0x30C6, 0x3B29, 0x0ECC, 0x80E7, 0x0073, 0x7BDC, 0xC060, 0x6F7E,
+    0xD92E, 0x89B2, 0x10CB, 0xCB6B, 0xA230, 0xFA0A, 0x5A7A, 0x8540,
+    0xB1C7, 0x80AA, 0x0008, 0x7E8C, 0x1011, 0x07BF, 0x08CE, 0x9388,
+    0x2A7E, 0x1200, 0x0F8A, 0xDDCC, 0xC5C4, 0x0224, 0x2F98, 0xD004,
+    0x3540, 0x12F1, 0x6458, 0x8E41, 0x5C9C, 0xC0BE, 0x8E46, 0x1607,
+    0x5402, 0x16D8, 0x2383, 0xD505, 0x6466, 0xE5AC, 0x090B, 0xD60F,
+    0xE808, 0x086F, 0x4B88, 0x0162, 0xB062, 0x2029, 0xE3F0, 0x1F1F,
+    0x4789, 0x825E, 0x9707, 0x100A, 0x065B, 0xF63B, 0x8420, 0x79F0,
+    0x621E, 0x66A3, 0x92E4, 0xE8F6, 0x5CA0, 0x803E, 0xB4B2, 0x2DB1,
+    0xE440, 0x1F3F, 0x8517, 0x7D29, 0x25E1, 0x85A3, 0xEEDB, 0xC3B9,
+    0xA042, 0x0EFE, 0x5443, 0xBCFC, 0x960D, 0x0D2B, 0xA406, 0x3044,
+    0xCEF3, 0xF847, 0xAE98, 0x12EF, 0xA643, 0xC50F, 0x20AF, 0x8801,
+    0x842A, 0x27E4, 0x4215, 0x4108, 0xADED, 0xAEC4, 0x4246, 0x77C9,
+    0x8212, 0xC980, 0x2411, 0xEF97, 0x3480, 0x41F5, 0x3D85, 0x085C,
+    0x0D13, 0x4BD0, 0xD6C2, 0x2077, 0xAD11, 0x76E9, 0x78F6, 0x4841,
+    0x0255, 0x6C45, 0x8E54, 0x117A, 0x6D50, 0x7442, 0x05DF, 0x1385,
+    0x9EDA, 0x2647, 0x5C1F, 0x1E97, 0xEC60, 0x8410, 0xCC60, 0x2043,
+    0xC37A, 0xE322, 0x11C8, 0xD631, 0x3B46, 0xE900, 0x24A6, 0x067C,
+    0x8C88, 0x2787, 0x80B1, 0x8812, 0x343C, 0xF4B2, 0x409F, 0x4367,
+    0x1013, 0x6FD1, 0xC274, 0x24D0, 0x2022, 0x742E, 0x3943, 0x1778,
+    0x0208, 0x2DED, 0x6FB2, 0x05B7, 0x4F53, 0x083B, 0xE5D9, 0x419A,
+    0x6006, 0x8905, 0x9085, 0xD870, 0xBEF9, 0x7911, 0x07C0, 0x118A,
+    0x7A12, 0xF488, 0x6087, 0xC71C, 0x220C, 0x78B9, 0x74BB, 0xE5A4,
+    0x72EA, 0x04D0, 0x2877, 0x4B31, 0x2511, 0x08E2, 0x50CB, 0x3916,
+    0x09E4, 0x89C4, 0x848C, 0x0860, 0x8B34, 0x80A5, 0x0865, 0x2D16,
+    0x67E9, 0x75C1, 0x3883, 0x5284, 0x0128, 0x922A, 0x24C9, 0x7AE4,
+    0x3CC9, 0x0978, 0x9608, 0xE4FC, 0x8B1B, 0x85D8, 0x8126, 0x87AA,
+    0x62A6, 0x4C55, 0xC65B, 0x38D8, 0x8132, 0x52ED, 0x53E1, 0x027A,
+    0x5860, 0xBB86, 0x08AA, 0xE03A, 0xFA70, 0x7DC8, 0x7843, 0xD931,
+    0xEEC0, 0xE2EF, 0x9914, 0x00B1, 0xC432, 0x484B, 0x6425, 0x7817,
+    0xF24A, 0x0640, 0x8D13, 0xD90D, 0xE180, 0x8727, 0x02D8, 0x4005,
+    0x40A0, 0x4447, 0x08A4, 0xA213, 0xF6F2, 0xE982, 0x045E, 0xF45C,
+    0x222C, 0x2081, 0x5E5B, 0xC536, 0x48B2, 0x77C8, 0x1E02, 0x0B09,
+    0x4709, 0x01B4, 0x7E10, 0x4110, 0x3042, 0x0565, 0xF791, 0xA436,
+    0x675F, 0x880C, 0x4131, 0xE81D, 0x8121, 0x3C55, 0x645D, 0x41B4,
+    0x2007, 0xB3F6, 0x4B05, 0x6057, 0x218A, 0x1D4F, 0x5C24, 0x810B,
+    0x103D, 0xF0DA, 0x5E5C, 0x6D22, 0x758D, 0xA7A0, 0x4040, 0x97A2,
+    0x6CC4, 0x9D18, 0xF460, 0xA45D, 0x8081, 0x3F90, 0xB2A7, 0x5AE8,
+    0x8788, 0x5BC7, 0xADE7, 0x07C9, 0xB386, 0x2676, 0xF650, 0x8021,
+    0x0C38, 0xE8F5, 0x50E8, 0x9771, 0x10BD, 0x678C, 0x3D68, 0x0821,
+    0x0F88, 0x2DD0, 0x10F2, 0x66C8, 0xF336, 0x4D8F, 0x1D0E, 0x095D,
+    0xA351, 0x2F47, 0xB10C, 0x940A, 0xE080, 0xEB01, 0x421F, 0x68E5,
+    0x88F2, 0x2795, 0xC201, 0xDA02, 0x1724, 0x16A4, 0x9044, 0x5078,
+    0x0805, 0x3A40, 0x9041, 0x8DE2, 0xA472, 0xCB08, 0x1ADC, 0x1E44,
+    0xD8EF, 0x7501, 0x0110, 0xEF95, 0x05CC, 0xEA16, 0x141C, 0x19A0,
+    0xCE4F, 0xE881, 0xA028, 0x8647, 0x4986, 0x7503, 0xAD88, 0x4120,
+    0x513A, 0x5738, 0x031E, 0xC00C, 0x1028, 0x123B, 0x811B, 0x5800,
+    0x565C, 0x009D, 0xF4DC, 0x6482, 0x3E41, 0xA52B, 0x5941, 0xEC2C,
+    0x93A0, 0x47AF, 0xD24A, 0x3007, 0x3043, 0x3658, 0xAE3B, 0x0274,
+    0x0791, 0x0FAD, 0x6DCB, 0xB4D6, 0x88C0, 0x9118, 0xA7E9, 0xA762,
+    0x9422, 0x26E6, 0x9E0F, 0xADBF, 0x8BBC, 0x5EC4, 0xF611, 0xFBE8,
+    0x74A4, 0x4878, 0x8F1A, 0x79F2, 0xA0F4, 0x6360, 0x8E3C, 0x71D6,
+    0x40C2, 0x0460, 0xA8C1, 0xF0A7, 0x30F8, 0x803C, 0x4632, 0x8460,
+    0x2140, 0x6E72, 0xD856, 0xB21D, 0x3EC0, 0x897B, 0xDE20, 0x81E0,
+    0xA23D, 0xF354, 0x4259, 0x19DE, 0x3D08, 0xE886, 0x044B, 0xD017,
+    0x4897, 0xA228, 0x112D, 0xA12C, 0xB467, 0xBA6B, 0x8CA0, 0x4703,
+    0x0010, 0xA028, 0x164F, 0x801D, 0x8EAA, 0x2067, 0x5D79, 0x8F77,
+    0x118F, 0x836D, 0x87BE, 0x59D4, 0x2744, 0x42EB, 0xBE8B, 0x081E,
+    0x0487, 0xEEC4, 0xCE1E, 0xB8CC, 0x3276, 0x928F, 0x7FFA, 0x1024,
+    0x3D02, 0x221F, 0x71E0, 0x204E, 0x8C45, 0xDC88, 0x89E0, 0x487C,
+    0x0444, 0x11E7, 0x5D42, 0x6C04, 0xA5CA, 0x20A8, 0x0421, 0xF78E,
+    0x8913, 0xA506, 0x18B3, 0x1ACF, 0x6263, 0xA703, 0x0443, 0xC909,
+    0x1004, 0x9908, 0x2C84, 0x5DB6, 0x7A20, 0x70E4, 0x5904, 0x0661,
+    0x0B7B, 0xE819, 0x8410, 0x147B, 0x10B6, 0xCA1E, 0xBA8B, 0x2F72,
+    0x0D8B, 0x0017, 0x7CBF, 0x9F57, 0xBB0E, 0xAE50, 0xBD8F, 0xFC5E,
+    0x5B0C, 0x2EC3, 0xBE3E, 0xF947, 0x2BFE, 0x80FD, 0x6FDF, 0x25A4,
+    0xE007, 0x73A5, 0xC2AE, 0xF2AE, 0xE5AB, 0xB4B3, 0x618B, 0xACB0,
+    0x8A18, 0x4C04, 0x3DB8, 0xD83D, 0x9836, 0x58F7, 0xCC69, 0x43AB,
+    0x5792, 0x09BA, 0xB320, 0x45AE, 0xE3E0, 0x21CC, 0x1A20, 0xBBC2,
+    0x54C2, 0x5EF9, 0x1068, 0x7A40, 0x4A03, 0x086B, 0x4910, 0xEAE1,
+    0x8000, 0x4A07, 0x1DC6, 0x0C7C, 0x58BC, 0x2430, 0xC3E1, 0x78B1,
+    0x1047, 0xB0B0, 0x8618, 0x871E, 0xF8E4, 0x1F42, 0x430B, 0x220A,
+    0x0066, 0xD964, 0x5DF1, 0xCA81, 0x4DDF, 0x2208, 0x94CA, 0xDEC6,
+    0x6F17, 0x112B, 0x2F9C, 0xCF69, 0xA52E, 0xF910, 0x4482, 0x4C86,
+    0x5F7C, 0x9D89, 0x0CE0, 0x432D, 0x14CC, 0x8A66, 0xDE8A, 0xAB10,
+    0x4FBD, 0xEFD0, 0x340A, 0x6020, 0x2E06, 0x8E0E, 0xDC8D, 0x122E,
+    0xE841, 0xD8B6, 0xC580, 0x4C26, 0x0502, 0x525C, 0x8628, 0xB473,
+    0x4260, 0x76F3, 0xE888, 0x3A81, 0xE1F3, 0x08F8, 0x8E01, 0x181C,
+    0x1F06, 0x3EAB, 0x0B11, 0xC05B, 0xB9B6, 0x0943, 0x0364, 0xD610,
+    0x07CF, 0xD0E8, 0x8040, 0x2928, 0x3087, 0x3E0F, 0x9A2D, 0xCA80,
+    0xB9F9, 0x5880, 0x4036, 0x25E0, 0x05A4, 0xA63D, 0x1BBE, 0xBD93,
+    0x31C4, 0xA93C, 0x013E, 0xEB5C, 0x3E81, 0xBE1C, 0xD622, 0xEC9B,
+    0x530B, 0xA919, 0x031C, 0x1C36, 0xE425, 0xB402, 0x88B6, 0x0998,
+    0x6380, 0x97DF, 0x1BEC, 0x6E6F, 0x223F, 0x4423, 0xB9D0, 0x0B04,
+    0x1F7C, 0x8E18, 0xF091, 0xFCA8, 0x93E9, 0xD6E1, 0x3F9E, 0x7B6E,
+    0xC849, 0x5200, 0x83BA, 0x406A, 0x680A, 0xDF12, 0x2A09, 0xA7EC,
+    0x70D1, 0x3B24, 0x0AFB, 0xFE3C, 0x4008, 0xF2CE, 0x2722, 0x0BBE,
+    0x424E, 0xE5E8, 0x127A, 0xF350, 0x4BED, 0xC40C, 0x7BE4, 0x2487,
+    0xE442, 0x94F6, 0x6318, 0xB040, 0x8145, 0xF572, 0x1744, 0x5390,
+    0x145B, 0x574A, 0x006F, 0x800F, 0x0815, 0xEF90, 0x9445, 0x9038,
+    0xF6F4, 0x518C, 0xB006, 0x9160, 0x2092, 0x18E8, 0x1892, 0xEADD,
+    0x81AF, 0xC1F1, 0x7918, 0x8387, 0xA160, 0x6477, 0x6761, 0x04DE,
+    0xAA37, 0x2020, 0x31F4, 0x4881, 0xF7E6, 0x28E0, 0x0902, 0xABB2,
+    0xB888, 0x23E9, 0xFFA1, 0x1C0E, 0xAED0, 0xD118, 0x1800, 0x6E69,
+    0x1103, 0x2278, 0x7BE3, 0x9C42, 0x0136, 0xE231, 0x103B, 0xF080,
+    0x4050, 0x9E08, 0x3A30, 0x6C7B, 0x0598, 0x442F, 0x0727, 0x0831,
+    0xD8F8, 0x07D0, 0xC8C3, 0xD683, 0x458B, 0x540C, 0x3107, 0xC584,
+    0x6714, 0x2380, 0xB716, 0x975E, 0xA013, 0x639F, 0x91E5, 0x4AD1,
+    0x43BE, 0x6208, 0x81EB, 0x4E71, 0xDED6, 0x8426, 0x2000, 0xE02F,
+    0xBC40, 0x4B12, 0x4860, 0xCF08, 0xC2F0, 0xBCF8, 0xD031, 0xF2E7,
+    0xB975, 0x4C10, 0x82C0, 0x1055, 0xDC34, 0x6412, 0x9195, 0xEA01,
+    0x2883, 0xDBF3, 0x2598, 0x2624, 0xB566, 0x1761, 0xAA08, 0x8A77,
+    0x13E0, 0x4876, 0x1803, 0xDDA1, 0xF45D, 0xC7B8, 0x6158, 0x2221,
+    0xF6D0, 0x8090, 0x36A2, 0x0207, 0x7030, 0x1EE7, 0xE793, 0xC7C4,
+    0x1B42, 0x329E, 0xE428, 0xC20C, 0xEF00, 0x8242, 0x7400, 0x6901,
+    0x66F9, 0x01E2, 0x1961, 0x3C05, 0x71D8, 0xCA3C, 0x0570, 0x38FF,
+    0x2444, 0x3024, 0xFB2C, 0x3455, 0x63E7, 0xFDA1, 0xE8D6, 0x4102,
+    0xC49E, 0xE6AD, 0x1F13, 0x3A88, 0x247E, 0x60A3, 0x0208, 0xE0EB,
+    0x55A1, 0x0087, 0x7DA7, 0x7CA6, 0x0021, 0xBCA1, 0xC155, 0x0D00,
+    0x1989, 0xDE34, 0xC5E8, 0xD901, 0x20BC, 0x80C8, 0x86CD, 0x2C41,
+    0x30B0, 0x880D, 0xE0F3, 0xA900, 0x044B, 0xED8B, 0x5BDC, 0x5221,
+    0xB870, 0x4010, 0x0D0D, 0xBD4C, 0x70B5, 0x0498, 0x0EB3, 0x2FC1,
+    0x8285, 0x4384, 0x2952, 0x1818, 0x8E68, 0x0899, 0xD790, 0x1880,
+    0x51C7, 0xE845, 0xD101, 0x2A44, 0xB580, 0x6201, 0xF403, 0x9101,
+    0x42FE, 0x862C, 0x45B2, 0x4441, 0x3640, 0x3C7E, 0x8225, 0x8162,
+    0x2840, 0x0881, 0x2208, 0x61D7, 0xE302, 0x3B8D, 0x1DC5, 0x0861,
+    0xCCCE, 0x660E, 0xC930, 0x2021, 0x0220, 0x793A, 0xB2B0, 0x5B05,
+    0x3611, 0xB500, 0x1A8E, 0x0803, 0xA195, 0x9112, 0x9B9D, 0x1606,
+    0x00C0, 0x3420, 0x343C, 0xA6E6, 0x2288, 0x1604, 0x8422, 0x10EC,
+    0x0D1E, 0x0276, 0x37B0, 0x2C3A, 0xE688, 0x74A7, 0xC201, 0x768B,
+    0x4086, 0x34E4, 0xC830, 0x4D22, 0x0D39, 0x6432, 0xC0E0, 0x94C6,
+    0x002A, 0x401E, 0xF194, 0x34E4, 0xB1CA, 0x01B6, 0x4018, 0x4C00,
+    0x94B9, 0x98B0, 0x2D48, 0x040E, 0xA363, 0xB87E, 0xCBC1, 0xAB08,
+    0x0434, 0x2041, 0x4306, 0x9790, 0xC20F, 0xD2E3, 0x98C7, 0x0A48,
+    0x76D9, 0xF888, 0x94B9, 0xD1E4, 0x8040, 0x0B1D, 0x4A11, 0x07C9,
+    0x0AC2, 0x6881, 0x4369, 0x69B2, 0x6E8D, 0x320E, 0xDD04, 0x2F0E,
+    0x0B9C, 0xC820, 0x811C, 0x430C, 0x1EEF, 0x611E, 0xB637, 0x1D10,
+    0x7088, 0xA431, 0xC205, 0x82E0, 0x1989, 0x5EE2, 0x60FA, 0xA662,
+    0x482E, 0xE06A, 0x1310, 0x8608, 0xA968, 0xFAF4, 0xA443, 0x0F1E,
+    0x2D90, 0x55D5, 0xBAE3, 0x9066, 0x4017, 0xAACE, 0x0413, 0x3A7D,
+    0xD42E, 0x4001, 0x8409, 0x1D40, 0x7761, 0x1008, 0xA5EC, 0xC9B4,
+    0x3CAC, 0x8E56, 0x621E, 0xF3A7, 0x1307, 0xDA80, 0xE260, 0x82A7,
+    0x4EED, 0xCC26, 0x0828, 0x7481, 0x99CF, 0x6229, 0x77CF, 0x0252,
+    0x01A4, 0xA3E4, 0xE031, 0xCEA5, 0x1B95, 0xE031, 0xF5F2, 0xF16D,
+    0x0585, 0xD0E2, 0xE3BB, 0xBA27, 0xEFF6, 0x6167, 0x9E99, 0x094B,
+    0xEABC, 0xE203, 0x43F0, 0x4044, 0x1D4D, 0x1F13, 0x2509, 0x9A7B,
+    0x9B3E, 0x0F88, 0x4078, 0x2F47, 0x90F4, 0x0F0C, 0x8191, 0x83C0,
+    0x52C8, 0x0EDA, 0x0462, 0x3182, 0x1F26, 0x3314, 0x6103, 0x4A19,
+    0x9823, 0xE6AF, 0xF108, 0xFB06, 0x2C40, 0x5024, 0x3F00, 0xE604,
+    0x0C54, 0x0594, 0xE05C, 0x1139, 0x8074, 0x792F, 0x40E3, 0xC957,
+    0xBE05, 0x4B82, 0xA394, 0x619B, 0x4A13, 0x0178, 0x3198, 0x7092,
+    0x16A0, 0xE4EF, 0x8803, 0x1C31, 0xF5F2, 0x1277, 0x4780, 0x63E0,
+    0xF495, 0x43A0, 0x171E, 0xC959, 0xEC42, 0x3F45, 0x7B0F, 0x75F1,
+    0x0E89, 0x18BB, 0x08A4, 0x4CEE, 0xDE1D, 0x21E0, 0xD1F6, 0x1328,
+    0x831D, 0x8184, 0x255A, 0x00C6, 0x817C, 0xBCE3, 0xCC20, 0x51C2,
+    0x101A, 0x46E7, 0x6EF2, 0x0884, 0x3406, 0x4388, 0xC71A, 0x1DCF,
+    0x7224, 0xC026, 0x5596, 0xC00E, 0xD5AE, 0x221F, 0x89DB, 0xC401,
+    0x01CE, 0x23FE, 0xB004, 0x0800, 0x8E12, 0x83B6, 0x0E48, 0xF13B,
+    0x3C8A, 0xC040, 0xE009, 0x042C, 0x326B, 0x19E0, 0xE019, 0xEFCA,
+    0xD2EE, 0x7971, 0xF289, 0xB082, 0x0047, 0x47BD, 0x8B1B, 0x9E80,
+    0x98BB, 0x36F0, 0x98C3, 0x85C0, 0xA04C, 0x6CBB, 0x8439, 0x7889,
+    0x3867, 0x20C6, 0x9D0C, 0x18A8, 0x79D3, 0x6846, 0x9DBD, 0xE07B,
+    0x02C8, 0x6724, 0x33DD, 0xC7B8, 0x2D6B, 0xA050, 0x6672, 0x1F03,
+    0xA18B, 0x0702, 0x0103, 0x0990, 0x4434, 0x4381, 0x1676, 0x5A75,
+    0x221B, 0xDD34, 0xA343, 0x8BC0, 0x74C2, 0x4C0E, 0x5E45, 0x043F,
+    0x4F6A, 0x17B7, 0xAECB, 0x73F2, 0x31E1, 0x11F9, 0x23E1, 0x6083,
+    0x44AC, 0xC25E, 0x22C4, 0x1895, 0xA892, 0x2154, 0x615A, 0x4418,
+    0x2B25, 0x8184, 0x0C40, 0xB044, 0x7800, 0x7C67, 0xCA3E, 0x3213,
+    0x2363, 0xAE32, 0x07BB, 0x5CC4, 0xAE2C, 0x018E, 0x83D2, 0x2E88,
+    0x0910, 0x641B, 0x2BE1, 0x871C, 0x7882, 0x2346, 0x1551, 0x2C21,
+    0x8408, 0x4864, 0x0C00, 0x206C, 0xB149, 0x3BB9, 0xF710, 0x81B7,
+    0x080C, 0x2800, 0x2812, 0x8820, 0x01B2, 0xCD40, 0x123D, 0x7A30,
+    0x5EC2, 0x9310, 0x6CB5, 0xF09E, 0x9197, 0x5063, 0x1E05, 0xB33B,
+    0x92A0, 0x9745, 0xB21D, 0x6B5E, 0x22DD, 0xA490, 0xA364, 0x388E,
+    0x5EA3, 0x0710, 0x3023, 0xDABF, 0xEB87, 0x114F, 0x8237, 0x08F0,
+    0x0229, 0xD880, 0x2702, 0x1756, 0x8895, 0x0420, 0x5D12, 0x1AA3,
+    0x0168, 0x0100, 0xFC6E, 0x7C22, 0x7016, 0x64F6, 0xB510, 0x8F1D,
+    0xBAE8, 0x5E0C, 0x252D, 0xAD94, 0xB38A, 0x8775, 0xE59E, 0xA957,
+    0x9D36, 0xE0D5, 0x30D3, 0xA02C, 0xCB60, 0x3478, 0x2D76, 0xE292,
+    0x9D8B, 0xD26D, 0x8208, 0xF802, 0x4CA4, 0xA603, 0x2CF6, 0x0771,
+    0x50F4, 0x24A5, 0x80A4, 0x2580, 0x040D, 0xB7FA, 0x8026, 0x5696,
+    0xD9AC, 0xC3E1, 0xA4E1, 0x980F, 0x65E1, 0x2F13, 0x0F1F, 0x3817,
+    0x9ACA, 0x1C4B, 0x4362, 0x58BB, 0x2801, 0x8090, 0x2599, 0x44E5,
+    0x43AD, 0xC549, 0x9DE9, 0x2067, 0xA0C9, 0xA11D, 0xEAFC, 0x7B23,
+    0x2463, 0xC42B, 0x3DBD, 0xB812, 0x20C0, 0x1F20, 0x204C, 0xCAD1,
+    0x7314, 0x8844, 0xD020, 0xBF20, 0xC430, 0x87D2, 0x2504, 0x0275,
+    0xEAB1, 0x1767, 0x11E4, 0x42D0, 0xC7BA, 0xDCA0, 0x4120, 0x4CB4,
+    0xACA1, 0xE8E3, 0x19EF, 0x0702, 0x02CB, 0xE067, 0x3B28, 0x61C2,
+    0xEF40, 0xEB32, 0x0110, 0xFB97, 0x20A5, 0x23E5, 0xB681, 0x71D1,
+    0x570F, 0x6EA2, 0x0CAC, 0x0D00, 0xD380, 0x2389, 0x0547, 0x50EB,
+    0x3561, 0x3003, 0x01A4, 0xF604, 0xA4C8, 0xD483, 0x1358, 0xF445,
+    0xF9F7, 0xE810, 0x8600, 0x6026, 0x58CE, 0x8005, 0x1061, 0x87C0,
+    0xB802, 0x1311, 0xE787, 0xA4AA, 0x07BE, 0x69C4, 0x52ED, 0xA511,
+    0xA64E, 0xD222, 0xA168, 0x79E6, 0xC05B, 0x0A93, 0x1B42, 0x9EAC,
+    0x291C, 0x29A1, 0x4DC0, 0x86B4, 0x2A9D, 0x88D4, 0x6787, 0xB6AA,
+    0x84B3, 0x2004, 0x3EFC, 0x5D1A, 0x864A, 0x6444, 0xD002, 0xBC1D,
+    0x9622, 0x0D14, 0x4009, 0x24C8, 0x000E, 0xA209, 0x80B5, 0x4817,
+    0xC690, 0x8000, 0x2422, 0x2642, 0x1080, 0x8F76, 0x5E19, 0x6979,
+    0x4200, 0x7841, 0x526A, 0x9B07, 0x802E, 0x0996, 0x45B2, 0x013B,
+    0x2028, 0x9A58, 0x4E0A, 0xA41B, 0x2DEC, 0xDC1B, 0x54F8, 0xF68D,
+    0xB8E1, 0x0B2B, 0x7B8D, 0x8C80, 0xB640, 0x00C5, 0x9E57, 0xB908,
+    0x3470, 0xD948, 0x8403, 0xC016, 0xA8E7, 0xA662, 0xE92E, 0xC196,
+    0x21CF, 0xB484, 0x1BF0, 0xA340, 0x9B3E, 0xE196, 0x3022, 0x6348,
+    0x9847, 0xB8FA, 0xCBCA, 0xD863, 0xEB72, 0xE187, 0x02D0, 0x803C,
+    0x0521, 0xC028, 0xA085, 0xD86B, 0x0405, 0x02D4, 0x08AB, 0xA910,
+    0x0540, 0x0139, 0x9010, 0xAA6D, 0x1105, 0x007D, 0x9780, 0x6286,
+    0xF1C2, 0xA086, 0x0E97, 0x230C, 0x2183, 0x2099, 0x6E5B, 0x7BC5,
+    0xC083, 0x3EFC, 0xCE1B, 0x0433, 0x42CB, 0xBB6B, 0xC443, 0x70EC,
+    0xC141, 0x76F1, 0x3B38, 0xF628, 0x89D0, 0x4203, 0xB9F3, 0x10D0,
+    0x9400, 0x8F0B, 0xD808, 0x0123, 0x2DCA, 0x34BD, 0x77A6, 0x2579,
+    0x6DDE, 0x55E4, 0x0102, 0x6571, 0x6C81, 0xD046, 0xC38F, 0x8CF2,
+    0x07B4, 0x8C86, 0x2C4B, 0x8008, 0x0A1D, 0x4208, 0xC403, 0x6DA2,
+    0x00A1, 0x4B69, 0x7D11, 0x84E8, 0x0C33, 0xE7C6, 0xC108, 0x0AAB,
+    0xEC0B, 0xC4D8, 0x28CB, 0x3442, 0x7640, 0x4D40, 0x1DA0, 0xCABE,
+    0xCC86, 0x4801, 0x6025, 0x4846, 0xA000, 0xB3AF, 0x7438, 0x0290,
+    0x801E, 0x916C, 0x9F3E, 0x178D, 0x4E17, 0x7EDD, 0x8B0C, 0x024C,
+    0xB38A, 0x6441, 0x8047, 0xBC81, 0xA411, 0x1B03, 0x0EC4, 0x3612,
+    0x8416, 0xC55C, 0x5C33, 0x6042, 0x3F71, 0x0D90, 0x4DA2, 0x542A,
+    0xD518, 0x3009, 0xBC14, 0xF83B, 0x4671, 0x5C0A, 0x3DAB, 0xEA40,
+    0x984B, 0x56A4, 0x03CE, 0xA834, 0x2584, 0xA211, 0x404A, 0x6DF2,
+    0x42C0, 0x49B5, 0x5C8F, 0x8800, 0x47D8, 0xE2A2, 0xC4A4, 0x76AB,
+    0x0102, 0xEB31, 0x100D, 0x4003, 0x3990, 0x11B1, 0x002B, 0x38A0,
+    0x8482, 0xAC11, 0x03E1, 0x04C3, 0xECFF, 0x8105, 0xFD5F, 0x5258,
+    0xED84, 0x0604, 0xCB52, 0xDBBB, 0xC94C, 0x2520, 0x8020, 0x0CE0,
+    0x218F, 0x42CF, 0xDC3E, 0xC65C, 0x7625, 0xF91E, 0xC2AF, 0xB02C,
+    0xD02D, 0xAEA1, 0x13D8, 0x4FA9, 0xD1EC, 0xDA91, 0xEE5D, 0xA107,
+    0x2247, 0xC673, 0x2604, 0x0155, 0x0C5B, 0xC650, 0xF800, 0xE04F,
+    0x0257, 0xA2A7, 0x8696, 0x00E8, 0x8E91, 0x24BB, 0x15CC, 0xB4EF,
+    0xC380, 0x9208, 0x08A1, 0xF70C, 0x5168, 0xFD07, 0xA290, 0x8433,
+    0xF246, 0xE953, 0x4737, 0xAC21, 0x0CFC, 0x6B20, 0x2028, 0x4B65,
+    0x63AC, 0x041A, 0x12FA, 0xA4F4, 0x6309, 0x8092, 0x5254, 0xD098,
+    0x6DA6, 0x40F7, 0x000A, 0xC48D, 0xC506, 0x32E0, 0x2A20, 0xC015,
+    0x1129, 0x6B00, 0x6669, 0x78CF, 0xE25D, 0xA00C, 0x3002, 0x1BDB,
+    0x815A, 0xE547, 0x04E8, 0xFC0F, 0x6621, 0x4003, 0x3D18, 0x029E,
+    0xD6E4, 0x2C6E, 0x92E3, 0x2439, 0xDC70, 0x7583, 0x1862, 0x848A,
+    0x35C9, 0x7DB8, 0x0444, 0x5ED7, 0xBE11, 0x0871, 0x2A3C, 0x0E68,
+    0x50E2, 0x4184, 0xE84F, 0xC606, 0xA7F0, 0x3988, 0xE305, 0x8B1F,
+    0x0176, 0x8003, 0xE928, 0xE23D, 0x10F0, 0x4691, 0x583C, 0x8132,
+    0xABC2, 0x4502, 0x1A80, 0x860D, 0x940B, 0x600F, 0x10A7, 0x4A36,
+    0x37C4, 0x0E8B, 0x7C77, 0x0511, 0xCDC8, 0x4080, 0x43A1, 0x9306,
+    0xCB68, 0x00C9, 0xD964, 0x4A18, 0x4200, 0x4B23, 0xFCC1, 0xF4A1,
+    0xEA3D, 0x92AE, 0x2181, 0xC09E, 0x0023, 0xBF9C, 0x0E01, 0xC819,
+    0xF0CD, 0xA2B9, 0xC0A2, 0x399F, 0x03A9, 0x11AC, 0xF82D, 0xBB68,
+    0x44E1, 0xF8D1, 0xF64C, 0xC489, 0x7E06, 0xCF1B, 0x4B8E, 0x0431,
+    0x34FA, 0xD554, 0x40D3, 0x8020, 0xF6DE, 0x2982, 0x8680, 0xCC35,
+    0x0E58, 0xD8E0, 0x7318, 0xC1B1, 0xD080, 0xD4A8, 0x114E, 0x0190,
+    0x7ED9, 0x8810, 0x8F1E, 0x4091, 0xE310, 0x7078, 0x007D, 0xC05E,
+    0x66CF, 0xAD73, 0x46E7, 0xE000, 0xEFD1, 0x3328, 0xF139, 0x40DC,
+    0x1820, 0x697A, 0x0BEC, 0x7552, 0x25E4, 0xE549, 0x34C5, 0x5D4E,
+    0x39E0, 0x2200, 0x0F78, 0xAF20, 0x6074, 0x43B8, 0xE848, 0x5F98,
+    0xC79C, 0xB64C, 0xC220, 0x2281, 0xB6E0, 0xE8DD, 0x06C6, 0x8008,
+    0xF40A, 0xFAB7, 0x20C4, 0x7180, 0x401B, 0xC521, 0xC98C, 0x2DC0,
+    0x0D50, 0x11B2, 0x7C02, 0x7401, 0x2308, 0x6750, 0xEBC5, 0xD17A,
+    0x0385, 0x3D55, 0x6887, 0x72E2, 0xC112, 0x4688, 0x73E3, 0x6F83,
+    0xC032, 0x1B4F, 0xD886, 0x6011, 0x0270, 0x6FB8, 0x843F, 0x8C1A,
+    0x34F3, 0x04E9, 0x6852, 0xC0F3, 0x23A1, 0x8E9D, 0x0F0C, 0x2267,
+    0x84D6, 0x0874, 0xEC9D, 0x23E0, 0x1066, 0x26D3, 0x92F4, 0x7F20,
+    0x9040, 0x6952, 0x080A, 0x4069, 0x4A08, 0x1A77, 0x2C96, 0xD538,
+    0x46D7, 0x6E22, 0x19EC, 0x47F0, 0x53E2, 0xDAB1, 0xC646, 0x2729,
+    0x05A7, 0x2512, 0x0D38, 0xD1F2, 0x8DC9, 0x005E, 0x0CB3, 0x21A2,
+    0x6F28, 0xF000, 0xCE54, 0x3CA7, 0xC024, 0x2361, 0x1A1D, 0x0159,
+    0x3674, 0x0EA7, 0x6422, 0x000B, 0x01C0, 0x3310, 0x6F1A, 0x7CC0,
+    0x4666, 0x30E4, 0x385E, 0xC438, 0x3AC3, 0x0A68, 0x0185, 0x20C1,
+    0x8A74, 0x4CBF, 0x0036, 0x882E, 0x8085, 0xEF5C, 0x728A, 0x1F36,
+    0xEA89, 0xC6C7, 0x980A, 0x080B, 0x3DE3, 0x00F0, 0x1BAF, 0x0A11,
+    0x3329, 0x610F, 0x0459, 0x2188, 0xC0A2, 0x8438, 0x0349, 0xDABB,
+    0x1264, 0x1140, 0x22A2, 0x689B, 0x287A, 0xDA08, 0xC8E7, 0x6211,
+    0x4F59, 0xBA54, 0x4441, 0xE1A0, 0xF21D, 0xD005, 0xC742, 0x400F,
+    0x4109, 0xDD39, 0x62E1, 0x4780, 0x1164, 0x1148, 0x0D4F, 0x5AD6,
+    0x8B03, 0x59D2, 0x391E, 0x37D7, 0x0B1A, 0x5A24, 0x1C32, 0x8A45,
+    0x8324, 0x8340, 0x2105, 0xD046, 0xE504, 0x0E97, 0xEC40, 0xE349,
+    0x0280, 0xB824, 0x28B8, 0x8169, 0x6B94, 0x0591, 0x88BA, 0xE949,
+    0x8206, 0x50C7, 0xC618, 0x7502, 0x8D08, 0x2983, 0xCCB0, 0x7795,
+    0x0329, 0x10F6, 0x5370, 0xF67A, 0xD8C6, 0x900D, 0xB7CD, 0x0919,
+    0xEFA3, 0x99DD, 0x3DC8, 0xF7DE, 0x6450, 0xF7EA, 0xB09F, 0x6181,
+    0x41AC, 0x1664, 0xA4E7, 0xB232, 0x1865, 0x8497, 0x40CF, 0x0861,
+    0xD22B, 0xC7CD, 0x9227, 0x7BE5, 0x3383, 0xCC17, 0x0393, 0x5027,
+    0xB187, 0x5221, 0x7E23, 0x9D3E, 0x6F20, 0x133E, 0x417A, 0x9D3C,
+    0x111D, 0x9759, 0x87B7, 0xEA08, 0x6026, 0x0A00, 0x837B, 0xE25B,
+    0xC2B6, 0x8605, 0x061E, 0x1B43, 0x5433, 0x0181, 0xBF06, 0x9F08,
+    0x3622, 0x7998, 0x007C, 0x3262, 0x3D5C, 0x303D, 0xF34C, 0x3DFE,
+    0x9E47, 0x0130, 0x1169, 0x7CC4, 0x2230, 0x9020, 0xBBEA, 0x5487,
+    0xD044, 0x1B28, 0x8B31, 0x63B5, 0x9E84, 0xA03D, 0x90EC, 0x8581,
+    0x203B, 0xC134, 0xFC35, 0x223E, 0xC90F, 0x2D60, 0x4963, 0x670B,
+    0x3F96, 0xE732, 0x2076, 0x6528, 0x81C3, 0x5D3F, 0x1A8C, 0x0060,
+    0xAD20, 0xC980, 0x2C21, 0x00C4, 0x3EE0, 0x9F21, 0x8ECF, 0xC851,
+    0x9037, 0x5C00, 0xE4C0, 0x3229, 0x074E, 0xDEFA, 0x5951, 0xC20C,
+    0x019E, 0xA0CC, 0x106C, 0xA5BF, 0x9018, 0x02F0, 0x7D8E, 0x7FFA,
+    0x6799, 0xF184, 0x884A, 0x5441, 0x3294, 0xB6F1, 0x3749, 0xDDB4,
+    0x0118, 0x0A74, 0x047F, 0x02DA, 0x959C, 0x403C, 0x30B6, 0xB6D1,
+    0x1643, 0x610C, 0x70EF, 0x4591, 0x1C4A, 0x9AC8, 0x1054, 0x6BB4,
+    0xE0F6, 0x3529, 0x0245, 0x690D, 0x6700, 0x1B0E, 0x35BE, 0xC9C4,
+    0x1068, 0xAD20, 0x0180, 0x2CDD, 0x20F1, 0xEA81, 0x6880, 0x2E0D,
+    0x8F1D, 0x9162, 0x24C0, 0x417F, 0x7982, 0xE4A2, 0x000E, 0xE74C,
+    0x5D8F, 0x4430, 0xC1D6, 0x6212, 0x6F79, 0x5E3C, 0x4200, 0x07D9,
+    0x5787, 0xEC35, 0x3105, 0xCA86, 0x3B24, 0xD0A4, 0xE052, 0x450F,
+    0x64B9, 0x179B, 0xBF84, 0x172C, 0x020F, 0x7752, 0x963C, 0xD18A,
+    0x11B1, 0x2F61, 0x7D8B, 0x05C2, 0x5A71, 0x5160, 0xB44B, 0xD847,
+    0x0438, 0x32C7, 0xACA1, 0xE7C9, 0x9002, 0x607B, 0x2420, 0x4C0F,
+    0x0885, 0x8EE8, 0x5439, 0x0242, 0x2B07, 0x00B0, 0x3806, 0x0686,
+    0x00E4, 0x6562, 0xDE10, 0x230C, 0xD082, 0xBEC4, 0x172C, 0x3EA3,
+    0xE313, 0x210C, 0x8C5E, 0xEFCB, 0x2088, 0x8203, 0xC04E, 0xF63A,
+    0x2F3A, 0xBEA5, 0xEC8D, 0x0106, 0x3B96, 0xCC48, 0x09E4, 0xA712,
+    0x3600, 0x4DB2, 0x58B7, 0x6321, 0xD5BE, 0xCF71, 0xCF8F, 0xAFBF,
+    0xE7B7, 0x5FD1, 0x1C37, 0xA432, 0xEFC5, 0xD120, 0x0092, 0xB819,
+    0xD039, 0x21DD, 0xA924, 0x3703, 0x2D03, 0x4246, 0xECE6, 0x4731,
+    0x05D8, 0xA602, 0x0579, 0x9790, 0x419D, 0x4121, 0x1C41, 0x00F0,
+    0x2AB1, 0x6220, 0x0086, 0x2C48, 0xE954, 0x8030, 0x0485, 0x75B2,
+    0x1B9A, 0xE880, 0x7EF1, 0x3416, 0x06E0, 0x5C72, 0xEE27, 0xC212,
+    0x8F6F, 0x189F, 0x0814, 0x6BD6, 0xE804, 0x48E3, 0x4F0C, 0x2825,
+    0x71E0, 0x1C9D, 0xFC06, 0x2490, 0x4A2C, 0x05E2, 0x18F6, 0x6A84,
+    0xA2CF, 0x8213, 0xC415, 0x00C8, 0x4094, 0x580B, 0xBC31, 0x7644,
+    0x2C40, 0xF90E, 0x6088, 0x6A78, 0xB538, 0x2A6E, 0x54BC, 0xA9E0,
+    0x5302, 0xF25F, 0x1A2C, 0x0440, 0x004C, 0x6979, 0xBDA0, 0xC16C,
+    0x57E2, 0x288D, 0xC0BF, 0xBCFA, 0x886E, 0x1587, 0xA0D0, 0xD113,
+    0xFC01, 0xEE40, 0x4165, 0x4788, 0x2CE0, 0xF164, 0x3183, 0x35BE,
+    0x3E72, 0xE420, 0x33C6, 0xF103, 0x4445, 0x86AF, 0xCC1B, 0x4400,
+    0x0A05, 0x2021, 0x8E24, 0x175B, 0xC78F, 0xC10F, 0x0204, 0x0016,
+    0x8630, 0x28F1, 0x36E8, 0x3889, 0xFDCD, 0x242C, 0x5037, 0x957B,
+    0xE0B0, 0x873F, 0x2614, 0x98E6, 0x7C54, 0x4A22, 0xA1A4, 0x188C,
+    0x4095, 0x443C, 0x902C, 0xD8D9, 0x7072, 0x8E65, 0x5047, 0xD20D,
+    0xE350, 0xE414, 0x180A, 0x217B, 0x2D4B, 0x14B9, 0x5468, 0x9003,
+    0xC1AA, 0x6008, 0x3419, 0xEA89, 0x4CC0, 0x068B, 0x4283, 0xAD90,
+    0xC779, 0xBF20, 0x488C, 0x2810, 0x04BD, 0x827C, 0x2090, 0xF850,
+    0x3802, 0x4421, 0x4080, 0x3420, 0x4508, 0xB050, 0x001E, 0x2E1A,
+    0x2F0A, 0x9721, 0x917C, 0x8891, 0xBA02, 0x2199, 0xD096, 0x1A84,
+    0x0700, 0x8FDC, 0x5E24, 0x097A, 0x1720, 0x6143, 0xB9D2, 0x474F,
+    0xA233, 0x516F, 0xD986, 0x06CD, 0xA397, 0x5643, 0x701E, 0x4103,
+    0x0707, 0x539A, 0x1889, 0xBA26, 0x0880, 0x8001, 0xA3F2, 0x2AAA,
+    0x21C1, 0x0D4B, 0x2894, 0x1D99, 0x2238, 0xB34C, 0x0526, 0xF453,
+    0x22C5, 0x3E00, 0x2BC9, 0x8F22, 0x0B9B, 0x23B7, 0x8C74, 0x0F44,
+    0x3620, 0xCE93, 0x6CB5, 0xBD04, 0x7806, 0x2048, 0x7780, 0x5401,
+    0x3293, 0x16E1, 0xF6AA, 0x7903, 0xD0C5, 0xECCA, 0x3204, 0x0786,
+    0x3B62, 0x7C7C, 0xD248, 0x5ECA, 0x2B10, 0x07C1, 0xE704, 0x7B79,
+    0x5730, 0x83BF, 0x09BE, 0x180A, 0x10F6, 0xF9A1, 0x868C, 0x7629,
+    0x3086, 0x1D65, 0xF026, 0x10F3, 0x6C20, 0xEF5F, 0xC19C, 0x83C5,
+    0xA7C3, 0xCE0C, 0x67A4, 0x5888, 0xB920, 0x6100, 0x7036, 0x8D72,
+    0xF497, 0x0AC9, 0x702B, 0xC1D7, 0x45DC, 0x93C4, 0x0283, 0x4058,
+    0x480D, 0x0558, 0x1644, 0xCA0A, 0x68C8, 0x5DF2, 0x43E1, 0x0001,
+    0x12E3, 0x5836, 0x53DA, 0x5007, 0x3CDA, 0x020B, 0x7B02, 0xEC42,
+    0xD3DC, 0x0C25, 0xC2A1, 0xC7AE, 0x78C4, 0x200B, 0x8F73, 0x27BE,
+    0xBECC, 0x6203, 0x89A0, 0x6370, 0x4A32, 0x7C27, 0x27C0, 0x6DE8,
+    0xE441, 0x0DBE, 0xBC7C, 0x78D8, 0x2070, 0x9D16, 0x0390, 0x144F,
+    0x98C8, 0x0525, 0xF010, 0x3303, 0xC4F8, 0x10C8, 0x3A60, 0x1478,
+    0x04D0, 0xEE41, 0x029D, 0x1040, 0x48B7, 0x6C02, 0x0305, 0x7D87,
+    0x8271, 0x8B77, 0xA210, 0x5415, 0xAC70, 0x0001, 0x5ACD, 0x0004,
+    0x1514, 0x0A0E, 0xAD2A, 0x1D97, 0x1C40, 0x3EFE, 0x9A30, 0x07DE,
+    0x21A7, 0x99E0, 0x40C7, 0xA99D, 0xCAC4, 0x6007, 0x0440, 0xC1C1,
+    0xEBBC, 0x940B, 0x8244, 0x0D38, 0xA6B2, 0xA9E1, 0xF631, 0xF896,
+    0x00A0, 0x46C0, 0x107F, 0x977D, 0x09A8, 0x34DC, 0x2C5E, 0x4017,
+    0x4D75, 0x8D61, 0x081A, 0x074D, 0xA061, 0xCF02, 0x0082, 0x24E1,
+    0x012B, 0x004F, 0x516C, 0x47B8, 0x0990, 0xA255, 0x5031, 0x4155,
+    0xC1DC, 0xF7C4, 0x2F02, 0x6544, 0x3078, 0x759C, 0x443A, 0x0020,
+    0x192E, 0x1577, 0x02AC, 0x88A0, 0xAD86, 0xC003, 0xF0EA, 0xB179,
+    0x8F24, 0x8040, 0x8B17, 0xB0EE, 0x3DA3, 0x7708, 0xDA16, 0x03FE,
+    0xDB10, 0x10EC, 0x1000, 0xE523, 0x7A88, 0x0660, 0x8006, 0xD002,
+    0x4B81, 0x5E2D, 0x8410, 0x17C4, 0x6024, 0x3483, 0x45C6, 0x7550,
+    0xEB41, 0x0410, 0xCD2B, 0x2C61, 0xF0C4, 0x900A, 0x647A, 0x1880,
+    0xB890, 0x7880, 0x5B05, 0x5903, 0x6549, 0x600C, 0x1E44, 0x5D36,
+    0x1012, 0xA9C7, 0xC258, 0xD200, 0x00D3, 0x08F8, 0x2DB0, 0x8024,
+    0x00E9, 0xA8BC, 0x43C5, 0x3915, 0x9369, 0xE103, 0x1305, 0xC62B,
+    0x89C6, 0xD3EF, 0x25AF, 0xDB12, 0x02D4, 0x0A9A, 0xAB07, 0x1F6A,
+    0xCC1F, 0x76BA, 0x8D05, 0x3004, 0xBE04, 0x3BDF, 0xA44A, 0x31D8,
+    0x021D, 0xBA40, 0x7C43, 0x00A7, 0xD4B1, 0x2261, 0x8EDB, 0x67D1,
+    0x0534, 0xB07B, 0x4020, 0x4050, 0x0EF1, 0x8008, 0xC83C, 0x7C83,
+    0x4387, 0xC31B, 0x263B, 0x8406, 0x9F80, 0xA708, 0x26EA, 0xA6C2,
+    0x02FB, 0x3588, 0x491F, 0x0DED, 0x0F8B, 0x7108, 0x7028, 0x00E1,
+    0xD802, 0x2F85, 0x01BA, 0xFC72, 0xBC2C, 0x69E0, 0x75C7, 0x4088,
+    0xB480, 0xBDED, 0xB22C, 0x8026, 0x8052, 0x060A, 0x40C6, 0x7F71,
+    0x52F1, 0x882D, 0x2810, 0xF959, 0x4CBB, 0x4B48, 0x468B, 0xC986,
+    0xF241, 0x00BC, 0xA9B8, 0x395D, 0xE207, 0x0DE4, 0x9886, 0x3744,
+    0xA430, 0x9002, 0x2761, 0xA609, 0xEE04, 0x04F5, 0xB636, 0x0B2F,
+    0x7F76, 0x0D9E, 0xCECE, 0x6801, 0xE9D3, 0x60AE, 0x423C, 0x05C0,
+    0x4CA9, 0xC2B4, 0x209D, 0x5496, 0x9F14, 0x4D18, 0xC480, 0x8027,
+    0x52EC, 0x24E8, 0x4BD9, 0xCEF3, 0x0800, 0x59A2, 0x85A7, 0x4074,
+    0x343B, 0x9DB0, 0x7CFB, 0x7824, 0x8171, 0xAE5F, 0x1DB6, 0xA444,
+    0x1F70, 0x3516, 0x9030, 0xBBD1, 0x10B4, 0x4244, 0x2597, 0xB328,
+    0xDFDC, 0x0028, 0x6DE8, 0xE191, 0x3809, 0x13C8, 0x503D, 0x80C9,
+    0x9923, 0xA011, 0xCC37, 0x1CDC, 0x0101, 0x3843, 0x20E6, 0x0C08,
+    0x8879, 0x0687, 0xB017, 0xB032, 0x9481, 0x23CB, 0xC280, 0xA278,
+    0x7B8E, 0x6448, 0x4010, 0xF206, 0xFC46, 0x3C60, 0x346A, 0x4789,
+    0xEA68, 0x1F43, 0x88D5, 0xE519, 0x043D, 0x8EF4, 0x3439, 0x3013,
+    0x58A2, 0x3E0E, 0xBD10, 0xE7CE, 0xF942, 0x1467, 0x1D90, 0xF608,
+    0xE72D, 0x2121, 0x2CE9, 0x5138, 0xE969, 0xF711, 0x5146, 0x8848,
+    0xAA66, 0x900C, 0x3CEA, 0x4A20, 0x7845, 0x2B68, 0xB18E, 0x4402,
+    0xB868, 0xBCA2, 0x163D, 0x8303, 0x3A2F, 0xF101, 0x21C4, 0x011A,
+    0xFA61, 0x9061, 0x8BB3, 0x5D44, 0x41F1, 0x1170, 0x8859, 0xF7C6,
+    0x1FF5, 0x0F78, 0x8A26, 0x81A9, 0xF024, 0xB99C, 0x1E6D, 0x421F,
+    0x0EA0, 0x8F6D, 0xA008, 0x157C, 0x491E, 0x0178, 0x1622, 0xF714,
+    0x4896, 0x8507, 0x9583, 0x0C81, 0x18BC, 0x45DC, 0x601F, 0x9581,
+    0x8C01, 0xF5D3, 0x3A07, 0xA00D, 0xA6ED, 0x1038, 0xBE14, 0x353A,
+    0xA251, 0xFA5A, 0xDC4C, 0x21CC, 0x2A20, 0x3DBD, 0x6633, 0x110E,
+    0xC5C4, 0xC260, 0x7A00, 0xEA0D, 0x1340, 0xBC09, 0x384F, 0xC8F5,
+    0x99A9, 0x4697, 0x970A, 0x8445, 0xC064, 0x2030, 0xFE20, 0x79A6,
+    0x6110, 0x3100, 0x8C30, 0xF16D, 0x5240, 0x3060, 0x306D, 0x37E2,
+    0x51F8, 0x1030, 0x4B04, 0x3B5E, 0xE042, 0x1111, 0x800C, 0xD12B,
+    0xC913, 0x800B, 0x05D1, 0x340A, 0xE220, 0x60F3, 0x5081, 0x1100,
+    0x4FC1, 0x3425, 0xE3B5, 0xB1F7, 0x23A8, 0xC289, 0xEE44, 0x8C05,
+    0xD8C2, 0x300B, 0x273F, 0x959E, 0x4FCA, 0xE9E5, 0xDDD3, 0xA7EA,
+    0x34F2, 0x1040, 0xA1BF, 0xCE79, 0xA201, 0x78DA, 0xFC48, 0x2070,
+    0x070C, 0x0823, 0x0862, 0xF056, 0x9880, 0x44D0, 0x9869, 0x93BE,
+    0x7B91, 0x2EDB, 0x791F, 0x1B67, 0x89B4, 0x5197, 0x4471, 0x0630,
+    0x79EE, 0x54AB, 0x3048, 0xBF2B, 0x3F9D, 0x3100, 0x34D0, 0x257D,
+    0xBD50, 0x3BE6, 0xA98E, 0x474E, 0x5FA0, 0x951B, 0x76F8, 0x931D,
+    0x1D54, 0x36BB, 0x1F02, 0x130F, 0x80FC, 0xCCE1, 0x263B, 0x6ABC,
+    0x7D2D, 0xC420, 0x0944, 0x5A83, 0x3DF2, 0xC625, 0x8861, 0xDB74,
+    0xC268, 0x1112, 0xB532, 0xC3CA, 0x585E, 0x4FA3, 0x23A0, 0xF1F0,
+    0x18D2, 0x66B9, 0x0C81, 0xA03F, 0x81A6, 0xD033, 0x9A54, 0x2000,
+    0xB77B, 0x1878, 0xE598, 0x830E, 0x0B92, 0x5D56, 0xFA24, 0x8825,
+    0xF047, 0xC8F0, 0x1CF2, 0x30CB, 0x1048, 0x10F0, 0x1814, 0x9AA3,
+    0x87BC, 0x4FC4, 0x0F24, 0x412D, 0x0850, 0x825E, 0x783A, 0x104B,
+    0xC01F, 0xA5E3, 0xB4C3, 0x0352, 0xF007, 0xFA00, 0x2783, 0xF00B,
+    0xC01F, 0xC61A, 0x701E, 0xC202, 0x35A8, 0x65B9, 0xD18F, 0xB6A5,
+    0xC898, 0x3C0B, 0xFCB8, 0x01F0, 0x72F9, 0x1A02, 0xF8EE, 0x4C74,
+    0x94F9, 0x1A03, 0x2638, 0xB1EF, 0xECD2, 0x04FA, 0x2BF4, 0xB77E,
+    0x0332, 0x77A9, 0x8222, 0x849E, 0xE7D4, 0x3F00, 0x8622, 0x680B,
+    0xBE01, 0x0B22, 0x22E4, 0x8967, 0xA9E9, 0x445A, 0xB2C8, 0xC8CC,
+    0x7B18, 0x1200, 0xBB66, 0x1041, 0x1EA5, 0xBA1E, 0xCEB6, 0x1D6B,
+    0xB88A, 0x4050, 0x8E10, 0x13FE, 0x6559, 0x1083, 0xC021, 0xE916,
+    0xA0D4, 0x711A, 0xA278, 0x305F, 0x5F40, 0x0428, 0x81E0, 0x1104,
+    0x45A8, 0x5170, 0xF735, 0xE174, 0x94F1, 0x5A04, 0x2465, 0x4B81,
+    0x82FC, 0xA043, 0x4FB0, 0x2232, 0x7390, 0x0042, 0xC861, 0xEDDC,
+    0x042B, 0x5818, 0xE0CC, 0x63EC, 0x6741, 0x2481, 0x2831, 0x007B,
+    0x3331, 0x22C8, 0x1234, 0x3D53, 0x203E, 0x88FC, 0x1190, 0x7818,
+    0xBBE7, 0xA8B6, 0x0192, 0x9080, 0xF032, 0xC601, 0x254F, 0x51EB,
+    0xB7F2, 0x0BFE, 0x00D7, 0x33D3, 0x8C58, 0xCE87, 0x5049, 0x0EA3,
+    0x0D13, 0x03D3, 0xA0E4, 0x0514, 0x4180, 0xC1E0, 0x1373, 0x0750,
+    0x326A, 0x14BE, 0x0F13, 0x3084, 0xD106, 0xBA4C, 0x9488, 0x9083,
+    0xC026, 0x281A, 0x0139, 0x11D2, 0x4123, 0xDF28, 0xC40E, 0xFAC1,
+    0xB082, 0x0DE7, 0xDD00, 0x04D9, 0x0C37, 0x40A2, 0x1B83, 0x0E9C,
+    0x181F, 0x2079, 0x0840, 0x6AB1, 0xE013, 0x1323, 0xD206, 0x6839,
+    0x7AC7, 0xCC68, 0x6001, 0xA08F, 0x8390, 0x4490, 0x0640, 0x91DF,
+    0xD573, 0x4218, 0x2380, 0x1076, 0x7421, 0x003C, 0x1F00, 0x8E66,
+    0xC109, 0x7B9D, 0x40DC, 0x3610, 0x422C, 0x23A0, 0xFA20, 0x20C4,
+    0x47C0, 0x2007, 0xB4A5, 0x0897, 0xA0F6, 0x112F, 0x8CF6, 0x084D,
+    0xC360, 0x0B69, 0x722C, 0xF301, 0x6327, 0x2842, 0x61F1, 0x9D09,
+    0x01C1, 0x1178, 0x8F80, 0x4490, 0xB120, 0x1A27, 0xB780, 0x5707,
+    0xC0A5, 0x23B5, 0xB810, 0x03DF, 0x9E83, 0xE015, 0xA445, 0x65A0,
+    0xDCA3, 0x80B1, 0x5885, 0x6053, 0x4032, 0xEF96, 0xF1D8, 0xC704
+};
+
+static const u16 ap1302_fw_bootdata7[ ] = {
+    0x8000,
+    0xF4F6, 0x8440, 0xFB09, 0x28BD, 0xE0C0, 0x6728, 0xEDD7, 0x7983,
+    0xE007, 0x62F0, 0x09B1, 0x80FE, 0x69F1, 0x1E06, 0x8681, 0x8BE8,
+    0x8901, 0x080D, 0x6383, 0xC026, 0xAA8E, 0x0A02, 0x037F, 0x0097,
+    0x0963, 0xE013, 0x454A, 0xB522, 0x9D81, 0x4BDD, 0x8E45, 0xE013,
+    0x5549, 0xD502, 0x67D1, 0x5182, 0x100E, 0xA45F, 0x7B1A, 0x0881,
+    0xE00E, 0x3430, 0x2005, 0x58A0, 0x7811, 0xB445, 0x1EC7, 0x4016,
+    0x0394, 0x0404, 0x75D3, 0x689A, 0xE609, 0x2E02, 0x6A65, 0xA7C0,
+    0x26A7, 0xE7F0, 0xA100, 0xBBD8, 0xB887, 0x6F00, 0x9A11, 0x9287,
+    0xB3D9, 0x8658, 0x0789, 0x59B3, 0x9E8F, 0x804C, 0xC800, 0x358B,
+    0x5F00, 0x9936, 0x581E, 0xC9FB, 0xEC30, 0x582A, 0x122B, 0x9816,
+    0xEC0A, 0xF4F5, 0xE4B1, 0x7804, 0xCD51, 0x3D22, 0x6D5B, 0x8AB8,
+    0xD0F3, 0x2815, 0x3427, 0x0278, 0x963E, 0x0131, 0x43A7, 0x0184,
+    0x0EED, 0xE701, 0x178D, 0x1277, 0x7532, 0x11AC, 0x0027, 0xCD90,
+    0x43C0, 0x26A6, 0x05A8, 0x9A04, 0xCF48, 0x7509, 0x29BB, 0xAA88,
+    0x03DD, 0x8D44, 0x0B92, 0x07B0, 0x21E0, 0x1374, 0x0D12, 0x554F,
+    0x7C44, 0x3327, 0xDB03, 0xC915, 0xE6F1, 0x51BE, 0x9410, 0x05E0,
+    0x1343, 0xED26, 0x9186, 0x32A5, 0x3D6E, 0x5890, 0x5D28, 0x5E83,
+    0x0151, 0x5E5F, 0xF9F7, 0x4CBD, 0xB936, 0x64F7, 0x5C2D, 0x8F87,
+    0x788C, 0x0711, 0x708A, 0x477F, 0x5497, 0x4B08, 0x1EF6, 0x7425,
+    0x8073, 0xE677, 0x219A, 0x8879, 0x8331, 0xEF43, 0xD25B, 0x5322,
+    0x25D0, 0x61C1, 0x2448, 0x5AF7, 0x9E89, 0x7BCF, 0x3C8D, 0x01D7,
+    0x6D65, 0x31D2, 0x0846, 0xA240, 0x3534, 0x073D, 0xAE64, 0x5828,
+    0x0A0F, 0x8316, 0x48D1, 0x1AFC, 0x00BC, 0x2202, 0xB152, 0x814D,
+    0x1748, 0x8780, 0x3204, 0xB240, 0x86D0, 0xBA97, 0x8031, 0xCBB0,
+    0xD684, 0xD11A, 0x0811, 0x83BB, 0x930C, 0x4A29, 0xC000, 0x63C0,
+    0x18E8, 0x80C5, 0x6860, 0x1078, 0x0198, 0xBA35, 0x8083, 0x0003,
+    0xC012, 0x4B88, 0x4ADE, 0xBBA5, 0x1344, 0x529C, 0xD9A8, 0x7014,
+    0x4A83, 0x03C0, 0x11EE, 0x00C2, 0xECD2, 0x8639, 0xC44D, 0xA43D,
+    0xF56A, 0xB1F5, 0xE2BF, 0x830E, 0x825C, 0xF1D4, 0x7C01, 0x2098,
+    0xA8A3, 0xE008, 0x5308, 0xFC01, 0x0426, 0x0663, 0x8080, 0x3E00,
+    0x704B, 0x0D29, 0x3807, 0x3B65, 0x0904, 0x7E00, 0x6D11, 0xF81D,
+    0xF003, 0x7101, 0xC3D4, 0xEA0C, 0x1143, 0x383F, 0xE006, 0xF5A1,
+    0x0033, 0x21B3, 0xED84, 0x1105, 0x4030, 0x3CBD, 0x2908, 0x209F,
+    0x8590, 0x89E2, 0x6E01, 0x0088, 0x4C02, 0xF4F0, 0xC101, 0x0135,
+    0xDB24, 0x0713, 0xD5AC, 0x0136, 0x9148, 0x40B3, 0x0818, 0xCF7A,
+    0x3340, 0x25EC, 0xD7A2, 0xF843, 0x2449, 0x0F70, 0xEC0F, 0x801D,
+    0x1302, 0xCA28, 0xF21D, 0xFBD4, 0x60FA, 0xE17C, 0x426D, 0x3CD0,
+    0xF801, 0x40C0, 0xB228, 0x18D7, 0x3E1B, 0x00CA, 0x2058, 0x940C,
+    0x1409, 0xF82C, 0x90D8, 0xEC56, 0x0402, 0x6233, 0x87B7, 0x1B02,
+    0x597A, 0x8F7D, 0x5F16, 0x0462, 0x0989, 0x0D17, 0xD281, 0x30A9,
+    0x9DF8, 0x5042, 0x4023, 0xE00E, 0xE212, 0xFBF4, 0xA044, 0xBF08,
+    0xD416, 0xCA64, 0x225F, 0xB614, 0x0A08, 0xB428, 0x4225, 0x958C,
+    0xF7F8, 0x221A, 0xE022, 0x028E, 0x29D0, 0xBE02, 0xF838, 0x7235,
+    0x93F8, 0x02B0, 0x7C00, 0xD480, 0x81E9, 0xFE61, 0x0436, 0x0702,
+    0xCF84, 0x43C0, 0x0E49, 0x3053, 0x861A, 0x0EA4, 0x706B, 0x8061,
+    0x9BDE, 0xB5DC, 0xC23A, 0x851C, 0x0114, 0x4170, 0x5FBF, 0xF847,
+    0x1EB8, 0x9809, 0x7674, 0xE096, 0x3972, 0x8578, 0x2018, 0xE07E,
+    0xB144, 0x7CDB, 0x8020, 0xFE8C, 0xCC76, 0x8532, 0x200D, 0x6EFC,
+    0xBE1B, 0x1201, 0x2C3D, 0x77E6, 0x28E1, 0xB58E, 0xFFE2, 0x1EDF,
+    0xF93B, 0xA700, 0xBF21, 0x4402, 0x2020, 0x02BB, 0xFF68, 0xC175,
+    0x03D8, 0x12F0, 0xFA18, 0x975D, 0xFFB0, 0x9940, 0x9EF4, 0xCE20,
+    0x18E4, 0x146F, 0x4C03, 0xE1AA, 0x6218, 0x0B04, 0x0033, 0x2FD9,
+    0x5613, 0xDFFB, 0x2331, 0x1828, 0x6815, 0xC9F4, 0x7620, 0x904E,
+    0x8582, 0x454F, 0x7FE7, 0xA6D3, 0x06F9, 0xC240, 0x93C2, 0x91EC,
+    0x7210, 0xBE76, 0xC73F, 0x046D, 0x904A, 0x2104, 0x224F, 0x8537,
+    0xA7BF, 0xDE47, 0x661C, 0x1C37, 0xE343, 0xC0E3, 0x384D, 0xC1C6,
+    0x6923, 0x7073, 0x832C, 0x1AC1, 0xE773, 0x121C, 0x41BC, 0x52A0,
+    0x7800, 0xE6D6, 0x41E9, 0x6274, 0x006C, 0x710E, 0xCD22, 0x57A7,
+    0x8344, 0x16C8, 0x3812, 0x0346, 0xAC20, 0x179E, 0xEF88, 0x22F2,
+    0x3562, 0x1875, 0x8028, 0x06C7, 0xA280, 0x82E9, 0x4F51, 0x1ECA,
+    0x0208, 0x1BC2, 0xE404, 0x102D, 0xE808, 0xB1CA, 0x0C1C, 0x0583,
+    0xBF7A, 0x8B86, 0x5070, 0x9086, 0x910D, 0xB89B, 0x0F02, 0x2210,
+    0xA3AA, 0x5484, 0x96C0, 0xD03D, 0xFE1E, 0x981F, 0xA382, 0x1DF1,
+    0x5A88, 0x1EFF, 0xA41F, 0x6909, 0x8F68, 0x680F, 0x7B6F, 0x081B,
+    0xD882, 0x43EF, 0x0D91, 0xC586, 0x0687, 0x8812, 0x4478, 0xC852,
+    0x126B, 0x0141, 0x8963, 0x8856, 0x3901, 0x7D74, 0x4086, 0x0444,
+    0x445B, 0x8584, 0x18F6, 0xD06A, 0x0181, 0x3205, 0x9856, 0x6710,
+    0xAEF7, 0x011B, 0x4291, 0x0034, 0x00EF, 0xED31, 0x2F82, 0x0908,
+    0xD43B, 0x77DE, 0x81EF, 0x3E02, 0x02F7, 0xDC20, 0xF458, 0x10B0,
+    0x7082, 0x6381, 0x4040, 0xD3A0, 0xEFB8, 0x6361, 0xB370, 0x7583,
+    0x31DD, 0x33D3, 0xB7CB, 0xC890, 0xC909, 0x1F2D, 0xBD0B, 0x1DA7,
+    0x8E23, 0xC0D8, 0x1176, 0x0198, 0xEC51, 0x73E7, 0xA231, 0xF65A,
+    0xA0EF, 0x4F23, 0xDE9F, 0x6226, 0x9B25, 0xB81A, 0x0D03, 0x2501,
+    0x7245, 0xF9A5, 0x6503, 0x637B, 0x032C, 0x40A3, 0xE5CE, 0xA1C1,
+    0x3600, 0x3FB7, 0x2608, 0xA0DF, 0x0A87, 0xD596, 0x4406, 0xFC15,
+    0x3E40, 0xA840, 0x48EE, 0x0022, 0x4116, 0xC0CE, 0xDAD2, 0x2501,
+    0xB011, 0x9E20, 0xA9D4, 0x539D, 0x013D, 0x6C91, 0xA21E, 0xF4CC,
+    0x9D7A, 0x33DC, 0x402D, 0xD220, 0x5A34, 0xC402, 0x273D, 0xC240,
+    0x338F, 0xD467, 0x03DF, 0xED27, 0xE02C, 0xC2EF, 0xFFD5, 0x0D10,
+    0xEBCD, 0x1342, 0x6E37, 0x187D, 0xFFF8, 0x91E9, 0x5501, 0xDFFF,
+    0xA20E, 0x02C8, 0x9076, 0x382C, 0xE481, 0x30CE, 0x2A02, 0x6790,
+    0x25DF, 0x9EE3, 0xE071, 0x719C, 0x9034, 0x429B, 0x9780, 0x7914,
+    0xD1EF, 0xF542, 0xF2EA, 0x589C, 0x0C0E, 0x6816, 0xDDFF, 0xE820,
+    0xDCB1, 0xD045, 0x20B0, 0xF6F4, 0xF059, 0x31E9, 0xD401, 0x183B,
+    0x32A0, 0x7BFD, 0x74FD, 0x4C16, 0x2703, 0x0391, 0xE04D, 0x56F2,
+    0x62BA, 0x9106, 0x5C23, 0xC817, 0x42C4, 0xBD11, 0x2C16, 0xEFFE,
+    0x544D, 0x203E, 0xCE80, 0x4504, 0x1E11, 0x163B, 0xF886, 0xFFA4,
+    0x7C11, 0xD45D, 0x80CA, 0x2131, 0x50CE, 0x4111, 0x6008, 0x419C,
+    0x0043, 0xC5E7, 0x2C26, 0x2D1A, 0x2B11, 0xB740, 0x0F3E, 0x05C6,
+    0x1A9B, 0x0E92, 0x9410, 0x0EA7, 0x4BD9, 0x7E45, 0xDFE2, 0x2208,
+    0x020C, 0x6301, 0x0EBE, 0x5422, 0xE848, 0x2A2A, 0x6CB8, 0x0C21,
+    0x0010, 0x8222, 0x7646, 0xD084, 0x7536, 0x974B, 0xBE17, 0x8001,
+    0x0446, 0x4E18, 0xD910, 0x1504, 0x5ECB, 0x5930, 0xDB60, 0xCE42,
+    0x8CA2, 0x1DA1, 0xE000, 0x3478, 0x1278, 0xF675, 0x68F6, 0xF37C,
+    0xF98B, 0x844A, 0xBD19, 0xFCED, 0x6205, 0x3898, 0xD878, 0x7689,
+    0x50F2, 0x9351, 0x0109, 0x61E8, 0xE3E1, 0xF0C2, 0x7512, 0x3291,
+    0x00A7, 0xC110, 0xCBA1, 0x22FB, 0x9130, 0xFA32, 0x947D, 0x872E,
+    0x4004, 0xF088, 0xE280, 0x1110, 0x67FA, 0x90E1, 0x6E42, 0xCD91,
+    0x1687, 0x2EC2, 0xC62B, 0x7288, 0x2D77, 0xD896, 0xC0C7, 0xB94C,
+    0xD0B8, 0xD120, 0x3CF2, 0x0BCC, 0x0F52, 0xC817, 0x4EF4, 0x0828,
+    0x0A77, 0xF7F2, 0x5E0B, 0x1D36, 0x3C3D, 0xB23C, 0x090C, 0x6FDA,
+    0x3D6C, 0xB880, 0x3E9C, 0xA42D, 0x3E68, 0xF7F7, 0xF902, 0x6A40,
+    0x6A68, 0xA977, 0x2CA9, 0x7851, 0xC0BB, 0xFBFC, 0x8173, 0x6C76,
+    0x05A2, 0x8BC3, 0x9AC5, 0xE97F, 0x1238, 0x001F, 0x0FAE, 0x11A0,
+    0x6B77, 0xF7E9, 0x5A3C, 0xBBFB, 0xFCBA, 0xEBBC, 0x4051, 0xC86A,
+    0xEFEF, 0xD438, 0x05E8, 0xF798, 0x00F7, 0xF7EA, 0x1B58, 0x8883,
+    0x00B9, 0x9CC0, 0x2BDD, 0x7402, 0x289A, 0x466F, 0x9BFD, 0x90EC,
+    0x6331, 0x0087, 0x903F, 0xBFBD, 0x579D, 0x6003, 0x2E84, 0x834C,
+    0xC673, 0xAC10, 0x7200, 0x92C7, 0xEC05, 0x1799, 0x1E47, 0xB2AF,
+    0x27C6, 0xCB62, 0x0077, 0xE5E1, 0x5CCA, 0x167F, 0x108B, 0xBFBE,
+    0x0F7D, 0xE016, 0x4042, 0x0102, 0x9FE1, 0x2D31, 0x103B, 0xF98C,
+    0xA403, 0xD332, 0xE45A, 0x9003, 0x04A0, 0x0F02, 0x63C3, 0xE4C2,
+    0x09ED, 0x6582, 0x0BEB, 0x0C44, 0x91EC, 0x6D73, 0x003C, 0xE9A8,
+    0x4537, 0x760F, 0x977F, 0x5626, 0x0FB1, 0xE9F8, 0x911D, 0x37EB,
+    0x2118, 0x2C9E, 0x8601, 0x52B2, 0x808C, 0x0780, 0xA5E2, 0x24D1,
+    0x3465, 0x690F, 0x0112, 0xB00A, 0xCBB0, 0xB146, 0xB642, 0x586D,
+    0x3032, 0x280C, 0x2780, 0x6C68, 0x12E6, 0x892E, 0x6913, 0x1930,
+    0x2583, 0xA4AF, 0x9502, 0x4840, 0xD14C, 0x9F87, 0xE148, 0x82EF,
+    0xF021, 0xDDA7, 0x0BAB, 0xDC44, 0x31D0, 0x2F8F, 0x0ABA, 0x110F,
+    0xBFC1, 0xC814, 0x509D, 0x8872, 0xD1E6, 0x0C49, 0x1EC6, 0xEEE7,
+    0x4247, 0x9006, 0x0FFA, 0xE7F4, 0x84DC, 0x4683, 0x4084, 0x8218,
+    0x3C03, 0x6097, 0x96CF, 0x4A76, 0x11C6, 0xA08B, 0xE10E, 0xD30A,
+    0x87FA, 0x8440, 0x2395, 0x9808, 0xA01F, 0xA2ED, 0xD018, 0x0170,
+    0x03C0, 0x2309, 0x7549, 0x914A, 0x8470, 0xF0BC, 0x388D, 0xBD1B,
+    0x723D, 0xFDF4, 0x7D95, 0xB25B, 0xAD40, 0x8C13, 0xE960, 0x4832,
+    0xA7A4, 0x7C0B, 0x1368, 0x68B7, 0xC805, 0x3B50, 0x383B, 0xFBF1,
+    0x0034, 0xA60B, 0xF5E1, 0x87E6, 0x4782, 0xEFEF, 0xD318, 0x8760,
+    0x5144, 0x0523, 0x966A, 0x8BFD, 0x9336, 0x5AF4, 0x91EF, 0xEFC1,
+    0xF0DB, 0x0904, 0x7DFD, 0xF479, 0x5EC6, 0x6033, 0xEF9B, 0x32ED,
+    0xA124, 0x2E30, 0x0CEF, 0xF1EF, 0xEFA3, 0xDAEA, 0xC411, 0xEFEF,
+    0xB183, 0x0041, 0x81B1, 0x32D0, 0x8051, 0x04CC, 0xA71D, 0x4752,
+    0xAE03, 0x5701, 0x1E21, 0xE5F4, 0x8B03, 0x74BD, 0x66E0, 0x5073,
+    0x1E4A, 0x3822, 0xAED8, 0xC44B, 0x01AD, 0xC945, 0x51C1, 0xDFDF,
+    0x6C8F, 0xA688, 0x5E44, 0xF90C, 0x2886, 0x0703, 0xCCD3, 0x0B37,
+    0xEC52, 0x04FA, 0x68B5, 0x0EFE, 0xD94F, 0xBFB5, 0xD519, 0x4D10,
+    0x88D2, 0x08A6, 0x548D, 0x3089, 0x3EFE, 0xF06B, 0xBF58, 0x0E61,
+    0x13C4, 0xE734, 0x4189, 0xB841, 0x6523, 0xABBF, 0xB491, 0x1154,
+    0x841C, 0x0848, 0x77F9, 0x51E4, 0x5023, 0x8130, 0xF023, 0x17B7,
+    0x1D08, 0x9CD0, 0x1921, 0xE0B7, 0x04BB, 0xFCB1, 0x2D2D, 0x4190,
+    0x88DC, 0xF458, 0x1808, 0x2682, 0x22F3, 0xBFBE, 0x1105, 0xD481,
+    0x3F33, 0x7211, 0x222A, 0xFAE4, 0x108A, 0x9E97, 0xA82D, 0x1289,
+    0x5050, 0x36E6, 0xF890, 0x21DF, 0xDF65, 0xA499, 0x2F21, 0xCD99,
+    0x2185, 0x487B, 0xFBF8, 0x7E10, 0x2A96, 0x0A20, 0x0140, 0x723C,
+    0x8B95, 0x1A23, 0xB026, 0xE4DF, 0xEFEF, 0xD137, 0xFDFE, 0xA446,
+    0xC66F, 0x0187, 0xFB18, 0x1199, 0x1E14, 0xB922, 0x604D, 0x1E82,
+    0xCEFF, 0x0323, 0xBC04, 0x2604, 0x7EFE, 0xF411, 0x0F77, 0xF428,
+    0x6111, 0x9210, 0x9075, 0x30EE, 0xFE61, 0x63B7, 0xB4C5, 0xC049,
+    0x4845, 0x41DC, 0x5820, 0x9812, 0xF61A, 0x1183, 0x0129, 0x03C9,
+    0x4266, 0x0002, 0x604E, 0x1E82, 0xCEFE, 0xFD44, 0x2C34, 0x8B2E,
+    0xFEFE, 0x2208, 0x407A, 0x03D5, 0x0A20, 0x204D, 0x0050, 0x09FB,
+    0xB3FC, 0x7BFB, 0x10C8, 0x760B, 0xC3DB, 0x63AF, 0x33C8, 0x02A7,
+    0x417C, 0x7897, 0x1689, 0x2BD7, 0x90F6, 0x6B49, 0x941D, 0xFD8E,
+    0xD762, 0xBB10, 0x7202, 0x8FFD, 0xD425, 0x2780, 0xFC04, 0x0920,
+    0x08A2, 0x09F7, 0xF74A, 0x7E67, 0x0510, 0x0BBF, 0xBAD0, 0x2A82,
+    0x0F2E, 0xDB15, 0xECE9, 0x4C86, 0x472F, 0xB0B8, 0x8C05, 0xAD40,
+    0xA979, 0xFB20, 0xBBFB, 0xA571, 0x3B6C, 0xAA26, 0x7CFD, 0xA683,
+    0x47AA, 0x2419, 0x80D8, 0x3E55, 0xD320, 0xC1AE, 0x3A5E, 0xA400,
+    0x8F7F, 0x7426, 0x0BA0, 0x08AC, 0x13DC, 0xC345, 0x8EFE, 0xE740,
+    0xD21C, 0x4234, 0xAFE2, 0x0EE5, 0x0A16, 0x44AD, 0x8FA8, 0xB151,
+    0x831D, 0xFDCE, 0x3731, 0x0022, 0x0165, 0x929F, 0x7F73, 0x9842,
+    0xA606, 0x77F6, 0x825A, 0x34F2, 0xEFED, 0x144E, 0x7F1B, 0x229F,
+    0x7096, 0x89A2, 0x3062, 0x8C42, 0x4097, 0x79F3, 0x11C0, 0x509E,
+    0x8431, 0x2D8D, 0x0C88, 0x235C, 0x5A27, 0xC202, 0x7812, 0x1C03,
+    0x03D0, 0x7E23, 0xFD81, 0x8627, 0x90F4, 0x680A, 0xF4E8, 0x7D9A,
+    0x905E, 0xF9C2, 0x1EDE, 0xDE1F, 0x4788, 0x0F4D, 0xEB90, 0x2FAA,
+    0x3F13, 0x43B7, 0xBD84, 0x3B04, 0xF866, 0x6886, 0x550A, 0x20AF,
+    0x710B, 0x0F7D, 0x8D11, 0x03E1, 0xB9E2, 0xD0FC, 0x9778, 0x668D,
+    0xC863, 0x7461, 0x75E4, 0x80D4, 0x6C08, 0xF909, 0x821A, 0x1A61,
+    0xDFB9, 0x8E44, 0x5204, 0xF45D, 0x0804, 0x7EB3, 0x463F, 0x1B8C,
+    0x8D5B, 0x91A0, 0x1FDE, 0x5419, 0x0562, 0x150E, 0x6552, 0x3C12,
+    0xCCC3, 0x6948, 0x8064, 0x9038, 0x0B98, 0x8380, 0x2F7D, 0xA188,
+    0x9786, 0x0324, 0x7A86, 0x3478, 0x2481, 0xE278, 0xF2C0, 0x4217,
+    0x8F00, 0x1012, 0xE07D, 0x0BAD, 0x8B1B, 0x014C, 0x65DF, 0xFDAA,
+    0x705E, 0xC2AE, 0xE103, 0x0620, 0xE230, 0xAB81, 0x28B3, 0x183D,
+    0x9BBA, 0x5AC4, 0xE201, 0x4401, 0xFFC0, 0x4446, 0x6803, 0x7518,
+    0x8834, 0xA3DF, 0xE80C, 0xE859, 0x8765, 0xDB11, 0x03BF, 0xCFD5,
+    0x01D7, 0xD011, 0x2043, 0x4E05, 0xE430, 0x2C17, 0x7F66, 0x23C5,
+    0x738F, 0x0281, 0x3030, 0x2390, 0x8C5B, 0xDED1, 0x8498, 0x1C10,
+    0x0005, 0xCE26, 0xC087, 0x15BC, 0x1C85, 0xE12B, 0x41EE, 0xFF5C,
+    0x30CC, 0x0420, 0x761F, 0xA30A, 0xDA27, 0xD580, 0xF020, 0x322B,
+    0x5340, 0x84AD, 0xEED9, 0x6404, 0x10BD, 0x43BF, 0xD690, 0x9493,
+    0x077A, 0x81DA, 0x9030, 0x160A, 0x0C03, 0x4008, 0xDAFE, 0xC408,
+    0x2C40, 0x9842, 0x2C40, 0xA343, 0xA4E7, 0x64B1, 0x02E0, 0xC801,
+    0x064F, 0xF2BC, 0xB103, 0x19EF, 0xF0C2, 0x07BD, 0x3F74, 0xBE02,
+    0x812B, 0x82F2, 0x03CD, 0xDE44, 0x5C1C, 0x6609, 0x4C79, 0x1B5D,
+    0x94FA, 0x7E34, 0xA226, 0x4111, 0xFC13, 0xDA58, 0xC80F, 0x0381,
+    0x860B, 0x8F56, 0x498E, 0xD2DA, 0x5B94, 0xA08E, 0x5ED4, 0x9F10,
+    0x480E, 0x3EA2, 0x8B56, 0xE623, 0x5F96, 0x008B, 0x8067, 0x162D,
+    0xC1F8, 0x33C0, 0x40D3, 0x5818, 0x4BC7, 0x81E8, 0x01A4, 0xB031,
+    0xAE4B, 0x2123, 0x8321, 0x16C5, 0x4038, 0x6FC7, 0x70D4, 0x21D8,
+    0xA9D3, 0x420E, 0xB934, 0x42F2, 0x43C6, 0x8CA4, 0x680B, 0x9D4A,
+    0xDE25, 0x14A8, 0x8D7E, 0xBB9B, 0x121F, 0xB260, 0x885E, 0x9591,
+    0xA22C, 0x785A, 0xED49, 0xAC47, 0xE4FB, 0xEB5C, 0xE4E0, 0x3927,
+    0xEF05, 0x82E1, 0x7382, 0x414A, 0x4C2E, 0x5012, 0xDB15, 0x2068,
+    0x9CC0, 0x9ADC, 0x51C4, 0x2335, 0x8471, 0xB4F2, 0x1F8B, 0x51C0,
+    0xAAED, 0x7A02, 0x0340, 0x2931, 0x77DC, 0xE890, 0x7F02, 0xAA09,
+    0x1512, 0x4061, 0xDC99, 0x4E01, 0x9AE1, 0xF10F, 0xD7D9, 0x4801,
+    0x4688, 0x7A3C, 0x96A5, 0x0A04, 0x3E47, 0x899A, 0x21DC, 0x301C,
+    0xBA53, 0x9103, 0x4BF2, 0x40D2, 0xF50D, 0x1931, 0xB87C, 0x109D,
+    0x2A2F, 0x1A23, 0x11AA, 0x1A13, 0xBE34, 0x5620, 0x3CC1, 0x0040,
+    0xC37A, 0x2502, 0x7401, 0x3076, 0xCFF2, 0x0400, 0xC33A, 0x2109,
+    0x5180, 0x7DC2, 0xCE4C, 0x1749, 0xE30A, 0x0948, 0x1820, 0x2018,
+    0x5743, 0x1875, 0x271F, 0x19F1, 0x0C31, 0x55C8, 0xB179, 0x980F,
+    0xBF03, 0x430F, 0x8606, 0x04D3, 0x1FCF, 0x31E4, 0xB51F, 0x8B5C,
+    0x7EB0, 0x5904, 0x0591, 0x8459, 0x1C26, 0x903B, 0xBD13, 0x881C,
+    0x596A, 0xDFC6, 0x380D, 0x306C, 0x7804, 0xD31E, 0x0B52, 0xCC20,
+    0x2CCC, 0x12CC, 0x022C, 0x8210, 0x183D, 0x0BFD, 0xD5E0, 0x89A0,
+    0x0AEA, 0x5248, 0x0C19, 0x0251, 0x0787, 0xA121, 0xB661, 0x17A5,
+    0x1912, 0xDB32, 0x8824, 0x63C6, 0xA3CB, 0x6817, 0x0410, 0x4785,
+    0x1D10, 0x481A, 0x7A51, 0x494D, 0x5561, 0x6D9A, 0xCA32, 0x1716,
+    0x9AFF, 0xC20B, 0xF8D4, 0x7D01, 0x1EB5, 0x1211, 0xBCC1, 0x2F37,
+    0x9D11, 0x3F10, 0x080D, 0x23F0, 0x7941, 0x240B, 0xF0F6, 0x21DB,
+    0x0FC4, 0xC010, 0x7BE2, 0x78BC, 0xBDDC, 0x6480, 0x0472, 0x0001,
+    0x5180, 0x81B4, 0x0817, 0x4481, 0x8421, 0x9700, 0x8FA7, 0xBE0B,
+    0xC490, 0x027F, 0x845E, 0x7217, 0x12EB, 0x1610, 0x1E03, 0xB78F,
+    0xEF04, 0x3016, 0x77BE, 0x912F, 0x8173, 0xB876, 0xE24C, 0x023A,
+    0xE85E, 0x4BC7, 0xC4C2, 0x5808, 0x5B1D, 0x788A, 0x91C3, 0x8170,
+    0x3DE1, 0x0444, 0x8180, 0x22B3, 0xE84B, 0x3111, 0x8021, 0x7C00,
+    0x0833, 0x2F4A, 0x3C45, 0x8E92, 0x8710, 0x586E, 0x3865, 0xC01A,
+    0x1FDD, 0xC818, 0x7DF3, 0x043E, 0x24A0, 0x2E14, 0x7E5D, 0x24F8,
+    0x3DC9, 0x0A46, 0x284A, 0x0A02, 0x2227, 0xB44D, 0xCB7F, 0xC798,
+    0x4008, 0x108C, 0x0F40, 0x1D8F, 0x8688, 0x8826, 0x0082, 0x605B,
+    0xB6A1, 0x4658, 0x4490, 0x4A80, 0x2842, 0x0381, 0x6489, 0x0DF5,
+    0xA898, 0x0C25, 0xCA87, 0x0A41, 0xA283, 0xC4DA, 0xE008, 0x3203,
+    0x75F9, 0x2F0B, 0x4997, 0x8C7C, 0x8402, 0x2640, 0x1073, 0xCFF1,
+    0x63DA, 0xD9A6, 0x1F76, 0xB9C9, 0x1700, 0x8180, 0x28EF, 0x8602,
+    0x3905, 0xE507, 0x5256, 0xC8A4, 0x6C00, 0x2739, 0x0DEA, 0xD492,
+    0x3005, 0x3B71, 0x4182, 0x09F7, 0xA850, 0xDD71, 0x01C1, 0x8204,
+    0xCB06, 0xEB90, 0x3F88, 0x1E94, 0x9123, 0x4079, 0xF143, 0x54F0,
+    0xB1D2, 0xEFB7, 0xC196, 0x80A8, 0x9074, 0xAF42, 0xCD15, 0x4F00,
+    0xAA11, 0x7027, 0xC130, 0x40B9, 0x3913, 0x3B17, 0xC0F0, 0xB7D2,
+    0x9008, 0x3494, 0xDA02, 0xB182, 0x06B1, 0xD8E4, 0x83EA, 0xC649,
+    0x9991, 0x9017, 0x8A06, 0x480C, 0x3E9A, 0x0502, 0x1F7B, 0xF88F,
+    0xB035, 0x87CE, 0x8A45, 0xBE6E, 0x8851, 0x4D10, 0x2028, 0xC177,
+    0xB538, 0xC216, 0x2100, 0x1703, 0xE102, 0x8D90, 0x0A1F, 0x1C3F,
+    0x0702, 0x10B0, 0x0618, 0x417F, 0x8737, 0xC4C0, 0x1658, 0x05C6,
+    0x03E2, 0x403C, 0x0990, 0x4233, 0x0248, 0x59C2, 0x6322, 0x19B0,
+    0x4A24, 0x818F, 0x39B6, 0x8F94, 0x2C84, 0xE021, 0xBD5B, 0x6880,
+    0xC20C, 0xF508, 0xB10E, 0x2179, 0x822D, 0x0C26, 0xC8EC, 0x0149,
+    0xC441, 0x094F, 0x504C, 0x8207, 0x06C0, 0xD3C2, 0x1E42, 0x60F8,
+    0x7954, 0x47AF, 0x1E30, 0x8FA9, 0xF506, 0x5C03, 0x305E, 0x8797,
+    0xECCC, 0x1A30, 0x41B9, 0xBCFA, 0x55B0, 0x64A2, 0x60D3, 0xE101,
+    0xBC51, 0xB240, 0x608D, 0x2023, 0x0819, 0x3041, 0x230F, 0xBE95,
+    0xC7C8, 0x1E88, 0x6225, 0x01E8, 0x5CF4, 0xF368, 0x82BE, 0x746C,
+    0x28A0, 0x2114, 0x3B0B, 0xA847, 0xA30C, 0x16A6, 0x8578, 0xC410,
+    0x801F, 0x8EC0, 0xD0D3, 0x3989, 0x0039, 0xEDF9, 0xA432, 0x7A16,
+    0xA47D, 0x3A1C, 0x3C53, 0x686A, 0x50AF, 0x2600, 0x9CC2, 0x018B,
+    0x9138, 0x7913, 0x3B43, 0x3C65, 0x0358, 0xF15A, 0x0439, 0x04E5,
+    0xD09D, 0xE1DA, 0xC1ED, 0x0D61, 0xF78A, 0x348A, 0x45C0, 0x0861,
+    0x7B57, 0xCC47, 0xA050, 0xC0D2, 0x2C90, 0x4659, 0x0406, 0x0883,
+    0xDB7D, 0x8900, 0xA267, 0x1318, 0x1F85, 0x0984, 0xC2F2, 0x9CD0,
+    0xEC75, 0xA565, 0x80D6, 0xCC9B, 0x8753, 0x1108, 0x080B, 0x17D6,
+    0x534C, 0xF347, 0x1064, 0x1FE6, 0x7F7C, 0xD123, 0xDF62, 0x63ED,
+    0x83A1, 0x3E48, 0x404C, 0x6A05, 0x0C30, 0x0385, 0xFA91, 0x36C7,
+    0x81B5, 0x0AC2, 0xC5ED, 0x6082, 0x3C78, 0xE434, 0x8043, 0xEDB3,
+    0x44BC, 0xF7EA, 0xE105, 0xFDFB, 0x20AF, 0x82C2, 0x0787, 0x7F0F,
+    0x7F5E, 0x16EC, 0xEE27, 0x8041, 0xDFD6, 0xE670, 0x9807, 0xB178,
+    0x7774, 0xB860, 0xE594, 0x8D2C, 0x1F11, 0xFD09, 0xFA40, 0x0A61,
+    0x089D, 0xE45E, 0x6112, 0x4050, 0x3C27, 0x13AC, 0xFD01, 0x77C3,
+    0x72E3, 0xEEA5, 0xF208, 0xF48D, 0xA23C, 0x1F00, 0x51DD, 0x5442,
+    0x2578, 0x4470, 0x8A4E, 0xFFDB, 0x260F, 0x62D8, 0x2CAE, 0x1102,
+    0x8D68, 0xB2F8, 0x2638, 0xFCE1, 0x1C60, 0x105A, 0x17F8, 0x7409,
+    0x2378, 0x2FF1, 0xF281, 0xE309, 0x118C, 0x7512, 0x0D0B, 0x9380,
+    0x8A06, 0x50F1, 0xB160, 0x891E, 0xA83A, 0x2F7A, 0x8597, 0xB54B,
+    0x8878, 0x0434, 0x7162, 0x20F7, 0xEB21, 0x02E7, 0x023D, 0x71AE,
+    0x3E40, 0x651B, 0x2D01, 0x7428, 0x1E00, 0x8714, 0x884B, 0x37D8,
+    0xBC97, 0x9C58, 0xF404, 0xF4F7, 0xBCF2, 0x200F, 0xBA79, 0x0E44,
+    0x0037, 0x8489, 0x4BC6, 0x7D62, 0x1F6C, 0xB1A2, 0x0177, 0x77F1,
+    0x7152, 0x829A, 0x5323, 0x93B1, 0xE45C, 0x4420, 0x7767, 0x3C20,
+    0x0487, 0xD420, 0x182E, 0xB294, 0x10F0, 0x5A51, 0x1BE0, 0x06F8,
+    0xA264, 0x401E, 0x4D02, 0xE95D, 0xB403, 0xA9D3, 0xE4E0, 0x21EF,
+    0x9871, 0x2F49, 0x6340, 0xF1F8, 0x6584, 0x4604, 0x3E0C, 0x671B,
+    0xF980, 0x772A, 0x7292, 0x048C, 0x2934, 0x2265, 0x4E40, 0x4503,
+    0x8E52, 0x7CD0, 0x1D48, 0x23C4, 0xF034, 0x0EA2, 0x4371, 0x9012,
+    0xF40C, 0xF201, 0xF88B, 0x40BE, 0xFFBC, 0x81C9, 0x292F, 0x1C43,
+    0x1885, 0xC374, 0x24A0, 0xC4F2, 0x5F08, 0xA910, 0x5FA2, 0x2B54,
+    0x3E02, 0x0D03, 0x7473, 0x1ACD, 0x1374, 0x2320, 0xBBF1, 0xC24D,
+    0xCD0E, 0xF110, 0xBA1D, 0xF10A, 0x7ABF, 0xE448, 0x1EC2, 0xBB11,
+    0xCBCE, 0xCAA2, 0x0180, 0xDAD5, 0x4135, 0xF673, 0x7330, 0x7C5A,
+    0x3463, 0x9220, 0x493F, 0xAB07, 0x134C, 0x7796, 0x01A6, 0x398D,
+    0x7E1E, 0xE82E, 0x0670, 0x2410, 0x172A, 0x11C8, 0xE920, 0x7B05,
+    0x2442, 0x2208, 0x09F1, 0xE9A8, 0x805D, 0x231C, 0x393F, 0x43DD,
+    0xF602, 0x7803, 0x6371, 0x643A, 0x8C68, 0x16E4, 0xB7AD, 0xDBCC,
+    0x0E22, 0xAA0C, 0xB29B, 0x0494, 0xBD4C, 0x4104, 0x7508, 0xE40A,
+    0x8EE4, 0xB527, 0x1D41, 0x6A00, 0xF8F0, 0x4803, 0x00E8, 0xEE48,
+    0x0314, 0xB801, 0x5088, 0xA110, 0x4F62, 0x8C13, 0x1D4B, 0x6962,
+    0x0292, 0xCE88, 0x5881, 0x31D8, 0xB6E0, 0xF2C7, 0x5501, 0x0422,
+    0x6CB4, 0x0943, 0x63CC, 0x7D43, 0x1400, 0x9F78, 0xBC08, 0x2B04,
+    0x20B1, 0xA487, 0x7764, 0x889C, 0x4D04, 0x1A15, 0xC235, 0xCAC2,
+    0x68A1, 0x27C0, 0x9D99, 0x2C44, 0x3F07, 0x8710, 0xE400, 0x0F03,
+    0x6779, 0xC9A0, 0x3C81, 0xC070, 0x7208, 0x0645, 0x9000, 0x0A84,
+    0x1B81, 0xB094, 0x83C0, 0x584F, 0x85FB, 0x82D1, 0x782B, 0x4901,
+    0xE00E, 0x27C2, 0xBE1B, 0x963A, 0x31B1, 0x3449, 0xEA86, 0x0204,
+    0xA0EF, 0xFAC4, 0x46A4, 0x77F7, 0xB203, 0x8D5E, 0xFFC4, 0x2055,
+    0x2347, 0x5DDE, 0x2009, 0x324F, 0x8164, 0xC841, 0x2600, 0xC10F,
+    0x172C, 0x0E16, 0xE01C, 0xCBE1, 0x600E, 0x3781, 0x7383, 0x00B9,
+    0x78E6, 0x20BC, 0x4E6A, 0x413E, 0xFB86, 0x2040, 0xBBE6, 0x7231,
+    0x2389, 0x9E09, 0x1A3E, 0x0203, 0x2264, 0x0C2E, 0x93BC, 0x1800,
+    0x9E2E, 0x243E, 0x67FF, 0x11C0, 0x4860, 0x9EAF, 0xD3D9, 0xD54B,
+    0xDAAE, 0x842F, 0x02FC, 0x00C8, 0xF272, 0xC61C, 0x84E4, 0xFC04,
+    0x0237, 0x0605, 0x2B82, 0x07BE, 0x74CB, 0xBC98, 0x4444, 0x440D,
+    0x0DA3, 0x099E, 0xEB94, 0x1D8C, 0x7102, 0x4024, 0x4003, 0x1242,
+    0x4DC1, 0x8887, 0x51C8, 0xEAE0, 0xBEC3, 0xEF43, 0x61F1, 0xCBE0,
+    0x8183, 0x99D5, 0xE043, 0x0184, 0x0023, 0x02A8, 0x9400, 0x98E7,
+    0xE24D, 0x810A, 0xCB90, 0xB072, 0x3AA3, 0x4A30, 0x0171, 0xE0A6,
+    0x00FC, 0x002E, 0x954D, 0x089B, 0xDC18, 0x8209, 0x6A9D, 0xC452,
+    0x1D48, 0x2EFD, 0x3110, 0x17A5, 0x6448, 0x602E, 0x07D0, 0x3BAF,
+    0x758B, 0xA830, 0x0B64, 0x961F, 0x5EEB, 0x0F90, 0x6F0B, 0x8019,
+    0x083C, 0x0A88, 0x0508, 0x83B4, 0x078E, 0x3F00, 0x108A, 0x1100,
+    0x7928, 0xBB26, 0x888F, 0x2E0D, 0x5C40, 0x1F7C, 0x0815, 0x2C8B,
+    0x5890, 0x0A05, 0x0263, 0x916D, 0xEC9F, 0xB29D, 0x8088, 0x2C27,
+    0xE01B, 0xCB71, 0x37C0, 0x06A4, 0x0AA6, 0x0582, 0x0827, 0xC0EF,
+    0x001A, 0x2159, 0xE181, 0x740B, 0x8020, 0x0AC0, 0x063D, 0xF662,
+    0x4690, 0x925C, 0x81C4, 0xD1E3, 0xAF01, 0x3B51, 0x0187, 0x4387,
+    0x58D6, 0x6319, 0xF659, 0x0E20, 0x8F93, 0xA28A, 0xE9A8, 0x1BC0,
+    0x1143, 0xC0E5, 0xC56B, 0xD120, 0xF590, 0x480C, 0x02C0, 0xF407,
+    0x7801, 0x0081, 0xE430, 0x5980, 0x14E4, 0x0528, 0x4495, 0x8304,
+    0x001D, 0x8B12, 0xE026, 0x2E0C, 0xDED7, 0xEE11, 0x04F2, 0x01FC,
+    0x0080, 0x97AC, 0xF704, 0xAB07, 0x822F, 0x3C93, 0x1060, 0x6077,
+    0x7271, 0x6569, 0x1614, 0xB0EE, 0x76B1, 0xB1E0, 0xC9C4, 0xCE34,
+    0x4282, 0xC413, 0xD9F6, 0xCEDB, 0x81D3, 0xADCA, 0x5D5B, 0x1D3C,
+    0x46A1, 0x09EB, 0x9C53, 0xC91A, 0x2007, 0xCE8E, 0xE211, 0x772D,
+    0x29F0, 0xBB34, 0x3831, 0x90FB, 0xB420, 0xF413, 0x2419, 0x66F8,
+    0x18C8, 0x881C, 0x4E27, 0xC042, 0x0652, 0x440F, 0x0C2E, 0x1608,
+    0xE821, 0x2512, 0x2237, 0x5044, 0x00AD, 0xA4D8, 0x8DC6, 0x76D3,
+    0x42E4, 0xAAE4, 0x131D, 0x9DFE, 0x8887, 0x74D1, 0x1033, 0xC7AC,
+    0x8400, 0x1A11, 0xDB51, 0x0807, 0xDE9F, 0x1104, 0x3C32, 0xBC7D,
+    0xDC96, 0x5A46, 0x12D6, 0xA896, 0xC51E, 0x3C12, 0x88F0, 0xCD88,
+    0x59E2, 0x01F4, 0x0700, 0x9E83, 0x9170, 0x22D9, 0xAC2D, 0x8E03,
+    0x4068, 0x5F11, 0xE3C9, 0x85DE, 0x64C3, 0x85E8, 0x34F7, 0x4210,
+    0x8920, 0x19A7, 0xEAB2, 0x22B8, 0xF808, 0x3207, 0xA7D2, 0x0821,
+    0xDC27, 0x84B9, 0x42FA, 0xC1B2, 0x5803, 0x013E, 0x62D0, 0xED20,
+    0x65C5, 0xD684, 0xA525, 0x0131, 0xE0BB, 0xDB1C, 0x4A6A, 0x5D87,
+    0x19A4, 0x2684, 0x4125, 0x033F, 0x57DE, 0x4E1C, 0x043C, 0x5DBC,
+    0x2E44, 0x2188, 0x05DE, 0x3666, 0xC631, 0xB8F4, 0x93E9, 0x6B21,
+    0x8454, 0xDD8C, 0x0862, 0x3EA1, 0xC481, 0xD609, 0x15EA, 0x6368,
+    0xD19B, 0x400A, 0x19AC, 0xF861, 0xDF85, 0x0B46, 0x52B8, 0xCE2F,
+    0xF795, 0xD9F1, 0x6901, 0x93A1, 0xC399, 0x4A50, 0x7681, 0x3602,
+    0x3F0A, 0xDB17, 0x77B8, 0x8ECF, 0xB23C, 0x1755, 0x2184, 0xB9BB,
+    0x2C3C, 0x8756, 0x5C5E, 0xA049, 0xFD8D, 0xF4CF, 0x10BF, 0xA758,
+    0x9233, 0x82FF, 0x772D, 0x23D4, 0x36A2, 0x0713, 0xC0AF, 0x0820,
+    0x1F54, 0x220F, 0x138C, 0x40F2, 0x27FC, 0x7DA8, 0x243F, 0x53F8,
+    0x9789, 0x1588, 0xF425, 0xFCEF, 0x6421, 0x01D2, 0x4782, 0x44C0,
+    0x43E0, 0x4682, 0x1F7D, 0x50E0, 0x6028, 0x2457, 0x4391, 0xFA3D,
+    0x8E3B, 0x3BEC, 0x9C24, 0x01E4, 0x4282, 0xE4FE, 0x2D10, 0x1B7C,
+    0x25F0, 0x2070, 0xF417, 0xF00F, 0x8225, 0xCF60, 0x47CE, 0xA7E3,
+    0x8D80, 0x8408, 0xB203, 0x4664, 0xFAB9, 0x8C8D, 0xFF1D, 0xC710,
+    0xBD92, 0x9A3D, 0xFC58, 0x3BED, 0x4113, 0xC36E, 0xD916, 0x235D,
+    0xC3A0, 0x5D81, 0x05C8, 0x0997, 0x9C20, 0x10C6, 0x1DF7, 0x6471,
+    0x7601, 0xC481, 0xBE09, 0x871F, 0x4208, 0x0810, 0x7BF8, 0x483A,
+    0x75E3, 0xA241, 0x005E, 0xCBB7, 0x1629, 0x6C10, 0x4081, 0xE009,
+    0x10A2, 0x0F0C, 0xA0AF, 0x2497, 0x88E5, 0x70B9, 0x10A2, 0x210A,
+    0x117A, 0xE78D, 0x0F85, 0x1E06, 0xA104, 0x85F1, 0x1608, 0xF946,
+    0xDD03, 0xBC05, 0x2783, 0x5F20, 0x6615, 0xB688, 0xB9DE, 0xAB4B,
+    0x442C, 0x24F0, 0x65E4, 0xBBE1, 0xC022, 0x2048, 0x6D2E, 0x2048,
+    0xA8F0, 0x9761, 0x809F, 0x0801, 0x0DC6, 0xA77D, 0x70E2, 0xF701,
+    0x22AC, 0x4442, 0xDD50, 0x0786, 0xFB89, 0x7423, 0xF113, 0x2234,
+    0x446D, 0x0BB9, 0x1A02, 0x10F0, 0x5A77, 0x1B50, 0x841E, 0xF61C,
+    0x23D8, 0x4D34, 0x03AF, 0x1915, 0x8881, 0xD9D4, 0x6203, 0xFB65,
+    0x94A5, 0xE477, 0x9C97, 0x4901, 0xE3EB, 0xE4E3, 0x008C, 0xDB4B,
+    0x2805, 0x0DC8, 0xE38A, 0x1F85, 0xE9E4, 0x0828, 0xF61A, 0xC10D,
+    0x1003, 0x3C97, 0x8059, 0x4E53, 0xBCA8, 0x1065, 0xE8D6, 0xF2F2,
+    0x92B8, 0x8639, 0xDD47, 0xEF2A, 0xB11C, 0x3C3C, 0xA020, 0x4D48,
+    0x104A, 0x9EFC, 0x125D, 0x47EE, 0x2010, 0x244D, 0x003E, 0x430A,
+    0x2F63, 0x6023, 0x84A0, 0x3828, 0xE880, 0xE097, 0x9E9A, 0x44E8,
+    0x2100, 0x901C, 0x0117, 0xCDE0, 0x04E5, 0x63BB, 0x9DCC, 0x17EB,
+    0xFAC2, 0xDBBF, 0x8CE9, 0x3401, 0xEBAE, 0x87B9, 0x2404, 0x080C,
+    0xC023, 0x7CED, 0xF852, 0x6067, 0x040E, 0xE04F, 0xE1ED, 0x743C,
+    0x1472, 0x3BEB, 0xFCF1, 0x55D1, 0x0637, 0x23B1, 0xF1AB, 0xE1ED,
+    0xBB63, 0xBD9A, 0x8814, 0x2F05, 0x1874, 0xE42F, 0xDBC2, 0x0801,
+    0xD330, 0x101F, 0x6A89, 0x068C, 0x0DF0, 0xF90E, 0x4740, 0x58D8,
+    0x0CAC, 0x47BF, 0xAD8B, 0xBFAB, 0x12C6, 0xE85D, 0xEF78, 0x4C71,
+    0xD522, 0x3F11, 0xC6DC, 0x413E, 0xF4E4, 0x4382, 0x2278, 0xC1B9,
+    0xC99F, 0x1C71, 0x9EF9, 0xD52F, 0x2528, 0xA1C0, 0xA70B, 0x4BEA,
+    0xA77B, 0xF621, 0xE735, 0x02BA, 0x5427, 0xC034, 0x0D62, 0x00E0,
+    0x1DCB, 0xA09F, 0xC498, 0x43E2, 0xABD2, 0x0945, 0x8094, 0xD6F1,
+    0x2608, 0x9B08, 0x029D, 0xA236, 0x2C92, 0xE719, 0x0811, 0xF83F,
+    0x2C82, 0xAE9E, 0x1B1F, 0x3CED, 0x909A, 0x0012, 0x8689, 0x984C,
+    0x883D, 0xFBF6, 0x45D0, 0x1005, 0x07BB, 0x9C40, 0x9944, 0x1180,
+    0x7701, 0xC4C9, 0x45E4, 0xE2F1, 0x60BD, 0x636B, 0x7E1B, 0xA000,
+    0x8226, 0x423B, 0x0016, 0xD1E8, 0x2019, 0xDC47, 0x1A06, 0x1F89,
+    0x3988, 0x9000, 0x7D7A, 0x0546, 0x8789, 0x380C, 0x80CB, 0xEA2E,
+    0xF581, 0x1098, 0x40E3, 0x6365, 0xEDEF, 0xD2B3, 0xB8D4, 0x5817,
+    0x9DB1, 0xB487, 0x8933, 0x4581, 0xD0E9, 0xD0DA, 0x8900, 0x0D80,
+    0xC689, 0x7056, 0x7A13, 0x9468, 0x0817, 0x042F, 0x96BD, 0x87C4,
+    0x9E07, 0xEC82, 0x7293, 0x8007, 0xDAB1, 0x63A3, 0x2A2F, 0x6412,
+    0x10E4, 0x74F7, 0xEF09, 0x045E, 0x23A8, 0x1B5C, 0x91C2, 0x860E,
+    0x612D, 0x8E32, 0x10F2, 0x2FCE, 0x3214, 0xF534, 0xBD34, 0x7C86,
+    0x95AC, 0x6AA4, 0x1809, 0xCF40, 0x8C81, 0xF11A, 0xF092, 0x8061,
+    0x5E10, 0x7890, 0x9482, 0x21B9, 0x0EF5, 0x042E, 0x3342, 0x3708,
+    0xC104, 0x0388, 0x6301, 0xF04C, 0x085B, 0x534C, 0x8823, 0x10F4,
+    0x5808, 0x4081, 0x0800, 0xF903, 0xE841, 0x8211, 0x8110, 0x8D01,
+    0x826F, 0x1233, 0x8F6C, 0xC708, 0x0C04, 0x81C1, 0x7F62, 0x7909,
+    0xD242, 0x7529, 0x1115, 0xBE24, 0x2740, 0x1352, 0x2378, 0x6608,
+    0x9220, 0x496A, 0xE00F, 0x8DC1, 0xB21D, 0xD181, 0x36EB, 0x005C,
+    0x4018, 0x4F92, 0x67E0, 0x4991, 0x2C40, 0x2044, 0x84E1, 0xC142,
+    0xC7A4, 0xF584, 0x5806, 0x7996, 0x80CD, 0x2A01, 0x05D2, 0x8788,
+    0xF14D, 0x99B0, 0xBBCA, 0xF066, 0x7123, 0x416F, 0x1D73, 0x8F76,
+    0x068F, 0x88FD, 0x04B7, 0x4624, 0xC1B0, 0x303D, 0x2802, 0x2F40,
+    0xD289, 0x2547, 0x1E51, 0x1E86, 0x2638, 0x81C1, 0xA210, 0x8DF1,
+    0x1FC0, 0x95A0, 0x57A1, 0x4704, 0x569C, 0x83C4, 0x7F07, 0x4710,
+    0x0214, 0x3C48, 0x484C, 0x6AF6, 0x468D, 0x0172, 0x9CF6, 0x13C8,
+    0x0E01, 0x900C, 0x6E1F, 0xE660, 0x2BE2, 0x4244, 0x8689, 0xC8C0,
+    0x09B8, 0x817F, 0x1210, 0xA2DD, 0x2311, 0x0670, 0x600F, 0x3D90,
+    0x0818, 0xD233, 0x61B3, 0xC4D8, 0x083C, 0x4AEE, 0x8004, 0x9004,
+    0xA009, 0x4012, 0x8025, 0x004A, 0x0094, 0x0178, 0x0321, 0x1325,
+    0x9D2D, 0x610D, 0xA2B0, 0xF01D, 0x8C40, 0xD207, 0xD796, 0x5F64,
+    0x0406, 0x8840, 0x1004, 0xD3C4, 0x9111, 0xE27D, 0x31F0, 0xBF90,
+    0xD541, 0x1034, 0xDC58, 0xD8DC, 0xC443, 0xAAA2, 0xD8DC, 0x4440,
+    0x1887, 0xA2C4, 0x42AA, 0xC1AA, 0xA448, 0xE4FC, 0x6B9A, 0x2570,
+    0x0C07, 0x8CCC, 0x0404, 0x725D, 0x641E, 0x4573, 0x8789, 0x3E8E,
+    0xAB08, 0x4E70, 0x2CD3, 0xF126, 0xF189, 0xC910, 0x6502, 0xEA10,
+    0x07B4, 0x0109, 0xD0C4, 0x1ADC, 0x7A72, 0x6C02, 0x5108, 0x584E,
+    0xA478, 0x9B3E, 0x248A, 0x2367, 0xC48E, 0x83E2, 0x4732, 0xF12F,
+    0xC11E, 0x01EE, 0x4A41, 0x8F88, 0xF056, 0x49EF, 0x53A3, 0xF135,
+    0xF178, 0x9B28, 0xBC4D, 0x7895, 0xB608, 0x4B20, 0x3CA4, 0xC4A0,
+    0x6E42, 0x7892, 0xFD12, 0x090D, 0x1BE0, 0xFA52, 0x8C71, 0xD046,
+    0x1071, 0xE990, 0x22EA, 0x2542, 0x09FB, 0xBBC0, 0x4200, 0xC830,
+    0xDC85, 0xC675, 0x1207, 0xA8C0, 0x0415, 0xE125, 0xE468, 0x02BE,
+    0x264F, 0x2030, 0xE606, 0x020F, 0x1259, 0x91C3, 0x3F90, 0x85E2,
+    0x1222, 0xC392, 0x1B8B, 0x4088, 0x0805, 0xE000, 0xA3EA, 0xBBE1,
+    0x2352, 0x0002, 0xD104, 0x92DD, 0x4324, 0xF202, 0x86DD, 0xD135,
+    0x0DA2, 0xAC58, 0xC404, 0x1C41, 0x9C7C, 0x252A, 0x5BB4, 0xA080,
+    0x8581, 0x5A02, 0x8C21, 0x7F50, 0x4018, 0x4DDD, 0x5306, 0xC98A,
+    0x708D, 0x05B8, 0xD23B, 0xFBCB, 0x104B, 0xB350, 0x7B1E, 0xC550,
+    0x8C70, 0x00FD, 0x0F06, 0x2048, 0xDD2A, 0x028C, 0xA001, 0x48D0,
+    0xBF7C, 0x5E20, 0x482F, 0xE9BE, 0xE794, 0x4F16, 0x6028, 0xA326,
+    0x2A22, 0x0E5D, 0x37DC, 0xF1CC, 0xA7E0, 0x7689, 0x6B0A, 0x6C05,
+    0xEFEA, 0x26DB, 0x3010, 0xF993, 0x191C, 0xA5D3, 0x7DCF, 0x1A0A,
+    0x6021, 0x9B26, 0x3189, 0x4BA6, 0xFB9E, 0x3154, 0xC042, 0x864C,
+    0x61B2, 0x5D37, 0xDCF2, 0x65D3, 0x3C36, 0x3126, 0x3029, 0x4BA6,
+    0xFB9E, 0x2BD4, 0xC041, 0x264C, 0x4059, 0xBCA5, 0xD37D, 0xCF14,
+    0x8A60, 0x203B, 0x2632, 0xC94B, 0xA6FB, 0x9E26, 0x54F0, 0x160E,
+    0x2AE2, 0x037D, 0x578A, 0x2750, 0x5FAA, 0x141C, 0x9071, 0x3AFA,
+    0x6FD8, 0xBA6F, 0x3C80, 0x42FF, 0xA6FA, 0x5234, 0x00C3, 0x47DC,
+    0xBAC3, 0x061C, 0x8784, 0x40CE, 0x43B0, 0x2067, 0x21D2, 0x1F51,
+    0xE08C, 0x10F4, 0xEFC8, 0xB00A, 0x240A, 0xA816, 0xC95A, 0x43A6,
+    0xF884, 0x010A, 0xC546, 0x769A, 0xE100, 0x7A61, 0x9860, 0x8210,
+    0xB6C4, 0xD1E3, 0x5662, 0x00F4, 0xE934, 0xC107, 0x3B8E, 0x163D,
+    0x8FBC, 0x2C16, 0x9EF3, 0xA32F, 0x83A4, 0xC404, 0x344F, 0xB340,
+    0xFC28, 0x3668, 0xC44D, 0x03EB, 0x7E84, 0x4B1C, 0x90E2, 0x7E03,
+    0xE097, 0x024D, 0x53E3, 0xAD66, 0x142B, 0x4092, 0x5403, 0x4769,
+    0x5C10, 0x40AD, 0x0A38, 0x0A80, 0x9E78, 0x1A48, 0x18F0, 0xC63A,
+    0x3C5F, 0xA47A, 0x6C9E, 0x418D, 0x0648, 0x8184, 0x81AC, 0x779A,
+    0x477F, 0x5A33, 0x1754, 0xF708, 0x53D6, 0x8C83, 0xA634, 0x1074,
+    0x7DD5, 0x1189, 0xFE0E, 0x8FDA, 0x3751, 0xF77C, 0xA1F0, 0xF712,
+    0x21B2, 0xEA07, 0xAD68, 0x0BAD, 0x67C7, 0xB1D3, 0x9E5F, 0x65D6,
+    0xB50F, 0x2668, 0x9D90, 0x65D6, 0x97A5, 0xD56A, 0x4881, 0x6943,
+    0xA4C8, 0x18EA, 0xD01A, 0xECC8, 0x1CEA, 0xD01E, 0xECC8, 0x20EB,
+    0xD558, 0x8208, 0xBB32, 0x093A, 0xD41C, 0x755B, 0xE1CD, 0x4902,
+    0x0DF6, 0x2978, 0xD419, 0x96A0, 0xDC30, 0x98EA, 0x40E2, 0x8C56,
+    0x40EA, 0x8C36, 0x5D55, 0xC846, 0x0B93, 0x65FB, 0x89A4, 0x5F76,
+    0x3AF9, 0x5542, 0x4CC6, 0x8B0E, 0x2CC3, 0x0B0E, 0x4C33, 0xD559,
+    0xA33F, 0x9B5D, 0x55CC, 0x45A4, 0x6A2D, 0x9650, 0xC8B6, 0x5839,
+    0x3631, 0xCA51, 0x01DC, 0x0AB7, 0x26CA, 0x9726, 0xCA77, 0x26CA,
+    0x5864, 0x5B28, 0xDC9B, 0x285C, 0x80E2, 0x5C0A, 0xB030, 0x8DA0,
+    0x58CC, 0x9816, 0x4892, 0xA059, 0xB220, 0x96A0, 0xA92A, 0x0659,
+    0xA83D, 0x81FA, 0x206F, 0xB03D, 0x87C4, 0xA042, 0x4A81, 0xFA37,
+    0x41EB, 0x1C21, 0x2040, 0x8DA6, 0xB92F, 0x52C9, 0xA015, 0x8045,
+    0x0F9A, 0x3744, 0xD0F6, 0x3F34, 0x85FF, 0x0197, 0x0FAD, 0x5A48,
+    0x2FF5, 0x6281, 0x68BD, 0x84D6, 0x158D, 0x216C, 0x1722, 0xFCAE,
+    0x2A87, 0x56B2, 0x204B, 0x0C46, 0x80AB, 0xD9BF, 0x43EE, 0xAB42,
+    0x13A7, 0xC022, 0x433E, 0xC183, 0x1178, 0xD51D, 0x4950, 0x0895,
+    0x1C3B, 0x03E8, 0xB909, 0xD116, 0xA314, 0x9418, 0x1C64, 0xC0E7,
+    0xEE09, 0xD1F8, 0x6F7A, 0x6382, 0xE898, 0x98C8, 0xD21B, 0x3AB6,
+    0x214C, 0x2F01, 0xBF32, 0x2000, 0x0BA1, 0x7F60, 0x7024, 0x391A,
+    0x5E6A, 0x3A20, 0x10D0, 0x1B8D, 0x10E3, 0xA8ED, 0x4462, 0x4008,
+    0xEAD4, 0xE46E, 0x8830, 0x3CB6, 0x0B8E, 0x0B18, 0x168C, 0x5D4F,
+    0x76BD, 0x0865, 0xD6D1, 0x4916, 0xC05F, 0x5B73, 0x2E06, 0x2C01,
+    0xAE00, 0xE700, 0x7B73, 0x5C53, 0xDAB4, 0x0416, 0x0441, 0x2EB6,
+    0x3410, 0xB416, 0xF855, 0xA449, 0x6C42, 0x13E7, 0x3382, 0xEDC5,
+    0x621E, 0x464E, 0xA708, 0x1057, 0xB707, 0x47B1, 0xEA04, 0x16EA,
+    0x6CF1, 0x0B3A, 0xD729, 0x3034, 0x96F8, 0x48FC, 0x7B58, 0x6248,
+    0x7DD7, 0x747E, 0x1477, 0x2C39, 0xC26D, 0x70CE, 0x42EC, 0x04F2,
+    0x3C07, 0xEC2A, 0x0416, 0x8E9D, 0x5658, 0xB320, 0x7EC8, 0x743C,
+    0xE760, 0x70AB, 0x1F3D, 0x692F, 0x2E83, 0x2185, 0x1079, 0x13E0,
+    0x86C6, 0x023D, 0x5644, 0x2C07, 0x0126, 0xFF7C, 0x7080, 0x6C33,
+    0xD564, 0xC200, 0x87C0, 0x6280, 0x021F, 0x998C, 0x0011, 0x048C,
+    0xDFF1, 0x8C01, 0x10FA, 0xF331, 0x0004, 0x44C2, 0xD421, 0x0F65,
+    0xF808, 0x901E, 0x33A1, 0xE819, 0xE806, 0xC4AE, 0x4011, 0x1C5C,
+    0x67AA, 0xCA84, 0x010B, 0xCF86, 0x797C, 0x7D06, 0x0383, 0x3BFE,
+    0x9175, 0x5983, 0xCA00, 0xC510, 0x13E1, 0xAEAB, 0x3448, 0x444B,
+    0xAD68, 0x0BA0, 0x18E4, 0x31B9, 0xD843, 0xEE9E, 0xA010, 0xFBA7,
+    0xC984, 0x3EC3, 0x4821, 0xF61A, 0x21F0, 0x91F0, 0x803E, 0x0BDE,
+    0x2DB0, 0xB0B9, 0x03D1, 0x8788, 0xF019, 0x4201, 0x8C40, 0x33E1,
+    0x2A61, 0xF10D, 0xE8D4, 0x6181, 0x81F2, 0x8174, 0x387B, 0x84B8,
+    0x83E1, 0xC0CA, 0xEA7A, 0x2203, 0x05E9, 0x0160, 0x2C00, 0xA784,
+    0x5611, 0x5406, 0x0A52, 0x740D, 0x03BB, 0xCC13, 0xC3D6, 0xCA87,
+    0xEBDE, 0xE133, 0x82EE, 0x44F8, 0x253F, 0x5BC2, 0x883E, 0x3C02,
+    0x8405, 0x6A07, 0x8FC8, 0x4480, 0xB170, 0x8941, 0x0763, 0xB2A3,
+    0xD41C, 0x8405, 0x0141, 0x0F95, 0xEE04, 0xF204, 0x4F60, 0x1FC9,
+    0xF2C8, 0x015D, 0x3B5E, 0x2040, 0x4FE8, 0xD753, 0xEC5E, 0x2184,
+    0x3F7A, 0xB30F, 0xA9BC, 0x47C5, 0x9963, 0xE90B, 0xB186, 0x2014,
+    0x701A, 0xB88D, 0x116C, 0x7883, 0xEE92, 0x51F5, 0x0D81, 0x1A06,
+    0x9120, 0x036E, 0x50E9, 0x689B, 0x47D7, 0xA303, 0xED02, 0x93D0,
+    0x1C0F, 0x6F19, 0x18CB, 0xDBC1, 0xC222, 0x9B02, 0x0FC0, 0x6105,
+    0xDFA6, 0x4223, 0x0066, 0x17BA, 0x1584, 0x40F7, 0xA778, 0xF62F,
+    0x78C3, 0x97A3, 0x594A, 0xCF62, 0x6159, 0x108B, 0x8308, 0xAE00,
+    0x3ADF, 0x2541, 0xC01A, 0x55E2, 0x9145, 0xD818, 0xC7BB, 0xAE09,
+    0x6C00, 0xB062, 0x9A25, 0xCA89, 0x0E1F, 0x90E0, 0xBEA1, 0xC48D,
+    0x12D6, 0x210C, 0x8603, 0x0442, 0xEE30, 0x20A1, 0x8C17, 0x7760,
+    0x22A6, 0x095B, 0x4883, 0x5908, 0x65E1, 0x0001, 0x0306, 0x6780,
+    0x3F0C, 0x45F8, 0x5F78, 0x7B0C, 0x3871, 0x0A80, 0x0219, 0x0402,
+    0xC804, 0x0112, 0x003F, 0x8B1C, 0x441E, 0xEE23, 0xC204, 0x068F,
+    0x1A28, 0x890D, 0xDB70, 0xC240, 0x0F40, 0xA025, 0x0C25, 0xC1DB,
+    0xE5D3, 0x640B, 0xA038, 0x7A14, 0xFCDD, 0x2630, 0x6009, 0xCCA5,
+    0xE46C, 0xD117, 0x7B1B, 0xDC82, 0x1CB0, 0xD1C8, 0x4713, 0x04B8,
+    0x31BC, 0x19E0, 0x3EA4, 0x9A10, 0x8812, 0x08C5, 0x1F37, 0xF220,
+    0x796E, 0x9983, 0xEADD, 0xE314, 0x10F8, 0x291C, 0x7082, 0x8975,
+    0xC7F9, 0x048D, 0xF495, 0xC081, 0x1B70, 0x0179, 0xC640, 0x4F1F,
+    0x463E, 0x11C6, 0x008D, 0xA620, 0x16C0, 0x0641, 0xE840, 0xC40F,
+    0x1ACD, 0x21FC, 0x751D, 0x8630, 0x5C90, 0x0400, 0xF05B, 0x17B0
+};
+
+static const u16 ap1302_fw_bootdata8[ ] = {
+    0x8000,
+    0x01C3, 0xF984, 0x079B, 0xE480, 0xA673, 0xE5C1, 0x10D6, 0x789D,
+    0x4049, 0x7650, 0x087E, 0x8B91, 0x40F5, 0x35CD, 0x01E7, 0x266C,
+    0x72A1, 0x440D, 0x29C9, 0x320F, 0xC981, 0xA43C, 0x16BD, 0xC704,
+    0x3E3E, 0x5B23, 0xE70B, 0x8086, 0x7C4D, 0x7886, 0x91CB, 0xCCDE,
+    0x2231, 0x8272, 0x7000, 0xC0BB, 0x92E0, 0x1EDA, 0x9F07, 0x0A48,
+    0x4D60, 0x071D, 0xC08F, 0xA737, 0xC7B6, 0x11CC, 0x7D1B, 0x30E0,
+    0xC0E6, 0x17FA, 0x6994, 0x4BE1, 0xCC27, 0x08F8, 0xB5C8, 0xF609,
+    0x5880, 0x85D8, 0x903D, 0x06BE, 0x1807, 0x9300, 0xD218, 0x88A1,
+    0x0088, 0xF311, 0x208F, 0x00EE, 0x877C, 0x8B8F, 0x10C7, 0x8F96,
+    0x2B44, 0x271E, 0xAFED, 0x0174, 0xBB13, 0x0781, 0x50B0, 0xF028,
+    0x6081, 0x2509, 0x05D5, 0x7072, 0x7E09, 0xE680, 0xB5DC, 0x12A4,
+    0x0A00, 0xDD6B, 0x6A65, 0xFFC1, 0x9B22, 0x2881, 0x8630, 0x2E50,
+    0x1A1D, 0x9680, 0x7730, 0x4563, 0x2805, 0x8AC8, 0x181D, 0x6218,
+    0x2017, 0x5357, 0x081A, 0x4908, 0x6468, 0x53EB, 0xFC81, 0xBC60,
+    0x7C0B, 0x7660, 0x4808, 0x2867, 0x9C88, 0x0A69, 0x31BA, 0xA30C,
+    0xFA02, 0x5713, 0x8A11, 0x5417, 0x1100, 0x3244, 0x2EEA, 0xBF63,
+    0x02C1, 0x6AE2, 0x112F, 0xCCD9, 0xA5EF, 0x4BC2, 0xF2C8, 0x10B0,
+    0x5E9C, 0x4508, 0x0279, 0x1266, 0xB082, 0x430B, 0xC5E9, 0x45B2,
+    0x390F, 0xC4E3, 0xF210, 0xEBA3, 0x84B8, 0x380A, 0x6178, 0xF221,
+    0x0D10, 0xF7AC, 0x65CF, 0x17B8, 0x31DA, 0xB345, 0xC6E2, 0x4724,
+    0x2041, 0x6138, 0x11E1, 0x7DC2, 0x5D80, 0x83C8, 0xF2C0, 0x5E05,
+    0x0CFE, 0x6C35, 0x10D7, 0x694C, 0x1217, 0xD3F2, 0x03E3, 0xFF31,
+    0x1E83, 0xD2E8, 0xC036, 0xC041, 0xEC55, 0xD685, 0x08BC, 0x6B86,
+    0x0871, 0x6361, 0xA160, 0x6FFA, 0xB524, 0x8503, 0x5C26, 0x3402,
+    0x61C4, 0x88D2, 0x0B19, 0x5069, 0x057C, 0x3490, 0x4446, 0xC772,
+    0xE277, 0x2DAF, 0xA476, 0x0A71, 0x9101, 0xB420, 0xEDCA, 0x8214,
+    0x6DD3, 0x65B2, 0x1A1E, 0xFF64, 0x6158, 0x0E51, 0x0513, 0x196D,
+    0x8B92, 0x2892, 0xD7DB, 0x807C, 0x3C03, 0xA048, 0xF7BB, 0x0DC8,
+    0xBBD6, 0xE867, 0x7903, 0x5F02, 0xBB89, 0xE017, 0xF5BC, 0xD1FB,
+    0xA3A1, 0x0EB5, 0x9E51, 0x8BED, 0x22E7, 0x0104, 0x7811, 0xE16F,
+    0x57C8, 0x6194, 0x8881, 0xB9A8, 0x7D21, 0x285E, 0x5F28, 0x1603,
+    0x127A, 0xE865, 0x3A0B, 0xFEB7, 0xABA1, 0x007D, 0xDED4, 0x4189,
+    0x05E0, 0x8AB2, 0x02C4, 0x6A9B, 0x1F61, 0x0E0F, 0x574D, 0xC990,
+    0x7FE3, 0x4700, 0xD6A9, 0x88D0, 0x3E3A, 0xDC6C, 0x4024, 0x8415,
+    0x9746, 0x1FA1, 0x8487, 0xAF2F, 0x07AB, 0x240B, 0xD5EE, 0x43D9,
+    0x1B66, 0x3075, 0xB872, 0x2049, 0x4528, 0x034C, 0xEDED, 0x78C1,
+    0x034D, 0x03B1, 0x2304, 0xBD30, 0xCD03, 0xAF84, 0xA297, 0x5647,
+    0x099D, 0xD6DE, 0x45D5, 0x9205, 0xA389, 0x103C, 0x7831, 0x4873,
+    0x0076, 0x09C9, 0x628B, 0xAB23, 0x0896, 0x50F1, 0xF198, 0xB1ED,
+    0xCE61, 0x6CE0, 0x43D1, 0xCD42, 0xEB8E, 0x361C, 0x7B01, 0x394E,
+    0xE51C, 0x2EC0, 0x4F64, 0xD64F, 0xADBD, 0x9034, 0x8D48, 0x62EB,
+    0xCCC2, 0xB220, 0x1ADD, 0x5520, 0x3B7E, 0xA179, 0xDDFD, 0x12EC,
+    0xF6DE, 0x7404, 0xA900, 0x0960, 0x118C, 0xE689, 0xC80C, 0x1DC1,
+    0xA0E1, 0xC7AD, 0xBA88, 0xC9D9, 0xB3C5, 0xDBBB, 0x898C, 0x2025,
+    0x867D, 0xDE14, 0x4C0F, 0x14E1, 0x0B1D, 0x5176, 0x609A, 0x900F,
+    0xDB9E, 0x8504, 0x03D0, 0x804B, 0x8064, 0xB151, 0xD630, 0x65E6,
+    0xC0D2, 0x3840, 0xB2E4, 0x0CC4, 0xC63A, 0xE6F1, 0xD772, 0x8C9C,
+    0x043E, 0xDA8A, 0x1300, 0x7A60, 0xD02C, 0xFAA0, 0x487B, 0x5DCC,
+    0x4D81, 0x8D01, 0x80B8, 0x01C9, 0x7E09, 0xDA42, 0x09C2, 0x41EF,
+    0x0B84, 0x4B7A, 0xC090, 0x66D0, 0x008C, 0x22E8, 0xAC93, 0x889B,
+    0x7428, 0x97E7, 0x010B, 0xDEEC, 0xE45C, 0x0183, 0xE80B, 0xB248,
+    0x8881, 0xE961, 0xA19D, 0x8986, 0x0A34, 0x8A44, 0x8005, 0x485D,
+    0xEAF0, 0x4440, 0x80C8, 0x2E42, 0xE730, 0x35C9, 0x305C, 0x8204,
+    0x758B, 0xA469, 0x1A04, 0xEEF0, 0xE221, 0xD70D, 0x1912, 0x710F,
+    0x7A82, 0x1418, 0x9BA0, 0x879E, 0x3E10, 0x3589, 0xA2B8, 0xBC02,
+    0x413E, 0x23E0, 0x7910, 0xE3D8, 0xB4E5, 0x101A, 0x7862, 0x0ABA,
+    0xA9F0, 0x78F3, 0xE8D6, 0xE89A, 0x4497, 0x926E, 0x8416, 0x05FD,
+    0xC436, 0x4009, 0x1C5E, 0x71BF, 0x13BC, 0x0098, 0x3448, 0xD244,
+    0x2036, 0x8E8D, 0xEA39, 0x02E8, 0x8C1E, 0x8383, 0x448A, 0x2442,
+    0x7F75, 0x8C08, 0x4405, 0x783B, 0x8C65, 0xE5E2, 0x7193, 0x3002,
+    0x61D0, 0x1E10, 0x86D0, 0xC8BA, 0x0137, 0xB242, 0x0209, 0x60BB,
+    0xB277, 0x86DE, 0xE00F, 0x989D, 0xE0DA, 0x2008, 0x3E63, 0x4181,
+    0xB80A, 0x00E7, 0x385D, 0xD5A7, 0x090B, 0xC176, 0xDEF2, 0xA15D,
+    0xA9CC, 0x1D00, 0xF0E8, 0x9D84, 0x06D1, 0x9D9E, 0xD330, 0x27B0,
+    0x1B58, 0xC57A, 0x380E, 0xC0D6, 0xD254, 0x2601, 0xD183, 0x007A,
+    0xDE70, 0x4415, 0x0204, 0xA640, 0xF031, 0x14DB, 0xA260, 0xFAB0,
+    0xE4E3, 0x8862, 0x4843, 0x6411, 0x2803, 0x40AB, 0xD6F4, 0x0889,
+    0x87B0, 0x2C97, 0xB88D, 0xCFB5, 0xFD4B, 0xBB5C, 0x04CE, 0x7011,
+    0x4F60, 0x5D10, 0x5FC4, 0xF6E6, 0x48F5, 0xE1E8, 0x82E1, 0x0756,
+    0xB09F, 0x9C79, 0x8C0F, 0x3782, 0xEE38, 0xB88F, 0x6BFB, 0x2E01,
+    0xF73C, 0xA94A, 0x9024, 0x4210, 0x30F6, 0x9499, 0x9CA4, 0x5533,
+    0xEAD5, 0xF290, 0x9756, 0xB097, 0x56AE, 0x2412, 0xF80D, 0xF0C1,
+    0x0EEE, 0xDD1E, 0xB35F, 0x1048, 0xD10F, 0x4268, 0x8303, 0x040E,
+    0x1502, 0x43C0, 0x39C4, 0x768B, 0x458E, 0x3776, 0x0EE4, 0x103E,
+    0x54F5, 0x321B, 0x8B69, 0x9F6B, 0xE418, 0x2080, 0x66C0, 0x0A7F,
+    0xD5AB, 0x4220, 0x8F01, 0x98E0, 0x2176, 0x7C29, 0x0600, 0x5F56,
+    0xAA94, 0x2006, 0x8450, 0xF407, 0x0F22, 0x98E2, 0x1179, 0x8CCC,
+    0x8201, 0x2E9D, 0x0F5A, 0x4591, 0x25C7, 0xF3C5, 0x8F30, 0xB38E,
+    0xE50A, 0x3BB8, 0x7083, 0x0080, 0x1C18, 0xDCC6, 0x6718, 0x103D,
+    0x0F35, 0x4026, 0x18F4, 0x279D, 0x61A7, 0x568C, 0x8E60, 0x38FB,
+    0x7A6C, 0xBA89, 0x68BC, 0x697C, 0x8F56, 0xAE3D, 0xD5AB, 0x4781,
+    0x38B7, 0x1D24, 0x3B17, 0x08C3, 0xE643, 0x0E11, 0xBC97, 0xB782,
+    0x8F7E, 0xF410, 0x611D, 0xB820, 0xFAA5, 0x311E, 0x23C4, 0x80F0,
+    0x2177, 0x39D1, 0x5661, 0x0F3E, 0xA4F4, 0x1F35, 0xBA99, 0xE9C2,
+    0xBC44, 0x44EA, 0xDCE4, 0x03D0, 0x0D3A, 0x8110, 0x13AB, 0x750B,
+    0xAE07, 0x91E2, 0xD8E5, 0x4B40, 0x12BE, 0x2848, 0x6CEE, 0x211F,
+    0xBCE0, 0x805A, 0x0661, 0xF04D, 0x0901, 0x1331, 0x5261, 0xF244,
+    0xB103, 0xD5DE, 0x5AA4, 0x42B0, 0x4182, 0x349C, 0xACC4, 0x1594,
+    0x977F, 0x0BA4, 0x3804, 0xF4C0, 0xC0B1, 0xC3C6, 0x2523, 0x1C90,
+    0x45EE, 0x0051, 0x9900, 0xBE11, 0x3AB8, 0x0089, 0x50F0, 0x7008,
+    0xFAE0, 0x313E, 0x5460, 0x819A, 0xC92A, 0x1DF9, 0x58E8, 0xA311,
+    0x06FA, 0xB56D, 0x060C, 0x8472, 0x1CC7, 0x7325, 0x1030, 0x0BF1,
+    0x0B7C, 0xD870, 0x34CA, 0x2461, 0x7570, 0x3880, 0x63C8, 0xB65C,
+    0x8C23, 0xD844, 0x3984, 0x6300, 0xF071, 0x1066, 0xC812, 0x3CEE,
+    0x3102, 0x4A87, 0xDEF5, 0x5529, 0x2881, 0x2A23, 0x1836, 0x7178,
+    0x37F8, 0x478F, 0x5454, 0x0CD0, 0x20F7, 0x24A9, 0x268B, 0x546B,
+    0x58A8, 0xE082, 0x1D94, 0xC05B, 0x54B1, 0x12A1, 0xEF5D, 0x888F,
+    0x5C49, 0xA3D6, 0x73A8, 0x95B3, 0xD9EF, 0x4E42, 0x7012, 0x04A8,
+    0x27A6, 0xCD2E, 0xACA8, 0x327D, 0x4033, 0x6008, 0x12BE, 0x5984,
+    0x2206, 0x30C9, 0x9500, 0xD17D, 0x5051, 0x3B38, 0x2CB0, 0x1B80,
+    0x46F7, 0x5D44, 0x8FA5, 0x2010, 0x010E, 0x0F6C, 0xF891, 0x8434,
+    0x0543, 0xC898, 0x717A, 0x2968, 0x420F, 0x48F0, 0x081C, 0x249D,
+    0x202D, 0x4A05, 0x4918, 0x0BEE, 0x55F2, 0xEF2D, 0x7205, 0xC91E,
+    0xC0E9, 0x1EAD, 0xEC19, 0x3080, 0x7D5C, 0x28A7, 0x7F94, 0x9757,
+    0x0AAD, 0xF004, 0x2891, 0x1B19, 0xA904, 0x007F, 0x570B, 0xB608,
+    0x7BA4, 0x4C41, 0x4B3A, 0x9029, 0xC611, 0x4B47, 0x9237, 0xF808,
+    0x0DA2, 0xDC10, 0x2BAE, 0x1797, 0x1E90, 0x381B, 0x8FEC, 0xC12B,
+    0x7F17, 0x7075, 0x0DC4, 0xE013, 0xFADF, 0xCCBA, 0xB850, 0x4132,
+    0xA78B, 0x8491, 0x83DB, 0x5603, 0xEA61, 0xF1EA, 0xFCC2, 0x2A58,
+    0x237C, 0x2EA2, 0x5554, 0x0027, 0x9B8A, 0x4416, 0xF812, 0x207A,
+    0xB8D0, 0x7CAD, 0x6461, 0x121F, 0x0EB1, 0x8D7A, 0x0FBA, 0xA88E,
+    0x9017, 0x8FC4, 0x8BC9, 0x94A5, 0xC33A, 0x0BAB, 0x440F, 0xC7C9,
+    0x4345, 0x8B57, 0x7633, 0xF0D1, 0x02A1, 0xC548, 0xC407, 0xA089,
+    0x7139, 0xC3A0, 0xA477, 0x21C3, 0x5D44, 0x2420, 0x58F2, 0x94D8,
+    0xF6B9, 0xD204, 0xA863, 0xEA26, 0x1219, 0xC5FE, 0xB89A, 0x4411,
+    0xE1AA, 0xE4E5, 0xD5AE, 0xA3DB, 0x2C67, 0xE03F, 0xE11E, 0x7C59,
+    0x5A25, 0xA9E4, 0x8F57, 0x3115, 0xCC66, 0x0528, 0x75CF, 0xFA02,
+    0x114C, 0x2037, 0x6593, 0x02AE, 0x6130, 0x8D43, 0xE00D, 0xF16F,
+    0xA952, 0x511D, 0xC2EE, 0xAE7A, 0x540A, 0x1182, 0xE572, 0x97CB,
+    0xE5A3, 0x954A, 0x2008, 0x1FCA, 0xE544, 0x2BF7, 0x56C8, 0x92DE,
+    0x1D34, 0x9EB8, 0xB81E, 0xCC05, 0x1008, 0x08C5, 0x0219, 0x0B72,
+    0x5F98, 0x617D, 0xF604, 0x4A7C, 0x08DA, 0x4087, 0x133B, 0x3038,
+    0x42EC, 0x7B51, 0x0449, 0x2197, 0xCE89, 0x1221, 0x6B03, 0x844F,
+    0x1C70, 0x6281, 0xC5D7, 0x17A2, 0x2E8C, 0x41D0, 0xE5E8, 0x2843,
+    0x66A9, 0xE3AE, 0x2ED2, 0xC86E, 0x2380, 0x06BF, 0x9C80, 0x817F,
+    0x7F0A, 0x1053, 0xAB99, 0x880F, 0x3F81, 0x6DCD, 0x007C, 0x15E6,
+    0x2092, 0x3D5C, 0xCA40, 0x513D, 0x4243, 0xD094, 0x0210, 0x0121,
+    0xFFAC, 0x2464, 0x1CED, 0x8527, 0x957D, 0x074C, 0x8603, 0x6503,
+    0x5D5E, 0xF10F, 0x1D5B, 0x8021, 0xC92A, 0x0D12, 0xA2C7, 0x5C3D,
+    0x086E, 0x4A9D, 0x7D5B, 0xEE5D, 0x5BEC, 0x43C0, 0x9FD5, 0xBF26,
+    0x3628, 0x1D9F, 0x011C, 0x0891, 0xD5BF, 0x4415, 0x760C, 0x2245,
+    0x502D, 0xC30B, 0x4E91, 0x8880, 0x9754, 0x3F88, 0x1415, 0x5040,
+    0x237D, 0xD382, 0x2691, 0xBFD7, 0x1143, 0xC4F9, 0x8416, 0xF1B8,
+    0x80F6, 0xC3B1, 0x8369, 0x81E3, 0xD02D, 0x9FE0, 0x6050, 0xED79,
+    0x407A, 0x6E8C, 0x4E0F, 0x57E2, 0x0E27, 0x1035, 0x877D, 0xF63C,
+    0x8C5B, 0xF5C8, 0x600E, 0x3E08, 0x7822, 0x9BC2, 0xE0C5, 0x5940,
+    0x0DB4, 0xC756, 0xC90F, 0xB19A, 0x07BB, 0xF846, 0xD760, 0x6723,
+    0xDB39, 0x6884, 0x6177, 0x56B6, 0x38C3, 0xA124, 0x1728, 0x6003,
+    0x0EAD, 0x6B79, 0x1BF4, 0xC47A, 0x4080, 0xD58B, 0x206A, 0x9764,
+    0xA84F, 0xDBE1, 0xA37B, 0xCC0F, 0x5E31, 0xFC30, 0x7FCB, 0x29C7,
+    0xB7CC, 0x9606, 0x50B9, 0xEC08, 0x021A, 0xE6D9, 0xAB80, 0x21F4,
+    0xED22, 0x53FA, 0x23FC, 0xBB4D, 0x68F4, 0x6FE2, 0x407A, 0xC985,
+    0x03A3, 0xB271, 0x88E0, 0xF745, 0x18F5, 0x6BF9, 0x90E8, 0x1D04,
+    0x110D, 0xD701, 0x046E, 0x7106, 0x5170, 0xE110, 0x0381, 0x8CF6,
+    0xCEB1, 0xE1AF, 0xC440, 0xF56A, 0x091D, 0x216F, 0x650B, 0x1621,
+    0x9021, 0xBADF, 0xE903, 0x450B, 0x3D07, 0x0225, 0x104F, 0xB047,
+    0x5233, 0x7B74, 0xE07B, 0x0471, 0x0329, 0x001F, 0x7735, 0x163B,
+    0x281C, 0x98EB, 0xD551, 0x257A, 0xE01C, 0x759C, 0x0246, 0x83A0,
+    0x2608, 0x5234, 0x091D, 0x1EB1, 0x12BB, 0x5818, 0xFC48, 0x3A20,
+    0x3028, 0x2278, 0xDCC8, 0x420A, 0x0820, 0x84FA, 0x208C, 0xB84B,
+    0xB1C0, 0xBA04, 0xFB05, 0x0122, 0xE10F, 0x0B78, 0x0CD6, 0x1301,
+    0x6225, 0x0607, 0xD47B, 0x6B1C, 0xC814, 0xE601, 0xEB83, 0x1166,
+    0x6C86, 0x08AF, 0x32D7, 0x8F56, 0xAA9C, 0x5872, 0x8051, 0x110D,
+    0x11D4, 0x7022, 0xBCC4, 0x4A44, 0x08AA, 0x875B, 0xEAA3, 0xC80C,
+    0x87AD, 0xF3D5, 0x0693, 0x1542, 0x1874, 0x41F8, 0xE3EC, 0xA234,
+    0xBAB5, 0xC0AA, 0x7848, 0x321A, 0xA246, 0x9686, 0xBA10, 0x41EA,
+    0x9F1F, 0x2D9D, 0x9006, 0xD6A4, 0xCC8C, 0x06B4, 0xFAE2, 0x0879,
+    0x88B0, 0x8912, 0x04F5, 0x21B4, 0x2AE2, 0x1766, 0xBD8B, 0x3D74,
+    0xA826, 0xD429, 0x6DA7, 0x836E, 0x40BB, 0x1201, 0x2C8C, 0xF103,
+    0xC950, 0x48F0, 0x01C9, 0x50BC, 0xB533, 0xFADB, 0x2C43, 0x12D4,
+    0x3201, 0xC099, 0x0016, 0xA08E, 0xAFD8, 0x82E1, 0x0363, 0x2F5B,
+    0xC44C, 0x0224, 0x92E0, 0x3F8A, 0xD4CB, 0x8FC3, 0x08B5, 0xBC86,
+    0x169A, 0x7920, 0x56B8, 0xC7BE, 0xBE8B, 0x5872, 0x5145, 0xE323,
+    0x028C, 0x21C0, 0x6B34, 0x7D37, 0xA020, 0x180C, 0x0411, 0x4177,
+    0x0312, 0x2018, 0xDDEA, 0x47E1, 0x2F46, 0x11B4, 0x13C6, 0x4A24,
+    0xE90C, 0x0B82, 0x3E1C, 0xCB30, 0x14C3, 0x3B4F, 0x8378, 0x2FEB,
+    0x8002, 0x1B83, 0x31C4, 0x6304, 0x49D2, 0x1BC7, 0xF0A5, 0xE1CD,
+    0x7220, 0xCEE3, 0xE38C, 0x0208, 0x27EA, 0xD4F1, 0x2580, 0xA02C,
+    0x2027, 0xBDD1, 0xEC5D, 0xE776, 0x3E5D, 0x9812, 0xDC46, 0x1D4D,
+    0x1088, 0xD128, 0x0A13, 0xD01D, 0x0403, 0xC21F, 0x644C, 0x1003,
+    0x5B42, 0x5040, 0x14F5, 0xE5F1, 0x12E1, 0x3F73, 0xE88F, 0x14E9,
+    0x2B34, 0x896E, 0x03E6, 0xF30C, 0x605B, 0xDC04, 0x0067, 0x67EC,
+    0x2821, 0x0747, 0xDBAF, 0xC0F0, 0x25BC, 0xE462, 0x24F7, 0x6910,
+    0x8828, 0x787A, 0xB704, 0xB04D, 0x803C, 0x87C0, 0x3CD2, 0x0990,
+    0x7EC9, 0x4C11, 0x0E68, 0x4C0C, 0x4815, 0x5CB4, 0x8970, 0x9FC4,
+    0x67C7, 0x3609, 0x7041, 0x0E20, 0x8038, 0x0ECC, 0x4079, 0x0E87,
+    0x80D9, 0x7FC2, 0x003E, 0x2201, 0x1FCF, 0xEC01, 0x8881, 0x88EF,
+    0x2085, 0x8059, 0x0DD7, 0x990C, 0x8684, 0x1901, 0xF842, 0xC0F8,
+    0x8F38, 0x721A, 0x91C0, 0x3041, 0x1637, 0x40ED, 0x9772, 0x20BC,
+    0xDAE0, 0x5836, 0x42A2, 0x467E, 0x0CD7, 0xC999, 0x4631, 0xC007,
+    0xD4C5, 0x0620, 0x623A, 0x2A14, 0x5214, 0x7B0A, 0x2441, 0x4CC6,
+    0x6191, 0x193B, 0xE797, 0xF18B, 0x1D63, 0x894B, 0x88F4, 0x00E9,
+    0x58C6, 0xA780, 0x000B, 0x838A, 0xB1CC, 0x8A3C, 0x8032, 0xA0DE,
+    0x3C00, 0x22A0, 0xBD09, 0xB6A2, 0x51C4, 0x1804, 0xB88E, 0x3406,
+    0x5904, 0xA3BE, 0xB908, 0x4022, 0x8042, 0x0014, 0x0AD4, 0xD21B,
+    0x6749, 0x4EC2, 0x2E25, 0x87BC, 0x188B, 0x0ABD, 0x3D2F, 0x9108,
+    0x00D8, 0x65C8, 0x3204, 0x0406, 0xC300, 0x8044, 0xAF85, 0x7CBE,
+    0x765E, 0x2521, 0x2103, 0x7C63, 0x4804, 0x3242, 0xEF5E, 0xB328,
+    0x4758, 0x8546, 0x0AA4, 0x74D2, 0x025C, 0x76C9, 0xC08B, 0x4177,
+    0x5729, 0x9E58, 0x821D, 0x5CA0, 0x8757, 0x2717, 0x9717, 0xCBAB,
+    0x9410, 0xD4E6, 0x081B, 0xD5CA, 0x45E9, 0x0221, 0x188D, 0x0387,
+    0x872F, 0x0F8D, 0xBB84, 0x72BB, 0x4C42, 0x013B, 0xC31F, 0x2211,
+    0xF572, 0xB177, 0x1AF9, 0x5AF0, 0x0F2E, 0xAE5D, 0x1F24, 0xBC8D,
+    0xA200, 0xFEED, 0xA8E1, 0xDB3A, 0x8765, 0x4B43, 0xB525, 0x4C2E,
+    0x3840, 0x2E09, 0x6420, 0x18E2, 0x3876, 0x11D9, 0x1201, 0xF846,
+    0x2370, 0xABA9, 0xC0D4, 0x2580, 0xBFE2, 0x2A52, 0x1E45, 0x06B0,
+    0x3B10, 0x43A0, 0x8527, 0x2007, 0xB2DB, 0x89C7, 0xAB97, 0x10F2,
+    0x16E1, 0x7028, 0x6440, 0x8010, 0x270B, 0xB3D6, 0x1302, 0xCC6A,
+    0x56A9, 0x4FDD, 0x9683, 0xF127, 0x20DE, 0x4A05, 0xC088, 0x68EE,
+    0x97C4, 0x6684, 0x7CAB, 0xD0EE, 0x5902, 0x0446, 0xE442, 0x0241,
+    0x8F02, 0x1102, 0x138F, 0x1E1B, 0x7E10, 0x307A, 0x0BB8, 0x3F68,
+    0xF7FD, 0x58F0, 0xFB51, 0xF2E9, 0x58EE, 0x7648, 0x1D33, 0x52A3,
+    0x12AF, 0x63AF, 0x8FA1, 0xA744, 0x8517, 0x0C12, 0xA30F, 0x810F,
+    0x218F, 0x5CA9, 0x110A, 0x1EE7, 0xEF08, 0xE40B, 0x2468, 0xF6E4,
+    0x48FC, 0x5102, 0x4408, 0x5604, 0x8C51, 0x05E3, 0xD6E1, 0xF4B6,
+    0x30F8, 0x39CC, 0x4480, 0x2486, 0xBBEC, 0x8D72, 0x6781, 0x7D10,
+    0x324C, 0xA890, 0xFA01, 0xA217, 0x1003, 0x8780, 0xE479, 0xC668,
+    0x0248, 0x2E47, 0x0EDC, 0x4E18, 0x8802, 0xD809, 0xD3A1, 0x175C,
+    0x6298, 0x81C6, 0xC588, 0x8701, 0xAF17, 0x1043, 0x6EF0, 0x221C,
+    0x252E, 0xBDB1, 0xC120, 0x07AF, 0x33C8, 0xD0F6, 0x57E0, 0xF54C,
+    0x3A5D, 0xEC6E, 0x2438, 0x0BF0, 0x5F09, 0x754B, 0x9A18, 0x51C4,
+    0x0788, 0x1EA9, 0x7A40, 0xBC1F, 0xC0F3, 0x407F, 0xEB9C, 0xB482,
+    0x5024, 0x1423, 0x47F2, 0xBC75, 0x3A41, 0x1B08, 0x8971, 0xE74F,
+    0x7230, 0x7B33, 0x20B3, 0xF4C7, 0x1998, 0x7C25, 0x8E25, 0x0F5B,
+    0x5D93, 0x05D1, 0x4DDB, 0x4E45, 0xF0EC, 0x1180, 0xDD72, 0xD438,
+    0xCA87, 0x8C05, 0x8F57, 0x9296, 0xBF88, 0x581B, 0x92B7, 0xB808,
+    0x5D5B, 0xC438, 0x8400, 0x82E4, 0x92A6, 0x0148, 0x9109, 0xD404,
+    0xB50C, 0xC9F1, 0x56F8, 0xE363, 0x00B0, 0x7839, 0x7AE6, 0x7130,
+    0x8140, 0x601E, 0x91E0, 0xC001, 0x8D00, 0xB7CD, 0x1DA2, 0x4047,
+    0x2206, 0xA00C, 0xB016, 0x87A4, 0x05B2, 0xB20B, 0xBB32, 0x2D06,
+    0x80EE, 0xB9B7, 0x4455, 0x4411, 0x19BB, 0x8348, 0x488D, 0x6E41,
+    0x6983, 0x0C88, 0x3F04, 0x2D02, 0x9984, 0xA172, 0x863E, 0xC134,
+    0x82E1, 0x038F, 0xCE98, 0x7C3C, 0x168C, 0x0D19, 0x00C2, 0x4020,
+    0x01F5, 0x7C41, 0x1AC2, 0x3F8B, 0x7A04, 0x1205, 0xF374, 0x040B,
+    0x0281, 0x7083, 0xC72B, 0xC405, 0x8050, 0x840A, 0x7857, 0x847D,
+    0xEC52, 0x60ED, 0xF704, 0x6C7A, 0xEB94, 0x7C83, 0xD82C, 0x0027,
+    0xAF5D, 0x5815, 0x6A04, 0x181A, 0x4186, 0x0610, 0xC8E6, 0x74D4,
+    0x1C11, 0x0D58, 0x06AB, 0x060C, 0x4004, 0xC5EC, 0xD0E4, 0x0091,
+    0x398F, 0x15BE, 0x09AA, 0x1875, 0xC820, 0xF663, 0xAA01, 0x7B74,
+    0x2A3A, 0xE40D, 0x719F, 0x2DE8, 0x980A, 0x1334, 0x829C, 0xB7A5,
+    0x3D96, 0xF733, 0x1200, 0x758C, 0x9434, 0x022F, 0x5076, 0x8943,
+    0xC226, 0x276F, 0xC79A, 0x5806, 0xB010, 0x0B0C, 0xDE84, 0xF42F,
+    0x7C0D, 0x96BE, 0x7481, 0xE198, 0x1310, 0xBD9F, 0x2154, 0xB834,
+    0x4947, 0xA672, 0x22E1, 0x1DE1, 0xA0BA, 0xBEC9, 0x0640, 0x1081,
+    0x1D11, 0x7165, 0x6716, 0x4511, 0x6568, 0x3922, 0x0020, 0xDC47,
+    0x22B8, 0xB8F8, 0x1CE4, 0x5E28, 0x7C76, 0xF852, 0xA446, 0xF734,
+    0x8796, 0x3A47, 0x7700, 0x43DF, 0x47A7, 0xC16E, 0x67AE, 0x309E,
+    0x4BDA, 0x1262, 0x0A77, 0x54D9, 0x7540, 0x396B, 0xCEC4, 0xB4F5,
+    0x6B62, 0x0172, 0x96D8, 0x3241, 0x7758, 0x1E09, 0x2001, 0x9AA0,
+    0xE6CC, 0x763E, 0x1BC4, 0x9008, 0x5134, 0x81BA, 0xAE02, 0x0840,
+    0xAB30, 0x1F85, 0xD2FB, 0x2558, 0x8D5D, 0x17B0, 0xB1D5, 0xF483,
+    0xB61D, 0x0C19, 0x7B0B, 0x406A, 0xD001, 0x7485, 0x6050, 0x04C9,
+    0x327B, 0x3148, 0x8D00, 0x4088, 0x6374, 0x5610, 0xFBBA, 0x9A44,
+    0x0EE1, 0xDAA5, 0xF187, 0xC171, 0x6EE4, 0x8000, 0xA6AB, 0x0B07,
+    0x8294, 0xD8CE, 0x4A70, 0xA904, 0xCF57, 0xB021, 0x9868, 0x65A9,
+    0x2003, 0x9A45, 0xAF02, 0xB812, 0xD778, 0xA123, 0x54B5, 0xF89E,
+    0x248A, 0x3280, 0xD32D, 0x0B2D, 0xE294, 0x4DB0, 0x00AA, 0x080A,
+    0xA004, 0xAA19, 0x8D22, 0xC482, 0x280D, 0xA00B, 0xB576, 0x4807,
+    0x3542, 0xEE18, 0xA480, 0x9417, 0x5D14, 0x02D1, 0xAA56, 0x76B4,
+    0x3203, 0x9874, 0xA425, 0x3103, 0x45E0, 0x58A0, 0x5FA2, 0xAA0C,
+    0x1C35, 0x89ED, 0x1510, 0x9A06, 0xA940, 0x3D81, 0xE42E, 0x15A1,
+    0xED5F, 0xE2F2, 0x2B18, 0xB042, 0xFC4B, 0xE624, 0x7660, 0xC091,
+    0xDDAD, 0x1E91, 0x3438, 0x0549, 0xDD61, 0x12E2, 0xDE93, 0x4497,
+    0x03F3, 0x380C, 0x0F3F, 0xC070, 0xE67A, 0x400E, 0x3891, 0x3588,
+    0xBED6, 0x9040, 0xF706, 0x360F, 0xE5C1, 0x1074, 0x3B11, 0xC531,
+    0x8BB5, 0xA3D4, 0x0255, 0x0D66, 0x03D3, 0x2025, 0xA1A0, 0xC06E,
+    0x40F8, 0xD07C, 0x7EC8, 0xC46E, 0x7415, 0x7DB1, 0xE68F, 0x6B47,
+    0x34E6, 0xF6E6, 0xFE89, 0x5AC0, 0x2A34, 0x0583, 0x6BB6, 0xF585,
+    0x8009, 0x46A2, 0x4FB5, 0xA3DE, 0x480C, 0x00AA, 0x4516, 0x3111,
+    0x8548, 0xA1DB, 0x1E83, 0xDAD1, 0xED80, 0xDE89, 0xD49D, 0x6061,
+    0x05CC, 0x76B4, 0x73A2, 0x6AFA, 0x837A, 0x042C, 0x0E62, 0x428F,
+    0x5B6B, 0x1F6B, 0x47AE, 0x0590, 0xD3EA, 0x2180, 0x1A65, 0x2908,
+    0xC051, 0x13DA, 0xD1E2, 0x12AF, 0x06CC, 0x8266, 0x8423, 0x20B5,
+    0x414B, 0xF740, 0x9BF7, 0xC023, 0x3014, 0x150B, 0x8205, 0xF0CE,
+    0x22C0, 0xCC23, 0x676B, 0x4718, 0x0225, 0x170A, 0x3CE5, 0x4482,
+    0x2F0D, 0x7B20, 0x0089, 0x2427, 0x6B47, 0x35C5, 0xFD88, 0x2EF6,
+    0x6190, 0x823E, 0x090D, 0x1354, 0xA7B3, 0x5870, 0x1D61, 0x3BCB,
+    0xA0A8, 0x720E, 0x8AD1, 0x070F, 0x287C, 0x5CD0, 0x4691, 0x49E0,
+    0x09A2, 0xE642, 0x459E, 0x4E40, 0x8F8C, 0xABC6, 0x9580, 0x5C21,
+    0x638C, 0x8044, 0x9A00, 0x7E24, 0xCE10, 0x8C87, 0x1E4C, 0x2DEB,
+    0xC443, 0x6037, 0x1400, 0x7977, 0x8C6C, 0xFA03, 0xD020, 0x6B13,
+    0x58A5, 0x82CF, 0x2043, 0x21C9, 0x3148, 0x22F5, 0x23B0, 0xD542,
+    0x1572, 0x1EA1, 0x0C12, 0x1086, 0xBE40, 0x087A, 0xB201, 0xCC6A,
+    0xAB34, 0xA200, 0xDA29, 0x1136, 0xCC16, 0x8601, 0xB446, 0x2828,
+    0x4F5B, 0xCCA3, 0x8E74, 0x02D9, 0xB029, 0xB06C, 0x2244, 0x0599,
+    0xD5D2, 0x8617, 0x6035, 0x483F, 0x70EE, 0x4D76, 0x0F9A, 0x3344,
+    0xABB6, 0x023C, 0x2188, 0x7873, 0x1977, 0x01D8, 0x823A, 0xA711,
+    0x33D1, 0x0104, 0x9038, 0x5C05, 0xCA9F, 0x6E06, 0x91AE, 0x38DC,
+    0x5C1E, 0x29FE, 0x1C96, 0xC1F1, 0xF2F8, 0xFBB8, 0x9442, 0x6004,
+    0x0D23, 0x82EE, 0x3E82, 0x2731, 0x5A10, 0x1001, 0x5F15, 0x8E2E,
+    0x347A, 0x2731, 0xA1AB, 0x4823, 0xD888, 0xF00E, 0xE177, 0x81FA,
+    0x0700, 0x05C7, 0x67CC, 0xE442, 0xAF47, 0x8DD7, 0x8905, 0xE3CC,
+    0x22F3, 0xD5F1, 0x7AD9, 0xA47C, 0x0938, 0x2026, 0xC456, 0x26B0,
+    0xC7DC, 0x09C4, 0x0F7C, 0x5924, 0x3B57, 0x6902, 0x0309, 0xA02E,
+    0x2002, 0xF828, 0x008F, 0x4B30, 0x0F6C, 0x4215, 0x9A81, 0x9225,
+    0x86AC, 0xD68F, 0xA17E, 0x0BC9, 0xE582, 0x1A81, 0x21D5, 0x8991,
+    0x1500, 0xB1F9, 0x4787, 0xF322, 0x2585, 0xCA18, 0xECC4, 0xF640,
+    0x0035, 0x4452, 0x3402, 0xF3A9, 0x2982, 0x0877, 0x2608, 0xB01A,
+    0xA204, 0x0CF3, 0x647B, 0xD610, 0x6CEE, 0x7EE7, 0xBD1C, 0x7100,
+    0x1F9E, 0x013F, 0x7D35, 0x8804, 0x4E80, 0x4468, 0x4D89, 0xE042,
+    0x5340, 0x3C36, 0xBC73, 0x1B3D, 0xAFE0, 0x86C8, 0xC446, 0x8877,
+    0x6A35, 0xEC32, 0x2E20, 0x4174, 0xA41A, 0x0147, 0xF320, 0x1C8D,
+    0x01AD, 0x043E, 0xF8FE, 0x3008, 0xE5B8, 0xE900, 0x286A, 0x44D5,
+    0x0908, 0xD088, 0xE90F, 0xB945, 0x291A, 0xC157, 0x6D48, 0x8896,
+    0xB668, 0x03F2, 0xB107, 0xCDA3, 0xD364, 0xF610, 0x06D3, 0xAA80,
+    0x4904, 0x0CC0, 0x8139, 0x9033, 0xF18C, 0xF8B8, 0x82FD, 0xFD90,
+    0x2C13, 0xBDE0, 0x6E24, 0x0107, 0xE734, 0xC100, 0xB5D6, 0x85E1,
+    0x1A31, 0xB4E0, 0x0121, 0x0A26, 0x096C, 0x1A95, 0xA037, 0x76FD,
+    0x91FE, 0x5FF8, 0xE918, 0x7B65, 0x6440, 0x2114, 0x2E00, 0x387F,
+    0x8216, 0x6C11, 0xD144, 0x4D3E, 0x1BDE, 0xD83D, 0xAFF8, 0x8460,
+    0x0E96, 0x6C50, 0x9CF4, 0x5BA0, 0xF6CB, 0x8091, 0x2B84, 0x31A4,
+    0x4328, 0x8659, 0x5203, 0x1B1E, 0xB9A3, 0x12A7, 0x9A17, 0x2039,
+    0x58BD, 0x3201, 0x50AA, 0x743D, 0xB503, 0x0005, 0x8123, 0x4A07,
+    0x7621, 0xB340, 0x2C2E, 0x7465, 0xB221, 0xDE1D, 0x0E0E, 0x8703,
+    0x13A1, 0x7C25, 0x13C1, 0x341A, 0x22A9, 0x7647, 0x901D, 0xB366,
+    0x644F, 0x9FA9, 0x87D5, 0xD6A2, 0x37D8, 0xB980, 0x38DE, 0x437D,
+    0x6F41, 0x8024, 0x2255, 0x000F, 0x10BB, 0x9019, 0x284D, 0x3422,
+    0x2FB8, 0x0F9B, 0x172A, 0xF2E4, 0x48B3, 0x7482, 0x0CF9, 0xA998,
+    0x43A7, 0xF440, 0xE17A, 0x8022, 0xC010, 0x512E, 0x8004, 0x4B10,
+    0x23E2, 0xD5F9, 0x6023, 0x483C, 0x4140, 0xC847, 0x780F, 0x2B2D,
+    0xE06E, 0xCB52, 0x7B0B, 0x1691, 0x0DA6, 0x3716, 0xC0D3, 0xDA75,
+    0x441A, 0x0203, 0x6B16, 0x3CBE, 0xC0C0, 0x6203, 0x9DA1, 0x6980,
+    0xC2E9, 0x821F, 0x1445, 0x0151, 0x8D8A, 0x8BD4, 0x3DD3, 0xBC37,
+    0x2363, 0x4300, 0x44F3, 0x42C5, 0xC96A, 0xD584, 0xEEB1, 0x689D,
+    0xCB87, 0x520E, 0xB51D, 0x6C4A, 0x901E, 0xC581, 0xA19C, 0x2BFB,
+    0x4C4A, 0xA2C8, 0x9CE0, 0x7914, 0x0C6B, 0x328F, 0x63DE, 0x44FE,
+    0x0B7D, 0x17B4, 0x7EF7, 0xD82D, 0x4B70, 0x9C00, 0x495C, 0x0B94,
+    0x06C8, 0x4604, 0x01BD, 0xD77C, 0x26E8, 0x1251, 0x4308, 0x4806,
+    0xA00C, 0x0248, 0x3680, 0x9259, 0x4129, 0x7A01, 0xED41, 0x8268,
+    0xF206, 0x4111, 0xCD63, 0x3CDA, 0x3B0D, 0x5358, 0xDB28, 0xF015,
+    0x8602, 0xA42C, 0x0241, 0x0F2D, 0x8C1C, 0x3642, 0x0190, 0xA700,
+    0xF637, 0xE02F, 0x1286, 0x312C, 0x07A2, 0x7922, 0x3989, 0x5109,
+    0xE068, 0x0371, 0x936C, 0x51BE, 0xD920, 0x18D5, 0x0B4C, 0x0F83,
+    0x5D90, 0x0B7B, 0x6BC8, 0x8C15, 0xF481, 0x8435, 0x2123, 0x44B1,
+    0xBBC0, 0x0891, 0x9FD4, 0xFE02, 0x029A, 0x05B5, 0xCE2F, 0x1A25,
+    0x6F6E, 0xAD22, 0x2D53, 0x844A, 0xB609, 0xA716, 0x0750, 0xB530,
+    0x6A0C, 0x1828, 0x08E0, 0x88E1, 0x224F, 0x7073, 0xC744, 0x08F7,
+    0x83A1, 0x80A0, 0x570D, 0xD691, 0x3058, 0x19C7, 0x021B, 0x46AA,
+    0x46D0, 0x327F, 0x9747, 0x8068, 0x6894, 0x181A, 0x1525, 0x9236,
+    0x1913, 0x4D89, 0x051A, 0x4C89, 0x3511, 0x8C09, 0x17E8, 0x2158,
+    0x18CF, 0xD042, 0xBA2F, 0x590F, 0xEE8B, 0x7643, 0xD287, 0x8785,
+    0x7B21, 0xBFB6, 0xBD96, 0x7019, 0xD7D3, 0xF0E4, 0x60D4, 0xA203,
+    0x0E8B, 0x7C5C, 0x3034, 0x08C6, 0xAC30, 0xAC05, 0x126A, 0x7880,
+    0xC359, 0x1DE9, 0x00C5, 0x023B, 0xAFFD, 0x0F0D, 0xD818, 0x2519,
+    0xE45C, 0x3028, 0x789F, 0xEC45, 0x6254, 0x55B6, 0xD060, 0x6C63,
+    0x6556, 0x1126, 0x6011, 0x36D4, 0x0586, 0xD030, 0x9EA5, 0x81A8,
+    0x27D0, 0x6317, 0x5007, 0x1162, 0x0B97, 0x2057, 0x66A7, 0x8DA9,
+    0x04A5, 0x02C0, 0xA2AA, 0x81A2, 0x1FEB, 0x4345, 0xC48C, 0x2E8E,
+    0x03C8, 0x8A27, 0xB036, 0xB83F, 0x265A, 0xA439, 0x495C, 0xC2E1,
+    0xE0C0, 0xD221, 0x8A39, 0x2183, 0x81C4, 0xBC15, 0x6638, 0x1714,
+    0x23B0, 0x36A3, 0xDBA2, 0xE914, 0xA954, 0x8087, 0x7B24, 0xF902,
+    0xE340, 0x2201, 0x8F5E, 0xB4C9, 0x2AA1, 0x01BC, 0x7204, 0x3679,
+    0xC2F4, 0xE449, 0x0E43, 0x8783, 0x340B, 0xD09B, 0xC246, 0x04AC,
+    0x6B16, 0xC7C1, 0x92A3, 0xEB4A, 0x72D0, 0xDE91, 0x5C03, 0xFA9D,
+    0x4087, 0x1F44, 0x959C, 0xD41E, 0x2361, 0x1206, 0xBC04, 0x7E2E,
+    0x0C1F, 0x2874, 0x21E1, 0x9B82, 0x0B04, 0x1F6F, 0x4390, 0x5201,
+    0x0E00, 0x0CF6, 0x0680, 0x2830, 0x8B3D, 0x9A1C, 0x8816, 0x0F20,
+    0x0888, 0x47F8, 0xC5C6, 0x0910, 0xB7B1, 0x908A, 0x2299, 0x10C7,
+    0x95E4, 0x1E86, 0xD045, 0x2DB6, 0x187C, 0x0088, 0x5825, 0x92C1,
+    0x24B0, 0x8C28, 0x60B4, 0x02D5, 0x42E8, 0x980B, 0x7808, 0x2287,
+    0x29AA, 0x7301, 0x8535, 0xEDE0, 0x4A84, 0xE4A8, 0x0EC1, 0xC970,
+    0x3B67, 0x09A4, 0x70A4, 0x70B6, 0xE201, 0xC2DE, 0x0001, 0x7137,
+    0x5A70, 0x00C7, 0x9B61, 0x2005, 0x1E49, 0x9ADD, 0xC57A, 0x23BF,
+    0xB13A, 0x4473, 0x06BC, 0xD438, 0x56C2, 0x328B, 0xC32F, 0xE601,
+    0x37E0, 0xDDA1, 0x3440, 0xCB0E, 0x072A, 0x7913, 0x58C7, 0xCF35,
+    0x100C, 0xD733, 0xC7B1, 0xBFD7, 0x1364, 0x6D00, 0x75E6, 0x5A2B,
+    0x8487, 0xB2BC, 0x8728, 0x1801, 0x2C82, 0xA981, 0xF037, 0x2200,
+    0x417D, 0x3F22, 0x5F01, 0x6C38, 0x8046, 0xEA90, 0xFC93, 0x58B3,
+    0xB671, 0x7904, 0x707A, 0xC751, 0x2B67, 0xA004, 0xA17B, 0x7C0A,
+    0x02F0, 0xDC3D, 0x1236, 0x5D23, 0x40B4, 0x3C08, 0x8344, 0xB4ED,
+    0xCC55, 0x4A94, 0x8D25, 0x9A05, 0x7F6F, 0x9609, 0x5AA0, 0x05B0,
+    0x2894, 0x65AC, 0xD02A, 0xADA0, 0x251A, 0x44F3, 0x0291, 0xFA09,
+    0x7605, 0xFB82, 0x1166, 0x8137, 0x6D11, 0x25C8, 0x240D, 0x526A,
+    0xD8C6, 0x055B, 0x4912, 0xD53D, 0x96A4, 0x44D3, 0x4890, 0xB698,
+    0x1AA4, 0xA472, 0x36D4, 0x40AE, 0x4E38, 0x43FF, 0x7F6A, 0x8DB5,
+    0x4088, 0x5C29, 0x9780, 0x4038, 0x7D20, 0x8FF8, 0x8F8C, 0x0155,
+    0x028D, 0x6AAE, 0x0340, 0x8434, 0x474B, 0x6CBC, 0x8FC3, 0x0EE2,
+    0x1038, 0x0DC0, 0x4984, 0xA370, 0x301E, 0x266A, 0x03B5, 0xB695,
+    0xF88B, 0x28CD, 0x01DB, 0x03B8, 0x63CF, 0x0004, 0x91AA, 0xE400,
+    0x9069, 0x1E02, 0xBC62, 0xD91B, 0x6DE5, 0x0A44, 0x05B1, 0xD811,
+    0x3586, 0x7C49, 0x4233, 0xADDF, 0xBE1D, 0xA020, 0x2081, 0x6B95,
+    0x7855, 0xD838, 0x6204, 0x0047, 0x6508, 0x4363, 0xB523, 0x6804,
+    0x8943, 0xB738, 0x9314, 0x2DD2, 0xA791, 0x1B4B, 0x05E8, 0x01C6,
+    0xD513, 0x4445, 0x0241, 0xA513, 0xC06C, 0xDAC8, 0xE41E, 0xC4AC,
+    0xE8BC, 0xA41F, 0xB302, 0x037B, 0x748E, 0xE51C, 0x2C1B, 0x8BA4,
+    0x6BAC, 0x4AC4, 0x56B2, 0x1D2F, 0xBF6E, 0x56BF, 0x7EC4, 0x2367,
+    0x3D00, 0x3AD8, 0xA989, 0xF94E, 0x0511, 0x3EFF, 0x6A4E, 0xDC42,
+    0x2E5B, 0xD112, 0x3144, 0x5711, 0x1C8A, 0xA745, 0xFE08, 0x8E08,
+    0x803C, 0x40D0, 0x4091, 0xF59C, 0x25C4, 0x048F, 0xF042, 0x4125,
+    0xC6BC, 0x058C, 0x8841, 0x608B, 0xDF14, 0x1002, 0x755E, 0xC204,
+    0x9228, 0xF807, 0x806E, 0x0618, 0x4125, 0x51B8, 0x200D, 0x03B3,
+    0x0008, 0x9D8B, 0x8749, 0xA474, 0xA8E9, 0x6384, 0xB4AE, 0x142D,
+    0x12E8, 0x8506, 0x81CA, 0x68FC, 0x6DB8, 0x3DBD, 0x12A0, 0x0E42,
+    0x85BC, 0x4E38, 0xCD53, 0x6C8D, 0xDAE2, 0xC897, 0x007D, 0xFF58,
+    0xB806, 0x1305, 0x2198, 0x3200, 0x60C0, 0x260D, 0x8200, 0x4027,
+    0x6B08, 0x7061, 0x81A2, 0x6B82, 0x2358, 0x0C00, 0x5F5E, 0x67D5,
+    0x77A2, 0x6981, 0xE1F0, 0x3010, 0x2805, 0x6689, 0x9E68, 0x1A31,
+    0xC66F, 0x2973, 0x0449, 0x6772, 0xD210, 0x74D1, 0x330D, 0x8B44,
+    0x01BF, 0xE363, 0x6105, 0x4D23, 0x1BD0, 0x44A2, 0x0AE0, 0xD622,
+    0x0405, 0x2083, 0x53C4, 0xDD34, 0x4C6B, 0x2DA0, 0x5C1C, 0x9E4E,
+    0xDC43, 0xC966, 0x9201, 0xE0D6, 0x3305, 0x3018, 0xE50B, 0x7BB5,
+    0x3901, 0x882D, 0x40D5, 0x2C88, 0xDF32, 0xB20F, 0x78D6, 0x8979,
+    0xC559, 0x8D8F, 0x095F, 0x8E15, 0x6822, 0xF41C, 0x6228, 0x7918,
+    0x3840, 0x2F80, 0x45CB, 0xE191, 0x51E0, 0x5AC3, 0x8040, 0x3D55,
+    0x2C46, 0xB160, 0x4B02, 0xBE2E, 0x9C11, 0x04B8, 0x212C, 0xCE89,
+    0x4B8C, 0x7068, 0x1017, 0xD883, 0x0CAD, 0x5303, 0x036A, 0x2A89,
+    0x4407, 0x0ED4, 0x8D10, 0x6B0A, 0x28D9, 0x4878, 0xC3E0, 0x884C,
+    0x089C, 0x7390, 0xB5E1, 0x6202, 0xF064, 0xC1F1, 0x6590, 0xF2CC,
+    0x1105, 0x48D9, 0x800E, 0x6F0F, 0x8B08, 0xA183, 0x8CCB, 0x143D,
+    0xB614, 0x40A8, 0x0C12, 0xB040, 0x051C, 0x30FC, 0x4073, 0xE418,
+    0xF126, 0xD0E9, 0x4810, 0xAB83, 0x250D, 0x1215, 0x5C06, 0x0558,
+    0x8E5B, 0x29E8, 0x9A04, 0x760B, 0xE820, 0x060C, 0x0B83, 0x040C,
+    0x00A7, 0xE85B, 0xE081, 0x2196, 0x251C, 0x3737, 0x00EE, 0xE870,
+    0xA25A, 0xB003, 0x4560, 0xB7C7, 0x9202, 0x3883, 0x5E32, 0x0440,
+    0x270B, 0xEBF8, 0x0D51, 0xD8D8, 0xEE96, 0xB2F6, 0x8930, 0xE5CA,
+    0x0882, 0x7F90, 0xE6C0, 0x3C7F, 0x9BE6, 0x0902, 0x6C07, 0x87F9,
+    0xDD51, 0x207F, 0x9B9B, 0x2A20, 0xC311, 0xD691, 0xB260, 0x9050,
+    0xA274, 0xA46B, 0xFA9A, 0x308D, 0x6E09, 0x6F20, 0x1906, 0x6C08,
+    0x05C1, 0x1FEA, 0x7532, 0xEE56, 0xC110, 0x2213, 0x0192, 0x021B,
+    0x78A8, 0x547B, 0xA508, 0x4020, 0x851D, 0x6379, 0xF24C, 0x32F0,
+    0xB2C1, 0x1FE3, 0x64EC, 0x2621, 0x8241, 0xA469, 0xA8C1, 0x4866,
+    0xB341, 0x45F1, 0x8242, 0x28CE, 0x5178, 0x8031, 0x1A8D, 0x51EB,
+    0x5711, 0xC230, 0x0650, 0x5F66, 0x51F2, 0x5128, 0x81C1, 0x881E,
+    0x3C1D, 0xC387, 0x85D3, 0x441F, 0x22F7, 0x07B2, 0x09CC, 0xF04C,
+    0xEB05, 0x37C6, 0x71F2, 0xF2F8, 0xC8C4, 0x2153, 0xF49D, 0xB0F7,
+    0x2E79, 0x0C20, 0xCFBD, 0x0E0A, 0xE280, 0x0343, 0xE0B7, 0x7ED9,
+    0x11DB, 0x847A, 0x4829, 0x9ED0, 0x2C06, 0x50E4, 0x3D19, 0xDEBF,
+    0x8F19, 0x3011, 0xFC44, 0x588D, 0x30AC, 0x7F3F, 0x3D07, 0x1045,
+    0x99CC, 0x5998, 0xE59F, 0x58F4, 0x0966, 0x7616, 0x6669, 0x6607,
+    0x6CA4, 0x4229, 0xEB3C, 0x8B6B, 0xBA13, 0x13C1, 0xD345, 0xAFB6,
+    0x1DAE, 0xFC74, 0x6CA2, 0x090C, 0x25CB, 0x1A0D, 0x51F6, 0x0990,
+    0x945E, 0x5D92, 0x2E8D, 0x0591, 0x542D, 0x283D, 0x2638, 0x9016,
+    0x7D05, 0xBDB6, 0x804C, 0x0E24, 0x59B0, 0x141F, 0xE4E1, 0xBA7F,
+    0xF730, 0x6081, 0xC5E8, 0x11E6, 0x21F1, 0xF310, 0xC900, 0x3F1C,
+    0x2688, 0x9FDB, 0x26A2, 0x6105, 0xB87D, 0x8806, 0x2E00, 0x8F56,
+    0xD008, 0x3E3B, 0x8201, 0x3F89, 0x71C8, 0x03E4, 0x47A5, 0xF1BF,
+    0xC888, 0x23F1, 0x9E3C, 0x98B3, 0x814C, 0x0211, 0x6A03, 0x0C92,
+    0xCC14, 0x103C, 0x2DF8, 0x7308, 0xEE0A, 0x3251, 0x445A, 0x0018,
+    0x803C, 0xED30, 0x400C, 0x3E48, 0x0022, 0xC8B9, 0xC066, 0x101F,
+    0xFD1A, 0x4097, 0x396C, 0x2E75, 0x9C43, 0xE23D, 0x02D8, 0x5803,
+    0x0BD9, 0x25C8, 0x4B87, 0xD001, 0x447F, 0xFA4D, 0xD908, 0x3110,
+    0xEAB8, 0x400A, 0xB910, 0x3471, 0x22EF, 0xCF09, 0xF846, 0xDEE6,
+    0x6921, 0xF4BD, 0xD915, 0x4892, 0x0147, 0xB0BC, 0x7807, 0x075F,
+    0x09A1, 0x9964, 0x02A0, 0x638C, 0x03D7, 0x1119, 0x23DB, 0xE192,
+    0xC1E3, 0x0C43, 0xD01E, 0x6401, 0x8E43, 0x40F4, 0x27FB, 0x58E9,
+    0x21E4, 0x45A3, 0xE81F, 0xC79A, 0x80C4, 0x900C, 0x5F5F, 0xB659,
+    0x90A7, 0xA5D1, 0xF783, 0x92D4, 0xA735, 0xBD13, 0x7401, 0x2C3B,
+    0x0FCC, 0x7E26, 0xCE11, 0x5C70, 0x2A73, 0x9EC4, 0x56F8, 0x4410,
+    0x7693, 0x21CB, 0x8C10, 0xAB97, 0xC711, 0xFE55, 0xA363, 0xC0E0,
+    0xD9A6, 0x7D16, 0x2077, 0x2FEE, 0x1E36, 0x2820, 0x8182, 0x3D06,
+    0x3C27, 0x492E, 0xCAAC, 0x1A0E, 0x1F07, 0xF20F, 0x8CCE, 0x902E,
+    0x4081, 0xD830, 0xDAA5, 0x444B, 0x3D84, 0x7364, 0x0D86, 0x4449,
+    0x3D80, 0x9EE6, 0x8F23, 0x94E4, 0xB3B0, 0x1E66, 0xB9D2, 0x021D,
+    0xA6BF, 0x6337, 0x11C2, 0x40E6, 0x0A97, 0x27C5, 0x1EE1, 0x2730,
+    0x08B5, 0x0B73, 0xD293, 0x0283, 0xA860, 0x3638, 0xB538, 0xF816,
+    0x6C48, 0xEF89, 0xEF84, 0x2BF4, 0xA701, 0x71C2, 0x2103, 0x779D,
+    0x122D, 0x7876, 0x3896, 0xA051, 0xB026, 0x7301, 0x7100, 0x4FF0,
+    0x94D8, 0x0EBD, 0x10B2, 0x47F8, 0x475E, 0xC243, 0xA00D, 0x1B04,
+    0x3D1E, 0x1048, 0xFF31, 0xFC39, 0xFA24, 0x3982, 0x101F, 0xE079,
+    0xB1F1, 0x8058, 0x9FE0, 0xE4BC, 0xA5A5, 0x2C1B, 0xE180, 0x2F96,
+    0x9CA4, 0x0166, 0xC182, 0x050B, 0xCFC0, 0xE900, 0x831A, 0x8E48,
+    0x0931, 0x9020, 0x0FF3, 0x87C5, 0x7AE5, 0xD734, 0x4382, 0x1A09,
+    0x1257, 0xB15C, 0x07E3, 0x7B03, 0xF4B8, 0x3096, 0x3ED6, 0x8C19,
+    0xA009, 0x5090, 0xFE27, 0xAE3E, 0x039B, 0x3180, 0x9838, 0x447F,
+    0x0144, 0x11B8, 0x27EB, 0x5D07, 0xC735, 0x2208, 0x809D, 0x9180,
+    0x2029, 0x2A27, 0x8158, 0xE744, 0x951C, 0x0D8E, 0xFCBE, 0x12E4,
+    0x8B3F, 0x8933, 0x6083, 0x364A, 0xC3F8, 0xED36, 0x0A03, 0x7BC7,
+    0x4582, 0x7F1D, 0x681A, 0x3709, 0x8985, 0xC000, 0x8A98, 0x0F9C,
+    0xFC47, 0xC4F3, 0xE207, 0x7C1F, 0x5A33, 0x6010, 0x06C8, 0x687F,
+    0x1C86, 0xC544, 0x0140, 0x7F1C, 0x4810, 0x86C9, 0xC07F, 0x1C34,
+    0x9440, 0x53F8, 0xDF36, 0x0A43, 0x6678, 0x0378, 0xD8E4, 0xF9C2,
+    0x7F6E, 0x2503, 0x0623, 0xFDC2, 0xE2C8, 0xFA80, 0x30A1, 0xF102,
+    0x01B3, 0x43C0, 0x8F3F, 0x87AF, 0x766D, 0x0884, 0x7F0F, 0x1062,
+    0x221F, 0xC3B9, 0xA244, 0x9B02, 0x3203, 0xAFBA, 0xA004, 0x302E,
+    0x48E3, 0xF873, 0x3448, 0x7360, 0x4A3F, 0x8723, 0x604C, 0x873B,
+    0x6745, 0xBAC0, 0x4E3F, 0x86E3, 0x63E1, 0x1E81, 0x0301, 0x33F8,
+    0x6C34, 0x4823, 0x6052, 0x3F86, 0xBF76, 0x7308, 0xA87F, 0x0D26,
+    0xC0AD, 0x3408, 0xD068, 0xCD20, 0x2C1F, 0xC335, 0x1D0B, 0x0788,
+    0x347F, 0x0C90, 0xE22E, 0x2031, 0x9A23, 0xD9B0, 0x2F1F, 0xC30C,
+    0x188C, 0x07F0, 0xC068, 0x8E88, 0x0C47, 0xF0BC, 0x6C6F, 0xFD02,
+    0xC0BA, 0x80CC, 0xA16C, 0xD1B9, 0x7C06, 0x8605, 0xA344, 0x7136,
+    0x06A3, 0xF858, 0x3606, 0xCA0E, 0x62B1, 0xB037, 0x4688, 0xAA6C,
+    0x0E10, 0x6229, 0x9A23, 0x7B03, 0x91FC, 0x291A, 0x33D0, 0x0E87,
+    0xF0A0, 0x6C06, 0x1122, 0x27B0, 0x3B1B, 0x2629, 0x7202, 0x1FC2,
+    0x69B0, 0x3C78, 0x584C, 0x9812, 0xCD82, 0x18D9, 0x9B40, 0xA536,
+    0x0883, 0x6470, 0x40A4, 0xE382, 0x244A, 0x8667, 0x4906, 0x4B04,
+    0x965D, 0x1112, 0x8D8E, 0xFC82, 0x2C08, 0x5542, 0x2162, 0x04EA,
+    0x0853, 0x64C0, 0x3F89, 0xBAF3, 0x1214, 0xFE28, 0x7D8B, 0x1927,
+    0xED49, 0x89C6, 0x812E, 0x825E, 0x6A12, 0x58D8, 0x260D, 0x9A80,
+    0x0250, 0xD826, 0x6186, 0xAE03, 0xE357, 0x1160, 0x91A9, 0xF192,
+    0x0120, 0x6C0F, 0x4C00, 0xE5C8, 0x187F, 0x065E, 0x5E29, 0x903E,
+    0xB211, 0x0BD4, 0x2A48, 0x18F7, 0x5880, 0x9118, 0x4448, 0xF002,
+    0x307F, 0x972B, 0x6D20, 0x3C26, 0x05BD, 0xC56C, 0x416D, 0x8190,
+    0xCA14, 0x203C, 0xB20B, 0x732A, 0xCC77, 0x0A18, 0x1015, 0x0A84,
+    0xFC45, 0x6079, 0x1BE3, 0x6120, 0xB620, 0x1A01, 0xD014, 0x217C,
+    0x5064, 0x831E, 0x3953, 0x19A4, 0x2B50, 0x02E0, 0x17C2, 0xCE22,
+    0x1000, 0xE70E, 0x87E8, 0x44DD, 0x8068, 0x58F5, 0xD57A, 0x1703,
+    0x80FC, 0x177C, 0x4D06, 0x2509, 0xFC07, 0x04BE, 0x0266, 0x434E,
+    0x6A5E, 0xE698, 0x1E3D, 0x8240, 0xD8B0, 0x7B93, 0x9104, 0x0692,
+    0x0A21, 0x3820, 0x8D81, 0xD098, 0x0D9A, 0x6F01, 0xB830, 0x4626,
+    0x3680, 0x06C0, 0xFA14, 0x7B6A, 0x5042, 0x0F87, 0x7FCC, 0x750C,
+    0x0D10, 0x7075, 0x344A, 0x102C, 0xD805, 0xA7F1, 0x019A, 0xDC2E,
+    0x467F, 0x03F4, 0xF636, 0x08A3, 0x640D, 0x3F85, 0x1E30, 0x1C88,
+    0xB616, 0xE651, 0x2380, 0xE073, 0x1604, 0x6EC8, 0x3E12, 0x4B49,
+    0xF23F, 0x01E4, 0x4800, 0x23EB, 0x5824, 0x7F82, 0x1F28, 0xF850,
+    0x5038, 0x3239, 0x4417, 0x3BD6, 0x2910, 0x8A21, 0x823B, 0x9A98,
+    0xB01D, 0x0417, 0x2E21, 0x81D0, 0xCEC4, 0x408D, 0x6AB0, 0x81C4,
+    0xB545, 0x86C6, 0xB83E, 0x00E9, 0x9DB7, 0x6C4E, 0xD1C7, 0x02EA,
+    0x398F, 0x4456, 0x8025, 0x6F07, 0x532D, 0x4F58, 0x9A07, 0x5657,
+    0x897A, 0xABE4, 0x7596, 0x23C8, 0x2284, 0x11C1, 0xA41D, 0xA54E,
+    0x20F9, 0xAE73, 0x01E6, 0x102D, 0xDF88, 0xE3CA, 0x7D49, 0x8EE3,
+    0x3C13, 0x6FB8, 0xFBD3, 0x358E, 0x1D4C, 0x68C3, 0x8ECA, 0xAC20,
+    0x16B9, 0xE84D, 0xF875, 0x4CD2, 0x0109, 0x907E, 0x1F9B, 0x2178,
+    0x0F20, 0x8160, 0x806F, 0xED56, 0x43C2, 0xCC60, 0x14BD, 0x2020,
+    0x4606, 0x3D03, 0x0D33, 0x5A60, 0x0278, 0x5A44, 0x0901, 0xB1BC,
+    0x00C0, 0x5680, 0x5E5D, 0x6A40, 0x2DEF, 0xB621, 0x354C, 0x9C84,
+    0xA791, 0xF831, 0xDC4E, 0x0678, 0x1BB8, 0x80C3, 0xD820, 0x686D,
+    0x5E82, 0x6896, 0xF7FC, 0xA592, 0xA025, 0xF642, 0x2A1F, 0x0606,
+    0x09C0, 0xE0C3, 0x0090, 0x2E70, 0x2602, 0x9DA8, 0xF169, 0x5204,
+    0x705A, 0x87C0, 0xAB03, 0x89E0, 0x8465, 0xA038, 0x1A09, 0x8444,
+    0x0B83, 0x58F8, 0x491A, 0x053E, 0x20F3, 0xEE2D, 0xB4CF, 0x00D4,
+    0xD12A, 0xB13E, 0xAA4F, 0x25DC, 0xB508, 0x1068, 0x148D, 0x8986
+};
+
+static const u16 ap1302_fw_bootdata9[ ] = {
+    0x8000,
+    0x83BA, 0x09A5, 0x128C, 0x09CC, 0x4F6F, 0x2046, 0xE425, 0xBA55,
+    0x280B, 0x2691, 0x1ECB, 0xB969, 0x922F, 0x1404, 0xD411, 0x2E8B,
+    0x6602, 0x0A08, 0x4510, 0x4F32, 0x12D0, 0x0C4D, 0x01E5, 0x0001,
+    0xAFC6, 0x1B22, 0x3852, 0xE308, 0x1471, 0x8918, 0xE389, 0xE9E4,
+    0x40A2, 0x2AA8, 0x911A, 0x80C3, 0x3947, 0x85C9, 0x88D3, 0x89E5,
+    0x519D, 0x3010, 0xA5AA, 0xC400, 0xC0B9, 0x1C4E, 0xC62A, 0x2B18,
+    0x80B8, 0xB480, 0x4102, 0xE286, 0x3782, 0x6E13, 0x9114, 0xB27D,
+    0x1834, 0x049C, 0xCC72, 0xA1C0, 0xF425, 0xE42E, 0xB184, 0x9400,
+    0x93CA, 0x86A2, 0x2201, 0x8192, 0x911D, 0x90BA, 0x2466, 0x2747,
+    0x4805, 0x20E9, 0xE190, 0xFDFB, 0xF7EF, 0xDFBF, 0x402A, 0xE856,
+    0xF181, 0xB1E0, 0x5E22, 0xF944, 0x640C, 0x1962, 0x5E10, 0x2804,
+    0x4702, 0x516D, 0x6373, 0xDC70, 0x0872, 0x4F44, 0x0011, 0x88D8,
+    0x79C8, 0x602C, 0x52C8, 0x0047, 0x6A19, 0xF408, 0xD758, 0x56A0,
+    0x7093, 0xB109, 0xD836, 0x6E02, 0x2C23, 0xF0CE, 0x3E28, 0x34CD,
+    0x9622, 0x8580, 0x0773, 0x421F, 0x046C, 0x89B4, 0x01F6, 0x1BC1,
+    0x15BE, 0x0972, 0x1647, 0x0260, 0xD635, 0x7482, 0x036E, 0xD003,
+    0x6DE0, 0x45D0, 0x1838, 0x8106, 0xB9A4, 0x0595, 0x5705, 0x9019,
+    0xF19C, 0x209A, 0x0686, 0x3552, 0x362D, 0xC226, 0x919C, 0x6D80,
+    0x6DFC, 0x7E96, 0x4059, 0x1520, 0x009F, 0x4A56, 0x3A43, 0x928D,
+    0x0368, 0xF196, 0x0810, 0x741E, 0xD254, 0xCC54, 0x0016, 0x4028,
+    0x1631, 0x2C18, 0x727B, 0xB42E, 0xDA4D, 0x401B, 0x260D, 0x3F59,
+    0x6439, 0x810D, 0x00E5, 0x838E, 0xACD6, 0x0009, 0xEB71, 0x7880,
+    0x39FF, 0x4571, 0x7194, 0xCBE9, 0x03C9, 0x6467, 0x7211, 0xB668,
+    0x12C6, 0x913F, 0xF201, 0x30F9, 0xCBA4, 0x6E2C, 0x29B0, 0x1827,
+    0x1440, 0xF1D9, 0x198D, 0x6813, 0x2049, 0x74E2, 0x0092, 0xAA20,
+    0x486C, 0x9354, 0x8423, 0x401C, 0xED67, 0x9320, 0x462B, 0x8C41,
+    0x8235, 0x1274, 0x0165, 0x9D94, 0x46EB, 0x3DF2, 0x5223, 0x8B04,
+    0x3A31, 0x86D8, 0xEE97, 0xC2C6, 0xE318, 0x2329, 0xAC3E, 0x90C1,
+    0x01AE, 0x39F7, 0x38F8, 0xE044, 0x81FA, 0xE237, 0x22C4, 0x6C70,
+    0x32D1, 0x2B7B, 0xFCD0, 0x4B53, 0x8592, 0x3404, 0xCA6E, 0x2970,
+    0x88EC, 0x0E44, 0x14EC, 0x2468, 0x48E8, 0x6123, 0x1821, 0xD9A4,
+    0x3610, 0x4C39, 0x38DC, 0x5E0C, 0x460F, 0x6F64, 0x8DC4, 0x6232,
+    0xAAC8, 0x89A2, 0xD0D8, 0x423C, 0x4213, 0x445C, 0xB849, 0x88A0,
+    0x7103, 0x866A, 0x8844, 0x55F8, 0xB018, 0x5C2E, 0x1211, 0x5146,
+    0x8305, 0x8A43, 0xE050, 0xC424, 0x9152, 0x4801, 0x0052, 0x3859,
+    0x1434, 0x4473, 0x584A, 0xB834, 0x4435, 0xB348, 0x3234, 0x0362,
+    0xC801, 0xB7E8, 0x155A, 0x0DC2, 0xA760, 0x1AF0, 0x6F21, 0xB7E8,
+    0x0B1D, 0xCF1A, 0x4069, 0xF53B, 0xA21D, 0x0101, 0xD297, 0x72AB,
+    0x2410, 0xAFB0, 0x0C14, 0x0230, 0x291F, 0xB201, 0x2DFA, 0xE3D0,
+    0x08BE, 0x8C2D, 0x4041, 0x3B11, 0x216F, 0x1D4C, 0x52DB, 0xC463,
+    0x288D, 0x02A0, 0x01C3, 0xC246, 0xDC08, 0x0056, 0xDE2D, 0x06E0,
+    0xF2E9, 0xC9F3, 0xC861, 0xECAA, 0xC5DE, 0xD1C2, 0xC7A5, 0x7885,
+    0x8E6C, 0x3056, 0xE823, 0xC3B4, 0x5110, 0x6067, 0x0C15, 0x9000,
+    0x0300, 0x0450, 0x0000, 0x0000, 0x4206, 0x0000, 0x3800, 0x000A,
+    0x4800, 0x1FBF, 0x7EFD, 0xFBF7, 0x98FF, 0x8447, 0x810E, 0x95FD,
+    0x9634, 0x36E3, 0xB888, 0xA001, 0xFAE4, 0x9872, 0x4453, 0xC3AE,
+    0xE44A, 0xA51A, 0x451E, 0x2704, 0x7047, 0xD096, 0x9044, 0x9021,
+    0x2012, 0x8104, 0xE148, 0x3022, 0xB091, 0x0112, 0x0196, 0x4C93,
+    0x3A85, 0xCC0E, 0x619B, 0x4FD9, 0x814C, 0x3362, 0x3CC0, 0x730C,
+    0xF23C, 0x5016, 0x7144, 0x1F9A, 0x2CC4, 0x0104, 0xF69D, 0xE908,
+    0x4050, 0x4403, 0x3CF5, 0x6252, 0x7F93, 0xE2FE, 0x1654, 0x19C0,
+    0x5004, 0x880E, 0x40EE, 0x3286, 0x2FEE, 0x4724, 0x17C2, 0xE9B6,
+    0x6450, 0xA422, 0xEBD3, 0x6F5C, 0xCC5B, 0x55CA, 0x404E, 0xE355,
+    0x86ED, 0x945B, 0xA069, 0x84A3, 0x9859, 0xB926, 0x18A6, 0x32EE,
+    0x7222, 0x1984, 0x0190, 0x6018, 0x8720, 0x0064, 0x18EE, 0x58E5,
+    0x0920, 0x4EE6, 0x0821, 0x36E3, 0x8AA6, 0xE5EB, 0xA6D8, 0x93B0,
+    0x4792, 0x8C88, 0x4BEB, 0xF064, 0x180C, 0x4B48, 0x443B, 0xDE08,
+    0x807E, 0x071C, 0x2210, 0x608E, 0x51F9, 0x763A, 0xE154, 0x350A,
+    0xB862, 0x8706, 0xE0F9, 0x8FB1, 0x0D2B, 0x8954, 0x5A3C, 0xBB18,
+    0xB250, 0x6847, 0x3012, 0x0313, 0xDB71, 0xC400, 0x9108, 0xF3B5,
+    0x6284, 0x2ED7, 0x3826, 0xC420, 0x9119, 0x9298, 0x0994, 0x8285,
+    0x0029, 0x0D23, 0x11E8, 0x4302, 0xC5A9, 0x61E2, 0x402A, 0x79DC,
+    0x2145, 0x178F, 0x3908, 0x010E, 0x68C3, 0xCBEF, 0xDFBF, 0x7EFD,
+    0xFBB1, 0x306F, 0x1BC6, 0xBDDB, 0x6351, 0x3751, 0xAF35, 0xBC03,
+    0x96EE, 0x2C7B, 0x6EA0, 0x8015, 0xBC7B, 0x1B05, 0x85C0, 0x06E9,
+    0xEC84, 0x200A, 0xA39C, 0xA287, 0x01BC, 0x6C1E, 0x76F3, 0x9917,
+    0xF77A, 0x311A, 0x462D, 0xB4AD, 0x01CF, 0x73DB, 0x4F72, 0xA019,
+    0x1A03, 0xB8E1, 0x20C6, 0x4F03, 0x48DC, 0x3A48, 0xFE50, 0xD78A,
+    0x4CC8, 0xF279, 0x6967, 0xD5B6, 0x03D4, 0x4407, 0xD6BB, 0x058B,
+    0x0C8B, 0x30CD, 0x9B35, 0x0F4B, 0x5A0E, 0xE4E9, 0x3A8B, 0x2316,
+    0xF509, 0x93B6, 0x26E5, 0xB639, 0xE52E, 0x21A4, 0x3218, 0xC20D,
+    0x9362, 0x8250, 0xD36C, 0x03B0, 0x0372, 0xD66C, 0x60DC, 0xB890,
+    0xDCB6, 0x9E7C, 0x80F9, 0x6C05, 0xCB6C, 0xFB72, 0xBE53, 0x73E6,
+    0xFB74, 0x3440, 0x35DD, 0x0748, 0x6C18, 0xC380, 0xE438, 0x0C83,
+    0x10C9, 0x8192, 0x1C86, 0x41DC, 0x390D, 0xC310, 0xD061, 0x85C4,
+    0x380C, 0x1085, 0x2188, 0x750D, 0x8340, 0xC839, 0x0C46, 0x71DC,
+    0x7ADD, 0x0D6C, 0x6B0D, 0xF619, 0x4993, 0x641C, 0x860A, 0x1319,
+    0xEC34, 0x2230, 0xCC73, 0xBA0A, 0x7CAF, 0x5149, 0x6E23, 0xA8EE,
+    0x1385, 0xB835, 0xFD24, 0x2DBC, 0x5F5D, 0xBC65, 0xAD8A, 0xCD4D,
+    0xBF21, 0xD142, 0xC540, 0x16EE, 0x7367, 0xD56C, 0x73B7, 0x8D50,
+    0x13B9, 0xD761, 0x0E02, 0x988B, 0xB7C8, 0xAB06, 0x1B7A, 0x4944,
+    0xA405, 0x4769, 0xB2EF, 0x0ECB, 0xB823, 0x3D1E, 0x9D41, 0xAD6C,
+    0xFF55, 0xA7F8, 0x2D81, 0xA2F5, 0x12C8, 0xD7A9, 0x9B27, 0x462F,
+    0xE380, 0xF96B, 0x6CF8, 0x4077, 0xD8CC, 0x8B64, 0xA357, 0x5299,
+    0x9EC7, 0xCD23, 0xAED9, 0x9521, 0x06A7, 0xAB21, 0xBF6F, 0xFA40,
+    0x20DA, 0x2188, 0x3C08, 0x362F, 0xE393, 0x3634, 0x0CBB, 0x3169,
+    0xC9BE, 0xCCAF, 0x5A11, 0xE46E, 0xA196, 0x00A1, 0x5FAE, 0xB9A4,
+    0x4C0E, 0x9992, 0x3CFE, 0x96C8, 0x8F96, 0xC802, 0xCEC7, 0x44B6,
+    0xAB39, 0x80D5, 0x214A, 0xA8A3, 0x60FB, 0x9003, 0x64A2, 0x110F,
+    0x5588, 0x23A0, 0xCA10, 0xEA9C, 0xBE5F, 0x757A, 0x8621, 0x0020,
+    0x96B9, 0x7842, 0x0045, 0x4420, 0x0498, 0x8400, 0x9B1F, 0x193D,
+    0x9361, 0x002A, 0xA210, 0x02CC, 0x4200, 0x5D88, 0x400C, 0x3108,
+    0x0196, 0x2100, 0x34C4, 0x2006, 0xD884, 0x00E3, 0x1080, 0x1D62,
+    0x1003, 0xCC42, 0x007D, 0x9040, 0xC420, 0x0858, 0x8401, 0x1310,
+    0x8023, 0x6210, 0x048C, 0x4200, 0x9588, 0x4013, 0x3108, 0x0276,
+    0x3B90, 0x99B5, 0xC060, 0x89B0, 0x802A, 0x5108, 0x02B6, 0x2100,
+    0x58C4, 0x200B, 0x5884, 0x0173, 0x1080, 0x2F62, 0x1006, 0x0C42,
+    0x00C5, 0x8840, 0x1931, 0x0803, 0x3621, 0x0068, 0xC420, 0x0D58,
+    0x8401, 0xB310, 0x8037, 0x6210, 0x070C, 0x4200, 0xE588, 0x401D,
+    0x3108, 0x03B6, 0x2100, 0x78C4, 0x200F, 0x5884, 0x01F3, 0x1083,
+    0x2D8C, 0x7524, 0x55B7, 0x3E5E, 0xDD5A, 0x6225, 0xA186, 0xFF34,
+    0x2BE9, 0x2B85, 0xB7B9, 0xDEC3, 0x9C6B, 0x8226, 0x6023, 0x1183,
+    0x9910, 0x08E8, 0x0249, 0x1B0D, 0x57DC, 0x5C92, 0x8DD3, 0xC80A,
+    0xC218, 0x9BB7, 0x5FD8, 0x83B1, 0x530E, 0xEE79, 0x8503, 0x0636,
+    0x1F8A, 0x0F75, 0xA4E8, 0xF9B4, 0x4C6A, 0x3E06, 0x8A8D, 0x01A0,
+    0x3200, 0x3ABA, 0x2047, 0x0E5E, 0x3C21, 0x97A0, 0x5B64, 0x53DF,
+    0x0A86, 0x4802, 0x45A4, 0xCAEF, 0xAB1C, 0xB75B, 0xD437, 0x809A,
+    0x1BF7, 0x4FA5, 0x7701, 0x911A, 0x4611, 0xCE19, 0x21B7, 0x6E78,
+    0x285C, 0x4611, 0xE147, 0x63A0, 0xA1D4, 0x6343, 0x7AFD, 0xA66F,
+    0x4E0A, 0x78B5, 0xD48A, 0x3539, 0x9B1B, 0xB8C1, 0x8002, 0x7892,
+    0x29DD, 0x0B90, 0x862B, 0x08A2, 0x9515, 0xCC45, 0x1E37, 0x7CA9,
+    0xE10E, 0x4308, 0x618A, 0x9064, 0xCB02, 0xE030, 0x0000, 0x0000,
+    0x0600, 0x0008, 0x0001, 0x0002, 0x0300, 0x0610, 0x0000, 0x0000,
+    0xFFFF, 0xA1EC, 0x3800, 0x000B, 0x1C28, 0xFD17, 0x9243, 0xD082,
+    0x3742, 0x18E4, 0x0100, 0xC987, 0xF657, 0x0F31, 0x6B8B, 0x0004,
+    0x7202, 0x8A98, 0x4CFD, 0xD016, 0x48A0, 0x101C, 0x00C0, 0xC352,
+    0x6C66, 0xA684, 0x8E43, 0x1040, 0x70D3, 0xF888, 0x86D4, 0x3876,
+    0x7790, 0xE9FE, 0x0B57, 0xD870, 0xE8E1, 0xED06, 0x0C55, 0x0041,
+    0x6018, 0x1883, 0x1D98, 0x080E, 0x2409, 0x693C, 0x094A, 0x8057,
+    0xEACE, 0xCA84, 0x10AA, 0xA904, 0x0228, 0xCA66, 0xB087, 0x41FA,
+    0x0106, 0x4019, 0xD114, 0x6CB1, 0x0C18, 0xC0C1, 0x8392, 0x7E3A,
+    0x6C00, 0x5429, 0x8281, 0x582F, 0x7094, 0x3803, 0x00F2, 0x0163,
+    0x1070, 0x2440, 0x44C4, 0x200C, 0x9018, 0x2F1C, 0x51D6, 0x0C14,
+    0x64A5, 0x82C0, 0x0F2F, 0x8A20, 0xF803, 0x0CBB, 0xDE04, 0xA949,
+    0x061C, 0x2F34, 0x610C, 0xD200, 0x5863, 0x82AF, 0x11A9, 0x0664,
+    0x8451, 0xD630, 0x0C10, 0x867F, 0x2886, 0x2700, 0x0E40, 0xB020,
+    0x0940, 0xD180, 0xF98D, 0x6A1B, 0x0C0E, 0xE184, 0x3E4C, 0x3F0B,
+    0x0440, 0xA17D, 0x5B53, 0x2233, 0x8004, 0x260C, 0xCA1D, 0x41EA,
+    0x2E00, 0x3290, 0x102F, 0x080C, 0x00A0, 0x4648, 0x8018, 0x2E88,
+    0x2A00, 0x7020, 0x4430, 0x0408, 0x3109, 0x8790, 0x16C5, 0xC014,
+    0xC092, 0x0E00, 0xB0B6, 0x41A8, 0x0303, 0x0108, 0xC01A, 0x1688,
+    0xD600, 0xE320, 0x7A58, 0x8840, 0x490B, 0x4A01, 0x110C, 0x3230,
+    0x0901, 0x00C1, 0x804C, 0x4003, 0x8C3B, 0xE9C8, 0x5C02, 0xA158,
+    0xB050, 0x0B05, 0x79F1, 0x00B8, 0x5114, 0x1403, 0x0208, 0x4D60,
+    0x1911, 0xA2C3, 0x00D0, 0x5834, 0x9806, 0xC219, 0x14C0, 0x3811,
+    0x4926, 0x01D0, 0x8B10, 0x8078, 0x2191, 0x2A01, 0xF0A3, 0x4C10,
+    0x1008, 0x4145, 0x4042, 0x2101, 0x0602, 0x2019, 0x3820, 0x230B,
+    0x22CA, 0x8090, 0x450B, 0xEC04, 0xA36A, 0x8C20, 0x2612, 0x630A,
+    0x809C, 0x410C, 0x4C05, 0x0A48, 0x88A4, 0x404C, 0x080A, 0x8605,
+    0x4820, 0x2B0C, 0x9382, 0x02C1, 0xFE5B, 0xA80B, 0x4205, 0x641B,
+    0x02E0, 0x8152, 0x080B, 0xC20C, 0x2203, 0x0084, 0xA231, 0x0875,
+    0x2080, 0xC822, 0x174A, 0x0330, 0x8941, 0x101A, 0x0439, 0x0203,
+    0x5085, 0x3620, 0x3610, 0x3590, 0x80DC, 0x4142, 0x2189, 0xD023,
+    0x101C, 0x880A, 0x0880, 0xE840, 0x086A, 0x03B1, 0x1A22, 0x301E,
+    0x0BA8, 0x4407, 0xA21C, 0x5E50, 0x1F04, 0x3151, 0x80FD, 0x3422,
+    0x4029, 0x1044, 0x0840, 0xC084, 0x0A28, 0xA204, 0x30C1, 0x6A33,
+    0x6088, 0x2005, 0x5502, 0x2880, 0x1C18, 0x1184, 0x04A1, 0x0238,
+    0x4C92, 0x2048, 0x08A6, 0x1A81, 0x2422, 0xC420, 0x4A09, 0x9204,
+    0x0969, 0x4224, 0xC291, 0x3482, 0x1581, 0x3836, 0x150C, 0x09E1,
+    0xB08C, 0x6167, 0x4803, 0x9C18, 0x2FA8, 0xA205, 0x2111, 0x0881,
+    0x4C5E, 0x0F0A, 0x1D94, 0x342E, 0x0551, 0x1367, 0xE360, 0xAC20,
+    0x2A21, 0x02B8, 0x029B, 0x102C, 0x0860, 0x2540, 0xB200, 0x08E6,
+    0x05A4, 0xA112, 0xD880, 0x0094, 0x0B8A, 0xB844, 0xBA01, 0x144B,
+    0xC220, 0x7C60, 0x5F15, 0x4433, 0x0302, 0x5089, 0x8443, 0x8F4A,
+    0x0625, 0x0844, 0xC630, 0xC795, 0x0322, 0x9422, 0x6517, 0xEA26,
+    0x65A2, 0x1133, 0x8111, 0x3940, 0xD064, 0x690A, 0x7678, 0x40D4,
+    0x10A6, 0x840D, 0x6302, 0xA710, 0x360A, 0x4884, 0x0DA3, 0x0240,
+    0x81B8, 0x8576, 0x206F, 0x0C11, 0x081C, 0x02DD, 0x0C40, 0xE216,
+    0xAD00, 0x81C8, 0xA473, 0x32BC, 0x080A, 0x5703, 0xA902, 0x5D81,
+    0xD888, 0x840E, 0xE625, 0x881E, 0x0285, 0xA810, 0x3C88, 0x1B42,
+    0x207A, 0x106A, 0x27B1, 0x0108, 0x81F0, 0x54D8, 0x2103, 0xE883,
+    0x1154, 0x0FC2, 0xC211, 0x03F8, 0x838C, 0x30F8, 0x0028, 0xED00,
+    0x61F0, 0x0471, 0x4220, 0x0211, 0x967C, 0x362F, 0x6507, 0x1022,
+    0xD008, 0x3005, 0x1D95, 0x386C, 0x0186, 0x65BA, 0x0D80, 0x3861,
+    0x2094, 0x0101, 0x8A92, 0x1B00, 0x9084, 0xA20A, 0x0206, 0x6300,
+    0x5864, 0x2598, 0x0302, 0x1583, 0x0D80, 0x6841, 0x2ED4, 0x01C1,
+    0x0258, 0x803C, 0x200F, 0xCA01, 0x0199, 0x5406, 0xC045, 0x6604,
+    0x1809, 0x1C58, 0x0988, 0x3A9C, 0x3602, 0x8302, 0xA60D, 0x80AA,
+    0xD188, 0x3016, 0x38B0, 0x1700, 0x0642, 0x8060, 0xC832, 0x1067,
+    0x4403, 0x49C1, 0x10DA, 0xBF10, 0x6038, 0xB5A2, 0x0C07, 0x4E2C,
+    0x5C00, 0x1451, 0x062E, 0x4440, 0x3E10, 0x2C70, 0x807C, 0x215A,
+    0x5100, 0xFBC7, 0x9B92, 0xD87C, 0x2319, 0x1284, 0x0487, 0x1604,
+    0xAB5C, 0x20C0, 0x9969, 0x8418, 0x13AD, 0x7883, 0x0283, 0x8B02,
+    0x938B, 0x02A5, 0x1C44, 0x5652, 0x1619, 0x0B4C, 0x85C6, 0x42F3,
+    0x2181, 0x90C4, 0xC864, 0x6433, 0x321A, 0x190D, 0x4C86, 0xC643,
+    0x7321, 0xC190, 0xE4C8, 0x7464, 0x3B32, 0x1E28, 0xC223, 0xD13F,
+    0x7001, 0xB0C1, 0x14A0, 0x1F0F, 0xC435, 0xBE0C, 0x3E20, 0x1443,
+    0xE209, 0x887C, 0x4231, 0x0F88, 0x655E, 0x5E21, 0xF111, 0x0664,
+    0x5281, 0x18C0, 0x8E60, 0x4830, 0x2498, 0x128C, 0x0966, 0x04C3,
+    0x0269, 0x8138, 0xC09E, 0x6050, 0x3028, 0x9814, 0x8C0A, 0x6605,
+    0x4302, 0xA981, 0x58C0, 0xAE60, 0x5830, 0x2C98, 0x1694, 0x24CB,
+    0x6002, 0xCE26, 0xC178, 0x5560, 0x0C30, 0xF8C0, 0x07AD, 0xE261,
+    0xF184, 0x3BD3, 0xD40C, 0x4070, 0x0850, 0x318E, 0xAA89, 0x40C8,
+    0x03C0, 0xF503, 0x280F, 0x1298, 0x1980, 0x3CB1, 0x0338, 0x440E,
+    0xD40D, 0x0048, 0xF061, 0x8A26, 0x0397, 0x0608, 0x60BD, 0xC0D6,
+    0xAC14, 0x4D80, 0x1423, 0x5036, 0x8F82, 0xA981, 0xB828, 0x5C92,
+    0x6C1B, 0xC280, 0x0A98, 0x6235, 0x1058, 0x0F10, 0x1BA1, 0x111B,
+    0x1443, 0xE3C0, 0x41A2, 0x881E, 0x4008, 0x02A0, 0x7B00, 0x603B,
+    0x03EA, 0x8422, 0x7E42, 0x227F, 0x28F1, 0x1951, 0xB6A9, 0xF119,
+    0x710B, 0x1B0C, 0x4B40, 0x8CD0, 0x4C31, 0x2D81, 0x4029, 0x6189,
+    0x7012, 0x026B, 0x0C4B, 0xA072, 0xE413, 0x0C4B, 0xC218, 0x0B4C,
+    0x0301, 0x2704, 0x0030, 0x182C, 0x9618, 0x0796, 0x552D, 0x8060,
+    0x5422, 0x3830, 0x05C0, 0x0842, 0x6430, 0x0412, 0x029C, 0x0300,
+    0x5A58, 0x8888, 0x005E, 0xB26C, 0x0900, 0x80FE, 0xA023, 0x4422,
+    0x2501, 0x81FA, 0x8098, 0x084F, 0x06C0, 0x9C06, 0x5C92, 0x6186,
+    0xB200, 0x6645, 0xA112, 0xC1A8, 0x960D, 0xC4B0, 0x6513, 0x6018,
+    0x8409, 0x4B0F, 0xD2CD, 0x8374, 0xA9E0, 0x8880, 0x303C, 0x8C79,
+    0x20B9, 0x04D2, 0x702E, 0x81FE, 0x77AB, 0xE5FE, 0x489E, 0xD87E,
+    0x0100, 0x212A, 0x7881, 0xC6CB, 0x261F, 0x80CC, 0x59A4, 0xFAC3,
+    0x4C68, 0x8187, 0xE055, 0x2840, 0x3F03, 0x003B, 0x0418, 0x7E0F,
+    0x0001, 0x1261, 0xF834, 0x00DF, 0x8261, 0xF829, 0x2044, 0x4401,
+    0xEB10, 0xD806, 0x0010, 0x7940, 0x1200, 0xE8A1, 0xB0C0, 0x2A08,
+    0xB802, 0xD188, 0x8200, 0x2D4E, 0x1B02, 0x0295, 0x2844, 0x3006,
+    0x8020, 0x713B, 0x1E00, 0x5CA1, 0x5780, 0x1751, 0xC401, 0xA3FC,
+    0xFB84, 0x40FD, 0x9E00, 0x996E, 0xA521, 0xC3B1, 0x5F44, 0x91F4,
+    0x6AFC, 0xF74B, 0xD088, 0x0069, 0x9058, 0x9A02, 0x8C20, 0x0542,
+    0x9F8B, 0x0604, 0x531D, 0x9802, 0x860E, 0x1158, 0x2069, 0x7858,
+    0x0202, 0x9948, 0x5802, 0x02A1, 0x1450, 0x011D, 0x1BB4, 0x5908,
+    0x55CB, 0xC064, 0x0084, 0x4376, 0x49C0, 0xB0CC, 0x4092, 0xC008,
+    0x1870, 0xE110, 0x0000, 0x0000, 0x0600, 0x0008, 0x0001, 0x0010,
+    0x0300, 0x45B8, 0x0000, 0x0000, 0x0001, 0x6994, 0x3800, 0x005B,
+    0xE034, 0x0513, 0x47CD, 0x19F2, 0x680A, 0x5068, 0x8A7D, 0x0C88,
+    0x2299, 0xA4C7, 0x24AC, 0x1645, 0x4485, 0x4F0D, 0x0408, 0xA90A,
+    0x81A4, 0x2AC1, 0x88AA, 0xA42B, 0x2856, 0x642B, 0xA857, 0x65E8,
+    0xFDE1, 0x6058, 0xF438, 0xC08B, 0x1BD3, 0x608B, 0x10E8, 0x8088,
+    0x9A42, 0xCC28, 0x8B30, 0x6876, 0x5FC8, 0xC280, 0xB490, 0xB480,
+    0x1A08, 0x4074, 0x8083, 0x4111, 0x2881, 0x289A, 0x42DC, 0x288B,
+    0x7068, 0x8B89, 0x0B8C, 0x85D5, 0x0BAC, 0x85E5, 0x0BDE, 0x84EC,
+    0x117A, 0x1503, 0x485F, 0x8311, 0x7D4B, 0xD207, 0xA2C0, 0xC0A2,
+    0x5081, 0x6688, 0xC081, 0x8788, 0xD288, 0xC2E4, 0x3124, 0x3132,
+    0xECB5, 0xF160, 0x6352, 0xF258, 0xB8B0, 0x3229, 0x0CAA, 0x1959,
+    0x0CCA, 0x1999, 0x0CEA, 0x19D9, 0x0D09, 0x820B, 0xECE0, 0x1638,
+    0x2183, 0xBD51, 0x0ED2, 0x4000, 0xD990, 0x6102, 0xC082, 0xC57D,
+    0x08DC, 0x2C08, 0x56F4, 0x2F41, 0xCD10, 0x0238, 0x8908, 0xFA0E,
+    0x387B, 0xB6C8, 0x5800, 0x482F, 0x451A, 0x1709, 0xE712, 0x0B93,
+    0x000F, 0x3CA7, 0x1004, 0x83E0, 0x6BC3, 0xE51B, 0xE100, 0x484C,
+    0x89F1, 0x0905, 0x8400, 0x121C, 0xE8F4, 0x1D41, 0x8024, 0x4878,
+    0x8F50, 0x780C, 0x207A, 0x2950, 0xBAF6, 0x0848, 0x9DB7, 0xF842,
+    0x63B2, 0x1008, 0xBF3A, 0xB509, 0x19E1, 0x1F21, 0x238D, 0xCF42,
+    0xFF18, 0x0247, 0x9A88, 0x63DA, 0x8111, 0x9F42, 0xFA08, 0x0249,
+    0xF05A, 0x6162, 0x1049, 0x5F3B, 0x2B09, 0x2FBF, 0x6508, 0x476D,
+    0xA000, 0x4982, 0x3100, 0x07C7, 0x9132, 0x00DF, 0x5420, 0x0939,
+    0xAB33, 0x908F, 0x9F62, 0x8939, 0x3009, 0x3A1C, 0x23E0, 0xB41A,
+    0x2768, 0x0164, 0x04C9, 0x3E06, 0x33D1, 0x2CC3, 0x081D, 0x9A98,
+    0x4063, 0x2507, 0xA188, 0x0B25, 0xD04A, 0x29D0, 0x7C2B, 0x392C,
+    0x1463, 0x27A0, 0xFC8E, 0x100A, 0xC400, 0x1292, 0x8B13, 0x794B,
+    0x6212, 0x8F0C, 0x94C3, 0xA23D, 0x9ACC, 0x2C15, 0xFDF5, 0x1053,
+    0xA096, 0x1C07, 0x7842, 0x7881, 0x2C71, 0x1B09, 0x67E6, 0x5FB1,
+    0x2D37, 0xF161, 0x09E1, 0x08C4, 0x4A9F, 0x096B, 0x8D0C, 0x427C,
+    0x8299, 0x2DF4, 0x6A02, 0x13D3, 0x612E, 0x3D08, 0x3459, 0x5072,
+    0x5C1F, 0x0CF1, 0x4E09, 0x004B, 0x9921, 0x5470, 0x9763, 0xC35E,
+    0x6376, 0x12F0, 0x546A, 0x7812, 0xF383, 0x290F, 0x82E7, 0x8401,
+    0x30D2, 0x09FC, 0x3986, 0x261D, 0x3C10, 0x9E98, 0x0986, 0x3233,
+    0xCEEE, 0x0610, 0x0744, 0xA970, 0x9894, 0x00BD, 0x54E6, 0x2081,
+    0x9904, 0x0088, 0x35BD, 0x8A89, 0xBC16, 0xF2BB, 0xD57B, 0x5720,
+    0x4F92, 0x4018, 0xD433, 0xC8A6, 0x0118, 0x3CF7, 0x3D03, 0xC100,
+    0xA440, 0xF3CC, 0xE485, 0x85C8, 0x0BC0, 0x3C08, 0xD0F2, 0x3B30,
+    0x8E20, 0x901C, 0x6D04, 0x3E87, 0xE11F, 0x54D2, 0x0F8D, 0xDF4B,
+    0xA460, 0x877D, 0xE32E, 0xF332, 0x43D1, 0xD8A2, 0x500E, 0xC4D7,
+    0x2503, 0x21D8, 0x283B, 0x4083, 0x44E8, 0x0843, 0x2013, 0x804A,
+    0x0F56, 0x2297, 0x33FC, 0x2E68, 0xA026, 0x08F2, 0x0174, 0xBD98,
+    0x8846, 0xA1C3, 0xD396, 0x63E0, 0x3C91, 0x093C, 0x63C8, 0x408F,
+    0x5C6E, 0x8F40, 0xD590, 0x5298, 0x0650, 0x85BD, 0x16BC, 0xA0AD,
+    0xE571, 0x3935, 0xF842, 0x9080, 0x8448, 0x03DB, 0xECE2, 0x699A,
+    0xC6A9, 0x0050, 0x10DC, 0x5BF4, 0x40C0, 0xA82D, 0xF5F5, 0x491A,
+    0x43E8, 0x4440, 0x02C3, 0x397F, 0xDD79, 0xE5BE, 0xB4A1, 0xDE77,
+    0xC267, 0x101E, 0x4BA0, 0x2009, 0x0334, 0x90E0, 0x4A24, 0x6F74,
+    0xF661, 0x441F, 0x4710, 0x8B1E, 0x59F4, 0x1298, 0xE000, 0xC690,
+    0xB784, 0xEE20, 0x63F5, 0xDE00, 0xFA22, 0x6840, 0xD108, 0x2138,
+    0x3A8B, 0xD27A, 0xF7BC, 0x40A1, 0x3815, 0x203B, 0xB3B0, 0xBBB2,
+    0x3080, 0x9008, 0x15F5, 0xD600, 0x9A25, 0xF970, 0x2816, 0x2061,
+    0xA25F, 0x1620, 0x0792, 0xBD91, 0x3082, 0xD080, 0xD8F0, 0x5D4A,
+    0x85CF, 0x4984, 0x8920, 0x5C9D, 0x9D79, 0xBA5C, 0x038C, 0x401F,
+    0x04D6, 0x11E4, 0x0E9A, 0x25A9, 0x3265, 0x9321, 0x617D, 0xD331,
+    0xE3EA, 0xAD91, 0x0241, 0x0EC8, 0x7020, 0x0408, 0x3A81, 0x5283,
+    0x7D01, 0x3327, 0xA989, 0xC808, 0x2981, 0x5F5D, 0x7721, 0xD4C5,
+    0xC7E9, 0x5D51, 0x2819, 0xAA60, 0x358A, 0x8EE8, 0xC41E, 0x029C,
+    0x2041, 0x151E, 0x8953, 0xDB8F, 0x24C0, 0xF49F, 0x775E, 0x1844,
+    0x8810, 0x3743, 0x974E, 0x3589, 0x843E, 0x96C3, 0x1175, 0xDDD6,
+    0xA94A, 0x4990, 0x268F, 0x8B04, 0xC132, 0x1F97, 0x3DDD, 0x5888,
+    0x043C, 0xD522, 0x5E1A, 0xEC3A, 0xF354, 0xC12B, 0x7C42, 0x3E89,
+    0x8038, 0x911D, 0x13AE, 0x5D67, 0x2E5C, 0xFE08, 0x7C41, 0xD82C,
+    0x306D, 0xFA79, 0x9CCD, 0x0223, 0xBDEC, 0x0FC3, 0x69E4, 0x68F0,
+    0x4371, 0x303C, 0xFE66, 0x5E20, 0xF13F, 0x4E07, 0x1740, 0x6608,
+    0xF5E9, 0xA663, 0xEF21, 0x721E, 0x781C, 0xD108, 0x1CBC, 0x4841,
+    0x1ED0, 0xE82E, 0x85DC, 0x1E9C, 0xA212, 0xD3D7, 0x8348, 0x0A41,
+    0x178A, 0x4987, 0x880D, 0x4815, 0xD3CC, 0xA240, 0x703A, 0x32E8,
+    0x4271, 0xE5BE, 0x4238, 0x7907, 0x2082, 0x7EBE, 0x342E, 0x990B,
+    0x10E0, 0x680D, 0x3CF5, 0x565D, 0x2D5E, 0x367D, 0x006B, 0xCEAB,
+    0x6224, 0xD84A, 0x3922, 0x98F4, 0x6CE0, 0x9082, 0x0F40, 0x8010,
+    0x43D4, 0x0602, 0x5CF7, 0x6FB8, 0xD904, 0x419E, 0x72C6, 0x67A2,
+    0x3EBB, 0xA61F, 0x5387, 0x181A, 0x5094, 0x5D51, 0x867D, 0x9404,
+    0x3D05, 0x7834, 0x6049, 0x7F07, 0x1811, 0xE46B, 0xFA06, 0xC0B8,
+    0x21C9, 0x4EEB, 0x998B, 0x80A3, 0x0337, 0xAE24, 0x09B9, 0xD52F,
+    0x0EB9, 0x10D2, 0x6A73, 0x14D1, 0x24FA, 0x78CC, 0xBB27, 0xC47A,
+    0x3B90, 0x4213, 0xD005, 0xE18A, 0x23C1, 0x8A04, 0xF4EE, 0x5F11,
+    0xE10A, 0xE7E7, 0x7CE1, 0x09C0, 0xE388, 0x15F5, 0xD151, 0xC908,
+    0x285F, 0x57A6, 0x50CE, 0x4A05, 0xB263, 0x383E, 0x1392, 0xC487,
+    0xA6BB, 0x0FCF, 0x48C8, 0x07E7, 0xFA02, 0x7769, 0x3408, 0x21D9,
+    0x4465, 0xE81A, 0xB1F0, 0x1B08, 0xF78E, 0x30F6, 0xE6E8, 0x8C25,
+    0xCCC2, 0x1082, 0xE5D2, 0x9624, 0xD0EC, 0x9F40, 0x0F94, 0xEA20,
+    0x0C95, 0xE9D9, 0x0931, 0x8949, 0xF41D, 0xA96F, 0xF123, 0xDA18,
+    0xE3E7, 0xA8F4, 0x0013, 0xFC0F, 0x1CA3, 0x00B8, 0x124F, 0x00A2,
+    0xEC82, 0xEAD6, 0x831D, 0x2E02, 0x2F43, 0x2329, 0xCCD5, 0x0CDA,
+    0x48CC, 0x4F3B, 0xF42E, 0x4D74, 0x5E70, 0x042E, 0x8E20, 0x2EEE,
+    0xFA4B, 0xAACB, 0x8834, 0x3525, 0x8007, 0x11E8, 0xE549, 0xD034,
+    0x6077, 0x7419, 0x6FDC, 0xE26B, 0x5432, 0x38EB, 0x27A2, 0xA604,
+    0xFEF3, 0xD4E8, 0x8203, 0x804F, 0xDE19, 0x67D0, 0xAD82, 0x0716,
+    0x40AF, 0x9B13, 0x4403, 0x327A, 0x5570, 0xBAFB, 0x88B5, 0x3812,
+    0x6847, 0x8C28, 0xF64C, 0x611E, 0x20EF, 0x5F78, 0x18AD, 0x6E91,
+    0x0280, 0xEB32, 0x8700, 0x6E19, 0x1101, 0x0234, 0x410F, 0x0517,
+    0x0629, 0x29C0, 0x6A00, 0xC60F, 0x5A0D, 0xA00A, 0x00E2, 0x7859,
+    0xC2C2, 0xCFBD, 0x0F0B, 0x79EC, 0x1018, 0xD438, 0x8606, 0xCE24,
+    0xC041, 0x67BC, 0x0608, 0x0E3C, 0x82CE, 0x541C, 0x6689, 0xBC44,
+    0xF680, 0xB205, 0xA9D0, 0x0297, 0x0308, 0x0A27, 0xF479, 0x70F4,
+    0x5A08, 0x921C, 0x4468, 0x85E3, 0x6403, 0xE2F6, 0x0402, 0x8768,
+    0x0405, 0x8050, 0x0485, 0xC7D8, 0x9FC0, 0x8204, 0x16E7, 0x7564,
+    0x0B76, 0x6D22, 0x1E0B, 0xD21F, 0x2759, 0x0F9B, 0xBD27, 0x862C,
+    0x0D67, 0xC1C7, 0xD19C, 0x4606, 0x82E0, 0x3040, 0x611A, 0x2661,
+    0xD406, 0x7A37, 0xCC7C, 0x381E, 0x25C1, 0x15CC, 0x9A47, 0xD7B8,
+    0x24C5, 0xA3C0, 0x1FE4, 0xEFA3, 0xC42D, 0x87A8, 0x9607, 0x9D19,
+    0x4B1C, 0xDF48, 0x40E3, 0x44C3, 0xE230, 0xE404, 0x11C1, 0x6F97,
+    0x4788, 0x1FDF, 0x488C, 0xD41C, 0x0B8E, 0x6FC6, 0x2707, 0x8E14,
+    0x8982, 0xF476, 0x6788, 0xC189, 0x9000, 0x7118, 0x44B8, 0x8C11,
+    0x13C5, 0x68FE, 0x3078, 0xF634, 0x705F, 0x016E, 0x41F5, 0xEFD9,
+    0x0004, 0x1842, 0x3D0A, 0xBDE8, 0xE03D, 0xD212, 0x241F, 0x8D1D,
+    0x8478, 0x153A, 0x9B74, 0x49E0, 0x5460, 0xF1B9, 0xD901, 0xA2F5,
+    0x4A81, 0xA257, 0x77A3, 0x8A25, 0x6D3D, 0x100B, 0x7F09, 0x1C9C,
+    0xA9EA, 0xC292, 0xE8C7, 0xB107, 0x8D02, 0xA498, 0x080D, 0x22A6,
+    0xC9C5, 0xDE17, 0x85DE, 0xAF43, 0xE375, 0x3185, 0x3299, 0x1F1A,
+    0x4E13, 0x36FD, 0x2F4E, 0xE999, 0xA961, 0x5234, 0x4A18, 0x9161,
+    0x89A8, 0x0A0E, 0x038C, 0x5C48, 0x70AA, 0x10FA, 0xF940, 0x7A79,
+    0x0098, 0x143B, 0xD060, 0x45D4, 0x8F04, 0xF7A0, 0xA08F, 0x887A,
+    0x19DC, 0x4BBE, 0xF418, 0x2B1D, 0x07A9, 0xC50F, 0x8758, 0x9F60,
+    0x1D2E, 0x1A26, 0x47A8, 0xFC64, 0x46BA, 0x3F18, 0x112C, 0x3837,
+    0x8A2D, 0x344B, 0x0215, 0x2C64, 0x4A3C, 0x1BFC, 0xDA27, 0xB98D,
+    0x5099, 0x0004, 0x8D29, 0x1154, 0x9A1D, 0x777A, 0x5C49, 0xF8A8,
+    0xA917, 0x0739, 0xE442, 0x7425, 0x4104, 0xBD09, 0x3021, 0x1410,
+    0xB0D0, 0x4205, 0x06B0, 0x82C9, 0xE039, 0x58DE, 0x0D51, 0xC39D,
+    0xB997, 0x424E, 0x889A, 0x9F8B, 0x5113, 0xE9A4, 0xC13D, 0x062E,
+    0x849F, 0x2E84, 0x9611, 0x0A98, 0x25D0, 0x9222, 0x21D3, 0x143A,
+    0x122C, 0x440A, 0x6498, 0xBB49, 0x89A0, 0x1E92, 0x95D4, 0x2058,
+    0x980E, 0x34D8, 0x7C39, 0xB842, 0xB77A, 0x3D19, 0x91DA, 0x62E7,
+    0xE048, 0x0125, 0x812A, 0x4662, 0xC2A8, 0x2C11, 0x0222, 0x3723,
+    0xC12A, 0x4AC7, 0x23C3, 0x20B8, 0x40B9, 0xA63D, 0x6EF0, 0x3E22,
+    0xEF10, 0x54E2, 0xE727, 0x03D2, 0x8E42, 0x3C79, 0x806C, 0x4210,
+    0x507E, 0x1007, 0xD070, 0xBD0F, 0xBD5D, 0x9A22, 0x1759, 0x4490,
+    0x1439, 0x5A08, 0xBC43, 0x725D, 0x1F0A, 0x5E20, 0xD222, 0x6010,
+    0x1C0B, 0x2093, 0xCA28, 0xE3DB, 0x1266, 0x0F94, 0x80A7, 0x1EC4,
+    0x1044, 0x750A, 0xB7E7, 0x110A, 0xC0D0, 0x282C, 0xF1D4, 0x51F9,
+    0x1CB8, 0xEF1A, 0x0EE4, 0x2812, 0x7833, 0xEF67, 0xA2F2, 0xF9B1,
+    0x02BE, 0xBD16, 0x3F1B, 0x9208, 0x2E10, 0x0204, 0xF069, 0xD665,
+    0xC518, 0x6092, 0x8D82, 0x487D, 0xF085, 0xF9F0, 0xFA21, 0x1789,
+    0xE0DF, 0xB301, 0xC640, 0x6049, 0xE49E, 0x4CBC, 0x89B1, 0xC46B,
+    0x83C0, 0x4146, 0x0093, 0xFE65, 0x1A12, 0x78A7, 0x2839, 0x8768,
+    0xDA6C, 0x4D10, 0x6BC8, 0x95C3, 0xDEAA, 0x47EC, 0x3962, 0x03C0,
+    0xC67A, 0x3518, 0xBBD5, 0x390C, 0x1EC2, 0x3E60, 0xF843, 0xBC48,
+    0x8C0C, 0x47BD, 0x548B, 0xBD53, 0x90B8, 0x9848, 0x6443, 0x80B2,
+    0x1048, 0x43FC, 0xFC1F, 0x430E, 0xBD86, 0x43B0, 0x031A, 0xE801,
+    0x44BA, 0x41A0, 0x79AC, 0xD081, 0x24D5, 0x292E, 0xF4F6, 0x1EB8,
+    0x8B2A, 0x0502, 0xD50D, 0x221F, 0xCA5A, 0x25CA, 0xB9C7, 0xA14C,
+    0xC400, 0xEA3E, 0x3229, 0xC203, 0x54EC, 0x2740, 0x0274, 0x22F0,
+    0x5739, 0x10FD, 0xEA4E, 0x6048, 0x6524, 0x2274, 0x2135, 0xCE72,
+    0xE408, 0xEE31, 0x4402, 0x0006, 0xD008, 0x81A8, 0xD3D1, 0x3013,
+    0xF57C, 0x3916, 0xE01F, 0x4CAE, 0x1700, 0xD110, 0x42F5, 0xD102,
+    0x4E80, 0x7C9E, 0x0D7B, 0x3C24, 0x42BE, 0xE675, 0x1E23, 0xFE20,
+    0x5046, 0x0113, 0xE048, 0x3540, 0x0BBA, 0x0F90, 0xA8D8, 0x9ACA,
+    0x503E, 0x17FF, 0x1F1C, 0x2D17, 0x45AF, 0x8DA7, 0x84B7, 0xE76F,
+    0x13DD, 0x1EC2, 0x039B, 0x0019, 0x6FBE, 0x4709, 0xA065, 0x131D,
+    0x9432, 0x3554, 0x6248, 0x006F, 0x0101, 0x9CC2, 0x1532, 0x5D51,
+    0xB440, 0x41A5, 0x59C6, 0x1776, 0x79D1, 0x9253, 0x291A, 0x2601,
+    0x03D3, 0x9FC5, 0xCC5A, 0x4692, 0x970F, 0x7310, 0x37CB, 0xB165,
+    0xDE8C, 0x8510, 0x220E, 0x623C, 0x89A7, 0x86FA, 0xC247, 0xF1E8,
+    0x1E9A, 0x05BF, 0x8C82, 0x07BD, 0x1D48, 0xB640, 0x2027, 0xBC72,
+    0x6A37, 0xE4C9, 0x69E8, 0x8DE2, 0xDF33, 0xC79A, 0xE58F, 0x48EF,
+    0x895E, 0x4314, 0x6740, 0x326B, 0x961D, 0xF450, 0x4748, 0x1350,
+    0x2404, 0x05C9, 0xF9FD, 0xE880, 0xB398, 0xFA23, 0xC172, 0x0C17,
+    0x8C48, 0x1653, 0x0340, 0x2086, 0xDAC3, 0x61C0, 0x2580, 0x3020,
+    0xFEBC, 0x5C69, 0x8808, 0x43A8, 0x443E, 0x8043, 0xA8C4, 0x3AF6,
+    0x66D9, 0xD818, 0x40D3, 0xC2E5, 0x2028, 0xBAA7, 0xEC49, 0x7283,
+    0xC309, 0x0600, 0x98A1, 0x6775, 0xA728, 0x4105, 0x9CB3, 0x2142,
+    0xBD00, 0xE871, 0x2EBA, 0x4AA8, 0x43B1, 0xDC88, 0x09FA, 0x57C0,
+    0x7769, 0xC1B1, 0x008F, 0x0710, 0xE06D, 0x7928, 0x5CCE, 0x6863,
+    0x16BC, 0x17F2, 0x3D50, 0x2026, 0xB10B, 0xDEE0, 0x4582, 0x5402,
+    0x6F42, 0xF208, 0x4C09, 0x97A4, 0x813C, 0x11F4, 0xC828, 0xD8E8,
+    0xC0F1, 0xF90F, 0x5D04, 0x130C, 0x0A84, 0xF046, 0x11D9, 0x5110,
+    0x3C6A, 0x8A44, 0x53F2, 0x6E99, 0x93D3, 0x29F2, 0x3411, 0xF0AE,
+    0x1892, 0x50C5, 0x5260, 0x1374, 0x5920, 0x80DC, 0xF784, 0x6620,
+    0x9583, 0x3CDC, 0x5C43, 0xA94A, 0x3D3D, 0x802C, 0x0041, 0x9CC6,
+    0x804C, 0x99A4, 0x358C, 0x05C9, 0x0420, 0x0480, 0x484B, 0xC243,
+    0x8423, 0xEA09, 0xE1F2, 0x0B58, 0x82B0, 0x4370, 0x901E, 0x9D3A,
+    0x2821, 0x6040, 0x09F9, 0x2BD8, 0x4A2E, 0x6E6E, 0x40A8, 0x4094,
+    0xC002, 0xC503, 0x480F, 0x06A2, 0x5114, 0xF99A, 0x7881, 0x6078,
+    0x1D0E, 0x43B5, 0xAD88, 0x6A03, 0xC028, 0x63E2, 0x1A47, 0x4C00,
+    0xF612, 0xFD74, 0x6C40, 0x71DD, 0x145D, 0x68E2, 0x2298, 0x1273,
+    0x618E, 0x1B72, 0x0042, 0x1790, 0x7D3F, 0x8E87, 0x53C7, 0x0894,
+    0x0719, 0xD1E8, 0x8988, 0x1940, 0xAA07, 0x5168, 0xD0E8, 0x4B41,
+    0x3444, 0xB280, 0xC0E2, 0xDC82, 0x407A, 0xD8C4, 0x65E0, 0x3D23,
+    0x843C, 0x4DAF, 0x5A0E, 0x9703, 0x0011, 0xBA1C, 0xC5A0, 0x3C62,
+    0x8409, 0xF83A, 0x6488, 0x7AEF, 0x8485, 0x6861, 0x1291, 0xE0CC,
+    0xE4C0, 0x9491, 0x9238, 0x1C45, 0xC090, 0x0E98, 0xC100, 0x386A,
+    0x8755, 0x4244, 0x2F79, 0x2B20, 0x6501, 0xC194, 0xB899, 0x074C,
+    0x9080, 0x1C03, 0xC668, 0xC4E8, 0x0803, 0x4E20, 0xE061, 0xDE44,
+    0x6800, 0xE7C8, 0x59E7, 0xB285, 0x0D60, 0xB3B6, 0xB415, 0x1D46,
+    0x9E9A, 0x0412, 0x3922, 0xF210, 0x48F4, 0x8C00, 0x28E6, 0xB0C0,
+    0x9D26, 0x8842, 0x4084, 0x7D1B, 0x602C, 0x75A5, 0x7100, 0x7E7B,
+    0xBA1E, 0xC2E9, 0x200C, 0x8119, 0x83EF, 0x44C8, 0x4919, 0x2720,
+    0x9430, 0x43D4, 0x6B44, 0x6214, 0x8607, 0x4D0F, 0x9989, 0x6B71,
+    0x274A, 0x5ED3, 0x4540, 0xDD0B, 0x3958, 0x327E, 0x671E, 0x47B2,
+    0xF40F, 0x8532, 0x258C, 0x6078, 0x4351, 0xE058, 0x0108, 0x06C5,
+    0x915E, 0x9D78, 0x3312, 0xE261, 0x2320, 0x84A5, 0x6441, 0x3C2E,
+    0x361D, 0x0999, 0x1D8C, 0xDF56, 0x1E1B, 0x2A2A, 0x30A7, 0x400C,
+    0x1133, 0xC46C, 0x843A, 0x00ED, 0x265D, 0x002E, 0x5DEC, 0x129C,
+    0x3002, 0xFDF0, 0x1040, 0xB868, 0x1088, 0x3D0A, 0x702C, 0x77AE,
+    0xA97A, 0x0BB4, 0xBA12, 0x4081, 0x3884, 0x5BE1, 0x0545, 0xD08F,
+    0x45D6, 0xF4A3, 0x9069, 0x4098, 0x2E0C, 0x749B, 0x8903, 0x7D08,
+    0xE83E, 0x79AC, 0x9300, 0xD038, 0xA284, 0x1AF1, 0x6CB1, 0x7423,
+    0x8101, 0x1E62, 0x5D1E, 0x11EE, 0x2080, 0x4BCE, 0x9DC7, 0xA456,
+    0x08F2, 0x1B0D, 0x7370, 0x970F, 0x2D60, 0x8719, 0x3E9B, 0x2090,
+    0x1001, 0x91C4, 0xB87C, 0x7481, 0x7D38, 0xFA80, 0x1851, 0x3765,
+    0x5126, 0x81B2, 0x70B6, 0x2009, 0x70F4, 0xE903, 0xE311, 0x2293,
+    0xE840, 0xD100, 0x7B3C, 0x1CFA, 0x1274, 0xBA67, 0xB449, 0x70FE,
+    0x589D, 0xA010, 0x63A8, 0xA444, 0xA444, 0x0807, 0xADC8, 0x06B9,
+    0x864B, 0xF7D2, 0x58F8, 0x8CBC, 0x8E9E, 0xF6DC, 0x3030, 0x4A9D,
+    0xD206, 0xCAC2, 0xCC80, 0x25C2, 0x2C52, 0xD12D, 0x4432, 0x519E,
+    0x44B0, 0x4821, 0x3A41, 0x0640, 0xD3CB, 0xD5C5, 0x808E, 0x5890,
+    0x167D, 0x3A17, 0x091B, 0xD5F2, 0x264F, 0x426F, 0x9792, 0xE6C8,
+    0x80F0, 0x06D1, 0x02C3, 0xC081, 0xD07A, 0x45D0, 0xA005, 0xDEF2,
+    0x0875, 0xF678, 0x803D, 0x07BC, 0x5862, 0x40D0, 0x27BA, 0x0F54,
+    0x8D02, 0x77D0, 0xD204, 0x4C03, 0xBDA4, 0xDE40, 0xB04D, 0xE3C2,
+    0xC2F1, 0x4879, 0x1A04, 0xCFA1, 0xA44B, 0xC347, 0x860F, 0x7203,
+    0x5306, 0x7C24, 0x7870, 0xE02F, 0xF75C, 0x5103, 0x0110, 0x09DD,
+    0xB583, 0xE114, 0x3110, 0x7AAA, 0x4043, 0x8F2C, 0x6D95, 0x7181,
+    0x0400, 0x7438, 0xA0F6, 0x58E8, 0x861E, 0x3581, 0x2213, 0x2314,
+    0x48CE, 0x8714, 0x2F44, 0x2117, 0x4D68, 0x0880, 0x7088, 0x8078,
+    0x4416, 0x7AAE, 0x50A2, 0x0EF3, 0xD060, 0x5403, 0xC124, 0xCD02,
+    0x13D1, 0x02C7, 0x89A0, 0x4D72, 0x0B88, 0x96A3, 0xAD1B, 0x9F40,
+    0xC815, 0x790F, 0x0094, 0x1F3F, 0xB116, 0x07D0, 0xA950, 0x2BC0,
+    0x21D4, 0xC903, 0x4150, 0x4C83, 0x9804, 0x0038, 0x0640, 0x3FB2,
+    0xC267, 0x87EC, 0x0993, 0xD9D8, 0x25CF, 0xC349, 0x8E9A, 0x9A36,
+    0x8530, 0x6383, 0xE10F, 0xA14B, 0xC480, 0xE7D2, 0xC5E8, 0x1362,
+    0x060A, 0x0881, 0x2708, 0x043D, 0x57F6, 0x2406, 0x3719, 0x0281,
+    0x39DD, 0x12E3, 0xB7E0, 0x0416, 0x10B8, 0x4B60, 0x8CDD, 0xE9D9,
+    0x2607, 0x425E, 0x081A, 0x09D3, 0x83EC, 0x7731, 0x2340, 0x3057,
+    0xC14F, 0xCB00, 0xC0D0, 0x6A11, 0x87D0, 0x1508, 0x36D9, 0x0085,
+    0x01C3, 0xBCEF, 0x879F, 0xF117, 0x845A, 0x480B, 0xEA65, 0x79B1,
+    0xD059, 0x2C7A, 0x26A4, 0x59C1, 0x985D, 0x0D38, 0x3E18, 0xF31B,
+    0x7D84, 0x914E, 0xEB1A, 0x1288, 0xF031, 0x0D01, 0x37BD, 0xB410,
+    0x2E40, 0xD028, 0x7AB8, 0xA880, 0xB0F8, 0x15C1, 0xC877, 0x6D88,
+    0x9A32, 0x83D2, 0x40A6, 0x218B, 0x3226, 0x9309, 0x94FD, 0x73B2,
+    0x4687, 0x8EF2, 0x440B, 0x04A2, 0x54B0, 0x8080, 0x1D52, 0x9438,
+    0xFC40, 0xF69C, 0x044B, 0xE84D, 0xD1B0, 0x590A, 0xA071, 0xD410,
+    0x841D, 0x0AAE, 0x5105, 0xD0DB, 0x03D5, 0xA864, 0x2004, 0xB7D0,
+    0x0CDC, 0x2214, 0x50F3, 0xE831, 0x015B, 0x3387, 0x60C2, 0x742E,
+    0xC673, 0x1028, 0xF615, 0x7D46, 0x9C79, 0xCFA3, 0x4380, 0x7014,
+    0xA821, 0x746C, 0xA089, 0x87B1, 0xA8C1, 0x885A, 0x21CD, 0x74C4,
+    0x8E1D, 0x8B29, 0x2A00, 0x2114, 0x8094, 0x0DA0, 0xB540, 0x4BDE,
+    0x98E7, 0x2421, 0xD8AA, 0xEB25, 0xB2F4, 0x39E0, 0x8064, 0xD8FA,
+    0x3D0A, 0x63D6, 0x3738, 0x0100, 0xAC17, 0x7029, 0x13E3, 0x1754,
+    0x6808, 0x3DD5, 0x65E2, 0x26DF, 0x0824, 0x0813, 0xE93A, 0xD1EB,
+    0x9DE2, 0xED3E, 0xE2C4, 0xB05C, 0xE6E8, 0xBBF9, 0x9081, 0xE211,
+    0x1EA5, 0x3020, 0x4BC8, 0x2808, 0xE264, 0x2E4D, 0x085D, 0x04D0,
+    0x65E6, 0x0442, 0xEF77, 0xC2C4, 0xF887, 0x7BBF, 0x1E27, 0x0230,
+    0x07E0, 0x8A83, 0x10F4, 0x1179, 0x6EC4, 0x45EF, 0x41DB, 0x1785,
+    0x018B, 0x80A3, 0x88A5, 0x5708, 0x4619, 0x3C13, 0x200A, 0x882C,
+    0xE50B, 0x742E, 0x590F, 0x2014, 0xA58B, 0x008F, 0xA4D2, 0x0FC1,
+    0xBDC2, 0x6984, 0x35FC, 0x0608, 0xCC1F, 0x4A0B, 0xACE4, 0x0441,
+    0xB1A1, 0x7612, 0xA088, 0x2000, 0xE5D0, 0xAD26, 0x1021, 0xE3FC,
+    0x32E7, 0x4964, 0x2170, 0x8FB1, 0x1487, 0x810A, 0xBC0E, 0x3447,
+    0x9E85, 0xE122, 0x63AD, 0x0684, 0x52E9, 0x44E2, 0xC006, 0x002F,
+    0x4FA0, 0x08F3, 0xC1A0, 0x8873, 0x8F12, 0x03AB, 0xD904, 0x10E8,
+    0x5AA2, 0xE84F, 0x71B9, 0x448C, 0x047D, 0x45CC, 0x64AD, 0x9504,
+    0x0EB2, 0x9881, 0xA070, 0x3609, 0xB1D6, 0x2AC6, 0x0980, 0xA005,
+    0x99D0, 0x030C, 0x24C0, 0x1027, 0x9436, 0x976E, 0x9608, 0x8668,
+    0x95FD, 0x0D0A, 0x3E8B, 0xBA12, 0xE4E5, 0x3D06, 0x6037, 0xD84B,
+    0x820B, 0x861E, 0x12DB, 0x12EB, 0xA205, 0xC4C2, 0x1AB8, 0x8710,
+    0x80A2, 0x9619, 0xE808, 0xC833, 0x4CA7, 0x26C6, 0x8A76, 0x3E36,
+    0x061E, 0xF2A8, 0x2B3A, 0x8F50, 0x3B88, 0xF601, 0x5111, 0x3029,
+    0x3917, 0x402A, 0x1E41, 0x2A4F, 0x82D2, 0x9648, 0x58D5, 0xE852,
+    0x5018, 0xFD04, 0xFC76, 0xA912, 0xBF87, 0xEC88, 0x1A53, 0x79C8,
+    0x5840, 0x0198, 0x1EE8, 0x0252, 0x9515, 0xD563, 0xE826, 0x019E,
+    0xC4E6, 0xA684, 0x7905, 0x4689, 0x1F89, 0x8087, 0xDE9C, 0x3E1C,
+    0x3960, 0x47E2, 0x3F1B, 0x3605, 0xD4D1, 0xE824, 0x023C, 0x806C,
+    0x6DA1, 0xD43B, 0x23DD, 0x0AA3, 0xE99F, 0xC284, 0x0EBF, 0x5D12,
+    0x0FB6, 0x0388, 0xD942, 0x4000, 0x20A4, 0x7F98, 0x43A8, 0xA47B,
+    0x1990, 0xC057, 0x845D, 0x4704, 0x240D, 0x5721, 0x5788, 0x1E1D,
+    0x56BA, 0x2068, 0x65E7, 0x2502, 0xC18C, 0x36CF, 0x19A4, 0xA344,
+    0xC8A9, 0x0444, 0xD4E8, 0x5882, 0x4B35, 0x325E, 0x2619, 0x1EEE,
+    0x791F, 0x5662, 0x8CC6, 0x27B7, 0x5071, 0x8C21, 0x579A, 0x0019,
+    0xDE7F, 0x99E0, 0xB858, 0x1089, 0xBC35, 0xA07D, 0x46D2, 0x3D8C,
+    0x703D, 0x87A0, 0x2040, 0x7E01, 0x8864, 0x3809, 0xEA39, 0x7287,
+    0x30CD, 0x2EC3, 0x5427, 0x108D, 0x2C49, 0xA6E0, 0x0BA3, 0x7231,
+    0x7A65, 0x8C80, 0xA21A, 0xE472, 0x3C3C, 0xBB40, 0x3DA7, 0x7831,
+    0x4020, 0x8143, 0xB441, 0x0165, 0x15AB, 0x47B1, 0x1BC8, 0x4D40,
+    0x10E8, 0x9282, 0x02C9, 0x2881, 0xBB00, 0x7D05, 0xA240, 0x590C,
+    0x10F6, 0x20F9, 0xB5D1, 0x8FB3, 0x0C38, 0x55CB, 0xD149, 0xC3E2,
+    0x2741, 0x10C8, 0x0301, 0x8938, 0xF17C, 0xD1F1, 0x2CD0, 0x820C,
+    0x707F, 0xF10F, 0xC0BD, 0x85E0, 0x7D74, 0x9622, 0xD016, 0x1F78,
+    0x4C42, 0x4F0E, 0xC0D0, 0x2E4D, 0x7C5E, 0x6EB2, 0x2B8E, 0x84E2,
+    0x030B, 0x43FC, 0x42B9, 0x352F, 0x46AE, 0x9027, 0xD888, 0xE800,
+    0x3EAE, 0x7332, 0xB101, 0x03CC, 0x8745, 0xE83F, 0xE2F4, 0x0F6A,
+    0x772B, 0x1E13, 0x52F5, 0x2DA9, 0x1E40, 0x87A1, 0xDA8A, 0xD1C3,
+    0xD67F, 0x634F, 0x0B27, 0xC044, 0x2E9D, 0x391E, 0xCD8D, 0x1940,
+    0xDDFE, 0x0561, 0x6840, 0x5C38, 0x8802, 0x09CC, 0x08C4, 0x110E,
+    0x23C4, 0x8DA8, 0x047A, 0x1458, 0x2C2F, 0x1D00, 0x2861, 0x00C6,
+    0x39BC, 0x887E, 0xEC10, 0x11E4, 0x3102, 0x451A, 0x9410, 0x2679,
+    0x2701, 0x1512, 0x1C0A, 0xF522, 0x3143, 0x986A, 0x8DDD, 0x2413,
+    0xF99D, 0x5084, 0xEA9B, 0x3067, 0xBDD2, 0x90EC, 0xFE82, 0xC852,
+    0x2073, 0x2178, 0x40AF, 0x0A18, 0x23DE, 0xE785, 0x8070, 0x24C3,
+    0x5562, 0x1B08, 0x2048, 0x3C9D, 0xCCC2, 0x024C, 0x2556, 0x83C5,
+    0x6A04, 0x33F4, 0x20B9, 0x7AF6, 0x744B, 0x0014, 0xFD15, 0xFB81,
+    0xF044, 0x0EF0, 0x4511, 0x0694, 0x17AF, 0x0408, 0x2AE1, 0xA142,
+    0x5B76, 0x1CE9, 0x001E, 0xA5A2, 0x2F20, 0xC516, 0x1790, 0xF233,
+    0x1889, 0x05B7, 0x87CB, 0x8881, 0x3543, 0x1EA5, 0x2A10, 0xD7D4,
+    0xC145, 0x8728, 0x4CD4, 0x0B8E, 0xA103, 0x1BD0, 0xC799, 0x050E,
+    0x48B8, 0x971E, 0x60B6, 0x40CC, 0x9E23, 0xC4D1, 0xA21E, 0x2321,
+    0x00D3, 0xB42B, 0xC47B, 0x10AE, 0xF001, 0x8C3A, 0xEE5E, 0x618F,
+    0x1B42, 0x1484, 0x482B, 0xDE84, 0x42BC, 0xD840, 0x3E87, 0xA22E,
+    0x87B6, 0x1108, 0xBA11, 0x07B0, 0x88BB, 0x112D, 0xF620, 0x1E1F,
+    0x0130, 0x81E0, 0xA020, 0x2101, 0x6F1C, 0x5F8E, 0x31C9, 0x0081,
+    0x3BE5, 0x0FC7, 0xC3E3, 0x7CD8, 0x8307, 0x0304, 0xE524, 0x1F42,
+    0x979D, 0x1E10, 0x0B86, 0x3C88, 0x89E1, 0xFEE1, 0x110B, 0x6F44
+};
+
+static const u16 ap1302_fw_bootdata10[ ] = {
+    0x8000,
+    0x9E10, 0x01E8, 0xFAE3, 0x0292, 0xE876, 0xB403, 0xD0B3, 0xC908,
+    0x4900, 0xDE35, 0xCC2E, 0x1CF2, 0x5CF4, 0xC472, 0x3D8F, 0xCAAC,
+    0xC597, 0x803E, 0x6F42, 0x1EE2, 0xDC33, 0xF82C, 0xE16D, 0xC99A,
+    0xC6E7, 0x91B4, 0x0B04, 0x8880, 0xDE2B, 0x591E, 0xCF0A, 0x1EE6,
+    0x2A20, 0x38D2, 0x08BA, 0xA1B8, 0x5927, 0xBB5F, 0x247D, 0x70D4,
+    0x2011, 0xE043, 0x76E1, 0x71F8, 0x8F5C, 0x8D3F, 0x4437, 0x89F6,
+    0x409A, 0x63D0, 0x263D, 0x02C3, 0x1077, 0xD316, 0xC261, 0x176C,
+    0x0E63, 0x1836, 0x4C10, 0x04C6, 0x0890, 0xEA65, 0x823C, 0x4F3E,
+    0xAA5E, 0x2E88, 0x8221, 0xC098, 0x0205, 0x7004, 0x62E7, 0x4CE2,
+    0x330D, 0x404F, 0x0B77, 0x2378, 0x07C9, 0x8A1B, 0x2401, 0x803D,
+    0x199C, 0x1E48, 0x463E, 0xC24E, 0x2C76, 0xA038, 0x8C60, 0x8848,
+    0x4001, 0xA080, 0x4949, 0x03BD, 0xCE87, 0xC7AC, 0xC235, 0x1421,
+    0x2892, 0x0891, 0xA3EC, 0x908C, 0xD2F6, 0xFC50, 0x18C1, 0x5090,
+    0x9003, 0x4E3E, 0xD566, 0x1066, 0x7000, 0x600B, 0x2EC8, 0x134B,
+    0xA637, 0xC4FD, 0x207B, 0xE2A0, 0x40B2, 0x8680, 0x84DA, 0x2130,
+    0xF239, 0x8F23, 0xB4DE, 0x8766, 0x1194, 0xD60C, 0x1304, 0x301E,
+    0x308B, 0xA369, 0xA43B, 0x0C60, 0xB130, 0x4B76, 0x4098, 0x8C00,
+    0xC0F0, 0x0A0C, 0xE0F8, 0x4424, 0x803D, 0xF44E, 0x33B9, 0xFAEC,
+    0xB042, 0x0ED7, 0x5311, 0x84F9, 0xEA89, 0xC108, 0xB8AA, 0x9988,
+    0xC0F7, 0x4601, 0x8E09, 0x989B, 0x83B8, 0xBD04, 0xD6B8, 0xC040,
+    0xD1E0, 0x531E, 0x056C, 0xA121, 0x1C87, 0x3BFD, 0x8024, 0xDD6E,
+    0xA7B8, 0x04CB, 0xAA8D, 0x8409, 0x3B67, 0xF338, 0x4813, 0x4B95,
+    0xAD22, 0x1185, 0x8A5C, 0x1BB8, 0x78E6, 0x40E0, 0x430E, 0xD90D,
+    0x400F, 0x3F79, 0x22E0, 0x983D, 0x44EE, 0x45C0, 0x5079, 0x0407,
+    0x413C, 0x6A90, 0xE4A8, 0x066B, 0x10FE, 0x68C3, 0x100C, 0x9DF2,
+    0x9628, 0x96A0, 0x292D, 0xCB05, 0x879A, 0x5C88, 0x063C, 0x0360,
+    0x49BC, 0x110C, 0x05B0, 0x07D2, 0x67A2, 0x0EC7, 0x1838, 0xA00E,
+    0xB083, 0x000C, 0xF0C1, 0x7A04, 0xFE33, 0xA035, 0x4779, 0x788E,
+    0xF217, 0x9828, 0x94A6, 0xD75A, 0x00C0, 0x920B, 0x9378, 0x891A,
+    0x1679, 0xAB01, 0x03C8, 0x2C42, 0xE090, 0xEE33, 0xE306, 0x9019,
+    0x4766, 0x9D16, 0xD022, 0x89AA, 0x3174, 0x2BC9, 0x1E80, 0x7770,
+    0xBD98, 0x1838, 0x815E, 0x712C, 0x20A7, 0x2220, 0x806E, 0xE343,
+    0x1F1F, 0x8D8F, 0x9E4C, 0x07A1, 0x2648, 0x59C6, 0x545D, 0x9750,
+    0x2460, 0xEE1D, 0x21EA, 0x3DC1, 0xE295, 0xC468, 0x0A9C, 0x2D34,
+    0xA421, 0x3017, 0x71A0, 0x8DC2, 0x62D0, 0x1080, 0x5EAF, 0x19CA,
+    0x0C10, 0x9A07, 0x80BB, 0x5503, 0x8E3C, 0x422E, 0xE33E, 0x5C09,
+    0x3C48, 0xC149, 0x011C, 0x76EA, 0xF371, 0xED3E, 0x7312, 0xF886,
+    0xC082, 0x3CB3, 0xD4FB, 0x89E4, 0xFD5B, 0x1E24, 0x0771, 0x3D2D,
+    0xC36B, 0x47B8, 0xD012, 0x0153, 0x0934, 0x61E3, 0xDC20, 0xC468,
+    0x073D, 0x0AD6, 0x8771, 0x48A8, 0x12F7, 0x170A, 0x43D2, 0x019B,
+    0x00A9, 0x390D, 0x2267, 0x9026, 0x9848, 0x2775, 0x4E38, 0x82C0,
+    0x2DC7, 0x905C, 0xF43E, 0x291C, 0x618F, 0x63C5, 0x0F4A, 0x880C,
+    0xD800, 0xC8C4, 0x0080, 0x8319, 0x77DB, 0xF804, 0x7378, 0x6888,
+    0x419E, 0x5BA8, 0x35E2, 0x18DC, 0xC0F1, 0x39FB, 0x8D10, 0xC2D4,
+    0x82D5, 0x05AA, 0x1DB8, 0x2871, 0x5244, 0x3B85, 0xB920, 0x24F5,
+    0xA461, 0x5104, 0xC0D1, 0xD486, 0x4233, 0x4291, 0xA009, 0xD092,
+    0x3769, 0x13C8, 0x883D, 0xC684, 0x8F65, 0x210D, 0xCB42, 0x3D41,
+    0x001A, 0x6E77, 0x3462, 0x9DC4, 0x2867, 0x066B, 0xB1F4, 0x2431,
+    0xF711, 0x5314, 0xED00, 0x94D4, 0x0346, 0x5085, 0x0EC2, 0x211F,
+    0x3684, 0x226F, 0x53C4, 0xC265, 0x4E84, 0x832E, 0xE35E, 0x4A9E,
+    0x8992, 0xAC6C, 0xB810, 0x51A3, 0x1416, 0x0DB4, 0xCE55, 0xD290,
+    0xF5D4, 0x188E, 0xC311, 0xE274, 0x1AA5, 0xD180, 0x40F6, 0xA7D8,
+    0x9C41, 0x6775, 0x750F, 0x7107, 0x9F71, 0xB0A0, 0x07A4, 0x45A0,
+    0x2D48, 0x1067, 0xF565, 0xA4DC, 0x3A02, 0x0019, 0xD0B3, 0x13C9,
+    0xF504, 0x893C, 0x07FF, 0x1CBF, 0x9546, 0x8F71, 0xAFA6, 0x049E,
+    0xFDD5, 0x6223, 0xAF24, 0xBA2A, 0x2854, 0xE8BB, 0x8D8D, 0xE409,
+    0xA605, 0x1028, 0x7017, 0x08EE, 0x2ED3, 0x33BD, 0x1D8E, 0x2C71,
+    0x4411, 0x04F8, 0x8719, 0x841D, 0xC69A, 0x8783, 0x804F, 0xB8D3,
+    0x8C00, 0x1150, 0x2080, 0xD24C, 0x0147, 0x423D, 0x1540, 0x206D,
+    0x2010, 0xB2F0, 0xB151, 0x783B, 0x20BB, 0xA1F8, 0x4DB5, 0x2163,
+    0xB8D1, 0x8403, 0xE801, 0x41E8, 0x1CC1, 0x39BA, 0x07C4, 0xF9A6,
+    0x1098, 0x1448, 0x7B98, 0x5440, 0x510C, 0xB3CB, 0x3831, 0x883A,
+    0x3C4E, 0x9EE3, 0x465C, 0x4EA0, 0x24C0, 0x1C0A, 0x181D, 0xC66A,
+    0x8439, 0x3371, 0x90F7, 0x2850, 0x8604, 0x0F93, 0x1E48, 0x7903,
+    0x2611, 0xEE5A, 0xB138, 0xBC05, 0x5E20, 0x7088, 0x051D, 0xB4D0,
+    0x2ED8, 0x2908, 0x8151, 0x8200, 0xA24C, 0x809C, 0x8EC4, 0x7A93,
+    0xB4CB, 0x1010, 0x0A3B, 0xC8C1, 0x4BD1, 0x66A7, 0xDC68, 0x6860,
+    0xB901, 0x9472, 0x0A98, 0xED0B, 0xE170, 0x3A40, 0x0294, 0x2C18,
+    0x0C04, 0x3A6C, 0xF082, 0xCEFB, 0x682E, 0xE00E, 0x1B0D, 0x85B2,
+    0x8003, 0x4880, 0x24BB, 0xF748, 0x7859, 0xE17B, 0x2BFC, 0x7B8B,
+    0x3D32, 0xF8F4, 0x023C, 0x6F82, 0x216F, 0x9405, 0x0BC7, 0x65C2,
+    0x0AF5, 0x34C1, 0x70EC, 0xA226, 0x0F9E, 0xFA79, 0x1022, 0x148D,
+    0xDBC1, 0x04BD, 0x233B, 0xEE20, 0x4A9E, 0x2444, 0x45C1, 0x03E5,
+    0x0172, 0xBE8E, 0x0200, 0x46DC, 0xE7E6, 0xCF12, 0x2F8F, 0x2012,
+    0x2D1E, 0x9B3B, 0x1028, 0x5BB3, 0x6874, 0x8038, 0xF985, 0xE84A,
+    0x0388, 0xF40A, 0x0D01, 0x0300, 0x31F6, 0x7A10, 0x9B5D, 0xCA60,
+    0x41EF, 0x772E, 0x9764, 0xA18D, 0xA340, 0x43B4, 0x7858, 0x583B,
+    0x721C, 0x7AAE, 0x3C6D, 0x1A34, 0xA40E, 0x944F, 0x004A, 0xDD08,
+    0x7719, 0x3B0D, 0xF719, 0x4980, 0x4B00, 0xE810, 0x29B4, 0x09BC,
+    0xDD80, 0x875C, 0x3914, 0xC220, 0x61A0, 0x1225, 0xD4C3, 0xE24C,
+    0x0C05, 0x90C0, 0x0812, 0x603D, 0x86C7, 0xB8C9, 0x041C, 0x024E,
+    0xB9C4, 0x7963, 0xA8B0, 0x0428, 0xDAD5, 0x33CD, 0x4802, 0x4F71,
+    0x92A6, 0x051A, 0x00A0, 0xE454, 0xFA38, 0xDC99, 0x1C46, 0xA1D4,
+    0x88AA, 0xB201, 0xC754, 0x3D56, 0xBC41, 0x7058, 0x81A0, 0x0702,
+    0x0329, 0x0FE4, 0xFC52, 0x0349, 0x5337, 0xBEC1, 0x4BA7, 0x798B,
+    0x8B59, 0x8E17, 0x1833, 0xBC4E, 0x6423, 0xCDFA, 0x905A, 0x99B6,
+    0xC000, 0x2F3B, 0x7884, 0xC676, 0xA37A, 0xEE0E, 0x2100, 0x3D40,
+    0x743D, 0x351C, 0x3C33, 0xD04F, 0x2EB4, 0x502C, 0x7260, 0x12FA,
+    0x6D9C, 0x789C, 0x1970, 0xD3C4, 0x80E2, 0xE82C, 0xED9E, 0x053A,
+    0xBFF9, 0x1EF5, 0xBB10, 0x4876, 0x22BA, 0xC000, 0xC354, 0x6E29,
+    0x2264, 0xF726, 0x7ABF, 0xFC8F, 0x354B, 0xA4C0, 0xE102, 0x71E2,
+    0x81C0, 0x6C86, 0x79D1, 0xC407, 0x8F5B, 0x3260, 0xF57F, 0xF1E1,
+    0x3C06, 0x65A0, 0xD02B, 0xDD0D, 0x82C7, 0x5467, 0x9304, 0x5263,
+    0x303C, 0xC089, 0x581C, 0xCC11, 0x1CF9, 0xD311, 0xB067, 0xF860,
+    0x790F, 0x2E49, 0x0829, 0x7040, 0xF79F, 0xE084, 0x0069, 0x3A1B,
+    0x93BD, 0x5FF6, 0x4442, 0x9818, 0x2902, 0x99C1, 0xA3B9, 0x60CF,
+    0x57FD, 0x993A, 0xA806, 0x0751, 0x865B, 0x97AC, 0x7857, 0xCC5B,
+    0xC4A6, 0x2C17, 0x4041, 0x6543, 0x4442, 0xEFBA, 0xA2CE, 0xA61B,
+    0x401F, 0x50D1, 0x9757, 0xFD18, 0xF07F, 0xA1E7, 0x1531, 0x083A,
+    0xAA6C, 0x440F, 0x1242, 0x093C, 0x6896, 0x44CF, 0xB29B, 0x47C2,
+    0x8EE8, 0x66D4, 0x10E2, 0x689E, 0x0026, 0x4541, 0x746C, 0xA083,
+    0x5D89, 0x7254, 0x18FB, 0x00F0, 0x7AC0, 0x2900, 0x2CCE, 0x9DCD,
+    0xC3D9, 0x5C22, 0x5F43, 0x91A2, 0x51F4, 0xCD38, 0x9A9D, 0x0AA8,
+    0x4071, 0xA249, 0x8A46, 0x8140, 0x4C14, 0x1042, 0x7061, 0xA502,
+    0xFFAC, 0x010C, 0x7D55, 0xEAFE, 0xA4DC, 0x40B2, 0x0A5E, 0x5D63,
+    0x5A7D, 0x6008, 0x448A, 0x4002, 0xF843, 0x10B1, 0xD603, 0xE877,
+    0x8DC1, 0x04FD, 0x6008, 0x9817, 0x5022, 0xCD3E, 0x0ED9, 0x361E,
+    0xB004, 0x2215, 0x02D2, 0x502E, 0x4028, 0x8A16, 0x7AE5, 0x9143,
+    0xC82C, 0xE77B, 0x0A8E, 0xE147, 0xACA2, 0x047D, 0xE975, 0x91F2,
+    0xFFF8, 0x8460, 0x1782, 0x11CC, 0x08EB, 0x3B65, 0x4C3E, 0xA959,
+    0x130C, 0x611E, 0x5AEB, 0x3C53, 0xEE3A, 0x33EB, 0x3D45, 0x23D1,
+    0x038F, 0x147B, 0x2190, 0xCA36, 0x03AF, 0x56BD, 0x08C7, 0xD390,
+    0x6227, 0x6764, 0x8901, 0xE898, 0x6203, 0xC31F, 0x1582, 0x0C20,
+    0x083C, 0x7EA4, 0x452C, 0xA1F1, 0xEA7B, 0xE200, 0xB996, 0x9A00,
+    0x51AD, 0x5784, 0x0592, 0xC0A1, 0x01D3, 0x23E2, 0x397A, 0xC624,
+    0x8D92, 0x14F0, 0x0E6C, 0x581C, 0x2264, 0x426F, 0x04DC, 0x1651,
+    0xB174, 0xDC78, 0x867E, 0xC7BA, 0x21F4, 0xB3E8, 0x2972, 0xF463,
+    0xA185, 0x4051, 0x3D2C, 0x3179, 0x1C31, 0x61C3, 0x5044, 0x2AEB,
+    0xEE32, 0x2E40, 0x8E91, 0xB820, 0x2AB9, 0x4591, 0xDBAC, 0x6EC8,
+    0x9A47, 0x1180, 0x490C, 0x3647, 0xC6CD, 0xC5D9, 0x7122, 0x11F1,
+    0x6BB2, 0xF56C, 0x30E2, 0xA701, 0x3BAC, 0x2544, 0x1334, 0x0393,
+    0x6496, 0x038A, 0xA054, 0x80F2, 0xDE12, 0x0020, 0x6216, 0x7656,
+    0xF246, 0x3058, 0x8621, 0xA2EA, 0x6DC4, 0xBA54, 0xFC70, 0x9509,
+    0xA01A, 0xF0A3, 0xB1C6, 0xB001, 0x3E22, 0xA2F3, 0x9CF0, 0x8588,
+    0x7968, 0xB448, 0x8080, 0xB938, 0xFAD8, 0x9CC3, 0x12C0, 0x2D34,
+    0x6F1B, 0x022C, 0x0D28, 0x82CC, 0xD761, 0xEE7F, 0x42E1, 0x7EE3,
+    0x7728, 0x0AB8, 0x85A0, 0x6A04, 0x8810, 0x90BB, 0x0F8B, 0x90F8,
+    0x630E, 0xEECA, 0x002C, 0x0D00, 0x4326, 0x0603, 0x6403, 0x283B,
+    0xD370, 0x8E32, 0x0412, 0xF4B1, 0x8974, 0x9F58, 0x9526, 0xC76B,
+    0xC820, 0x207A, 0xD128, 0x4464, 0x02AE, 0x231E, 0x2407, 0x8605,
+    0x4BB5, 0x6584, 0x20EB, 0xAF81, 0xC62D, 0x168D, 0x813B, 0xAF6B,
+    0x0410, 0xE950, 0x7105, 0x2207, 0xA9FF, 0x47B1, 0x50C4, 0xC943,
+    0xD0D0, 0x02C0, 0x9413, 0x7480, 0x8932, 0x400F, 0xFD75, 0x8E44,
+    0x017C, 0x1F74, 0x2152, 0x0171, 0x698F, 0xC04F, 0x8441, 0xA3D2,
+    0xDEC3, 0xD036, 0x0444, 0x3390, 0x0065, 0x633A, 0x5841, 0x6026,
+    0xC7F8, 0x2131, 0xD598, 0x7024, 0xE796, 0x0211, 0xEA6C, 0x4458,
+    0x2125, 0x0226, 0x4609, 0x2088, 0x37DE, 0xBA48, 0x84E3, 0x0749,
+    0x3D11, 0x2A07, 0x81C2, 0x1841, 0xD045, 0x2417, 0x0F01, 0xEF55,
+    0x0208, 0x0617, 0x6236, 0x020C, 0x1408, 0x8311, 0x3CD0, 0x3D47,
+    0xF010, 0xBF03, 0x87B3, 0x9686, 0x4430, 0x76F5, 0x810F, 0x0725,
+    0x9D40, 0x7B01, 0x6F5F, 0x1E9B, 0x1810, 0x83AD, 0x104F, 0xC8E2,
+    0xA5DA, 0x61A3, 0xE402, 0x73A3, 0xA5E8, 0x1BF1, 0xA503, 0x47C2,
+    0x9085, 0x202E, 0x2118, 0x43FF, 0xB40A, 0x8BAA, 0x9A88, 0x84ED,
+    0xA124, 0x2760, 0x1C81, 0x0018, 0xF2B6, 0x1032, 0x3C87, 0xA4A8,
+    0xDDDF, 0x3622, 0x6185, 0x9E8C, 0x9919, 0xDCCD, 0xA4C7, 0xE603,
+    0xD899, 0x3B10, 0xFC98, 0x80A0, 0x0D1D, 0xA4E6, 0x2C0E, 0xA879,
+    0x5A78, 0x8E63, 0x1F6E, 0x0E93, 0x06DD, 0x0201, 0x9A36, 0x3610,
+    0x48C0, 0xC3E6, 0x0677, 0x801F, 0x489E, 0x0180, 0x91CA, 0xC101,
+    0x6530, 0x2782, 0x7CE7, 0x4103, 0x7A7A, 0xE4C0, 0x1274, 0x072E,
+    0x0043, 0xBC06, 0xE6ED, 0xA276, 0x4C83, 0x8ED8, 0x019F, 0x40F3,
+    0x9771, 0xC821, 0x0E20, 0x8845, 0xD307, 0x089E, 0x8068, 0x1118,
+    0x807D, 0xC457, 0xC441, 0x3C00, 0x5187, 0x1378, 0x0A98, 0xA38B,
+    0xA4C7, 0x1205, 0x0601, 0xE81C, 0x2742, 0x7CFA, 0xF22D, 0x4072,
+    0x7407, 0xEA9C, 0xC421, 0x409E, 0x0A3B, 0xFAE8, 0x8B50, 0x9C01,
+    0x306C, 0x141D, 0x4B38, 0x5E0B, 0x3C2B, 0x1609, 0x59C7, 0x320B,
+    0x9418, 0x8C5C, 0x14A0, 0x503F, 0xD12F, 0x4254, 0xF4E1, 0xB09A,
+    0xE000, 0xA4C0, 0x2180, 0xC041, 0x2EBD, 0xB543, 0xAA01, 0xC49E,
+    0x34CA, 0x4BA0, 0x20D5, 0x290B, 0x820C, 0xA300, 0x00A2, 0x87B9,
+    0x5D8B, 0x3B6C, 0x4A1E, 0xCC9D, 0x1104, 0xD628, 0x7B35, 0xB1E5,
+    0x3ECD, 0x692E, 0xCD6D, 0x3ECD, 0x6B68, 0x9453, 0x31D1, 0x51C0,
+    0x6300, 0x6301, 0xF5E5, 0x5541, 0xE6FA, 0x0241, 0x9803, 0x09B7,
+    0xD210, 0x470A, 0x040F, 0x592C, 0x8B43, 0xD8F8, 0x1305, 0xE480,
+    0x83D8, 0x8689, 0x7613, 0xF917, 0x0211, 0x6A05, 0x75A0, 0x38C1,
+    0x8059, 0xE4FE, 0xB2F3, 0x7A81, 0x7503, 0x38C3, 0x8017, 0xE3A9,
+    0x5183, 0x01B7, 0xC6C4, 0x43C4, 0x7647, 0xADF2, 0xCBAB, 0x8244,
+    0x0B36, 0x03F2, 0xE008, 0x2D6F, 0x371E, 0xAB53, 0x22A7, 0x5241,
+    0x34F4, 0x4A5E, 0x2298, 0x7D07, 0xD23D, 0x3952, 0x26FF, 0x2603,
+    0x1F68, 0x4A0F, 0x5C00, 0xA615, 0x75BF, 0xF18D, 0xE903, 0xDDEF,
+    0x3C7D, 0xABF8, 0x4131, 0xE27C, 0x7355, 0x4424, 0x85D6, 0xDA62,
+    0x287A, 0xBC00, 0x7973, 0xF90A, 0xFE49, 0x043E, 0xE591, 0x1F14,
+    0xD599, 0x81D7, 0x02C6, 0x32C9, 0x10CA, 0x992C, 0x3A61, 0xC364,
+    0x869A, 0xC13B, 0x7C21, 0x0100, 0xB23C, 0x4578, 0xC43A, 0xA726,
+    0xEDCA, 0x9797, 0x2727, 0xAC69, 0x4430, 0x00BD, 0x2E02, 0x5D51,
+    0x8297, 0x4CE9, 0x0803, 0xD193, 0xA56E, 0xA000, 0x4FE4, 0x7AC8,
+    0xA4A1, 0x8714, 0x4479, 0xDE34, 0x79CB, 0xD1F1, 0x6A91, 0xEB27,
+    0x8102, 0x0D11, 0x37C8, 0xD2E2, 0x011A, 0x2260, 0xF3D7, 0xFE63,
+    0xDC58, 0x6279, 0x9040, 0x9775, 0x5B8F, 0x6E7E, 0x107E, 0x00A1,
+    0xDD4F, 0x027C, 0x9240, 0x98D6, 0x0997, 0x0341, 0xA422, 0xE2D8,
+    0x0344, 0x32D0, 0xA508, 0x1C4F, 0x204C, 0x8486, 0xBDCB, 0x03D5,
+    0x1344, 0x1282, 0xC081, 0x9E3D, 0x1E85, 0x9765, 0x860E, 0x3591,
+    0x0FF2, 0x8748, 0xB201, 0x7C08, 0xEA27, 0x31A4, 0x1E82, 0x4578,
+    0x0E20, 0x0245, 0x8747, 0x4208, 0x4450, 0x8383, 0x183A, 0x5E80,
+    0x9D52, 0x785E, 0x4FF5, 0x2B25, 0x8752, 0xE411, 0x7602, 0x0245,
+    0x8F66, 0xBF09, 0x1858, 0x1803, 0x40E9, 0xDC7C, 0x0260, 0x0255,
+    0xE402, 0x1FA2, 0x9C07, 0xC780, 0xE3D9, 0x5FA3, 0x59A0, 0x06C8,
+    0x03C5, 0xD943, 0x1605, 0x9A44, 0xA204, 0x01AC, 0x14F1, 0x7719,
+    0x0245, 0xA4A4, 0x0180, 0x8E67, 0x0605, 0x440A, 0x0449, 0x4F42,
+    0xA025, 0x2239, 0x0002, 0x66F5, 0x2F48, 0x9820, 0x78F4, 0x0A66,
+    0xB80F, 0x5CFB, 0x8DE8, 0xB00F, 0x0E06, 0x4810, 0x795C, 0xB020,
+    0x675D, 0x0197, 0x1097, 0x13FA, 0xE9E1, 0x327C, 0x0788, 0x5B25,
+    0x6179, 0x6898, 0x818C, 0x8321, 0x0388, 0xC47C, 0xE1D0, 0x6202,
+    0x20A7, 0x9688, 0x91CE, 0x4E33, 0x011E, 0xF0EC, 0x3113, 0x0F50,
+    0x8A88, 0x8142, 0x8498, 0x7881, 0x9884, 0xC787, 0x546D, 0x280E,
+    0x63BA, 0x1600, 0xC440, 0x9013, 0x9BB6, 0x21DA, 0x5347, 0x98C8,
+    0x2058, 0xB9A1, 0x9E2D, 0x0A49, 0x7A45, 0x94FA, 0x134C, 0x7B49,
+    0xFC41, 0x1040, 0xB0EB, 0x6291, 0xED7F, 0x71E9, 0xB0E1, 0xE295,
+    0x8206, 0x98DD, 0xB6DD, 0x2C60, 0x0C08, 0x9186, 0x02E9, 0x3F60,
+    0x6209, 0x7C6B, 0x17DE, 0x6DE6, 0x2ECE, 0x7413, 0x2FCA, 0x1522,
+    0x6396, 0xA628, 0x1978, 0x100C, 0x1D5D, 0x2E40, 0x0821, 0xDF3B,
+    0xC5D8, 0xE6C4, 0x15F9, 0x2B28, 0x5863, 0xBC21, 0x4BD2, 0x6162,
+    0x021A, 0x2597, 0x898D, 0x4874, 0xCAD7, 0x32D4, 0x0625, 0x4068,
+    0x7540, 0x8254, 0x0856, 0xE3E7, 0xA603, 0x0721, 0x5F28, 0x4A6C,
+    0x0D0F, 0xA7E2, 0xE715, 0xE468, 0x9419, 0xD348, 0x74BD, 0xE178,
+    0x95DC, 0xD803, 0x0DE0, 0x5040, 0xEB67, 0x22E2, 0x970D, 0x01A4,
+    0xF056, 0x6072, 0x2564, 0x3DA2, 0x5836, 0x4031, 0xD448, 0xBF2E,
+    0x3A1C, 0x8C46, 0x3F28, 0x6590, 0x0233, 0x0F25, 0x10FE, 0x170C,
+    0xE6C7, 0x7FE4, 0x975A, 0x9409, 0xCDD6, 0xA185, 0xC85F, 0x487A,
+    0x13B8, 0x8A90, 0x81E0, 0x18C6, 0x3C85, 0xDD58, 0x3E5D, 0xE820,
+    0x2090, 0xF451, 0x0F42, 0x7448, 0x947C, 0x2B80, 0x4421, 0xF8CE,
+    0x3C31, 0x4EC7, 0x7D99, 0x88FE, 0x2175, 0x9D81, 0x8183, 0xF9DD,
+    0xD132, 0x85E5, 0x2F71, 0xF434, 0x1896, 0x46A9, 0x647B, 0x9640,
+    0xC618, 0x81C0, 0xFD17, 0x2489, 0x641B, 0x8E38, 0x1BA4, 0xB22E,
+    0x070E, 0x7AF0, 0x6028, 0xEB4A, 0x9403, 0x406A, 0x1881, 0xAE38,
+    0x13E0, 0x9798, 0x9B10, 0x3A00, 0x6E3A, 0x0020, 0x0F5C, 0xC8A2,
+    0x35AA, 0x9E45, 0xFF89, 0xC1C7, 0xAAB0, 0x871B, 0xF88C, 0xFD73,
+    0x2088, 0xCC99, 0x3C19, 0x7428, 0xE966, 0x4510, 0x1473, 0x55E9,
+    0x13C1, 0xA71D, 0x0910, 0x37AA, 0xA247, 0x45E2, 0x24F0, 0x27D7,
+    0x32CD, 0x16A0, 0xBE29, 0x1202, 0xCB6A, 0x9321, 0xE508, 0x70F1,
+    0x3820, 0xF5CC, 0xA99A, 0x42A9, 0x3490, 0x0021, 0x9641, 0x01A4,
+    0x2993, 0x5A14, 0x5285, 0x1EA3, 0x871E, 0x81C5, 0x1940, 0x1AC2,
+    0x616A, 0x1BF5, 0xCC8A, 0x6071, 0xA1D7, 0x0622, 0x5A8A, 0xBDC8,
+    0xED24, 0xE13C, 0x0AF5, 0xC7FA, 0x1E51, 0xA710, 0xE0F0, 0x193A,
+    0xF8E0, 0x89E0, 0x78D3, 0x1141, 0xBECA, 0x0E92, 0x7C68, 0x27FB,
+    0x228C, 0x793F, 0x788C, 0x65A8, 0x27CC, 0x1DEB, 0xB3F6, 0x47D0,
+    0xB282, 0x5A8B, 0x04F8, 0x0FA0, 0x4032, 0x749D, 0x0D49, 0xD14F,
+    0x0838, 0x5CC2, 0x1DBE, 0x2C38, 0xCAA0, 0x222D, 0x4123, 0xC044,
+    0xC1AC, 0x1940, 0x0229, 0x93C2, 0x777F, 0xAD97, 0x5CAD, 0x113C,
+    0x26A4, 0x261A, 0x418A, 0xF123, 0xC839, 0x3D11, 0xE264, 0x93C2,
+    0xAF5C, 0x94A1, 0x3509, 0x07D1, 0x5CC2, 0x6313, 0xE386, 0x2713,
+    0x63AA, 0xA707, 0xBEAB, 0x862C, 0xBA7B, 0xD441, 0x01E8, 0x6E2D,
+    0x478C, 0xF921, 0x0189, 0xF3C5, 0x01FC, 0x7F03, 0x3AE5, 0x411E,
+    0xF543, 0x19F8, 0xC7ED, 0x2019, 0x13C0, 0x78F4, 0x1777, 0xFA51,
+    0x0E68, 0x5100, 0xA0A0, 0x6803, 0x1DAB, 0x4821, 0x9D29, 0x1170,
+    0xD005, 0x8980, 0x1CD1, 0x04BD, 0x714C, 0x3160, 0x2C75, 0xD0E9,
+    0x001D, 0xD8DE, 0x3C3F, 0x607D, 0x3194, 0x8806, 0x5ED6, 0xE25D,
+    0x54F8, 0x975B, 0x0621, 0xD71C, 0xC5E4, 0x72C3, 0x3519, 0xD124,
+    0x1742, 0xD317, 0x5C76, 0x2D97, 0xF877, 0xF208, 0x15CD, 0x7D04,
+    0x0A3F, 0xABE1, 0x060F, 0x7E32, 0x7E20, 0xA042, 0x26E7, 0x0519,
+    0xEBE0, 0x0E11, 0xEB79, 0x3130, 0x4AB1, 0xF8B3, 0x3C00, 0xB052,
+    0xD743, 0x4F83, 0xD24E, 0xA602, 0x763A, 0xD1D5, 0xC81D, 0xC4C0,
+    0x080B, 0x9DDE, 0x8059, 0x13B9, 0x2E81, 0x351D, 0x00F9, 0x5780,
+    0x1AE7, 0x5F60, 0x2A97, 0x7144, 0x0921, 0xE04F, 0xF3EB, 0x6AF1,
+    0x0282, 0x6950, 0x54F1, 0x7B37, 0xBCC4, 0x42FA, 0xD727, 0x7A40,
+    0x1AA7, 0x177D, 0xD421, 0xDF74, 0xCA9C, 0x5272, 0x024F, 0x6572,
+    0xE584, 0x94EF, 0x1A03, 0x1412, 0x154A, 0x7002, 0xDCE6, 0x65E2,
+    0x5812, 0x7BA2, 0x8904, 0x09F3, 0x8F30, 0x8080, 0xA158, 0x50E0,
+    0xFE03, 0x0AE0, 0x243B, 0x9BCC, 0x40AE, 0xB1D8, 0x123C, 0x97E9,
+    0x0501, 0xC738, 0x370C, 0x896E, 0x0278, 0x1D34, 0x4EF2, 0x4812,
+    0xE691, 0xE208, 0x6082, 0x2F0E, 0x0B88, 0x2A12, 0x77DD, 0xE8F5,
+    0x53F0, 0x8883, 0x8995, 0x9F18, 0x3DC0, 0xCC3C, 0x657C, 0xBAAA,
+    0xD044, 0x38C1, 0x1013, 0x8B2E, 0xDA27, 0x204F, 0xBEF0, 0x118E,
+    0x2049, 0x9820, 0x68D1, 0x2E06, 0x3EFB, 0xC14E, 0xBD87, 0xC6F9,
+    0x4461, 0x1221, 0x0439, 0x1AC5, 0x9F5D, 0x7989, 0x03C5, 0x03C4,
+    0x1E08, 0xBC7A, 0x3236, 0x2C03, 0x44B0, 0x267B, 0xEEF4, 0x4B61,
+    0x5099, 0xEFBB, 0xC12D, 0x8552, 0x67C0, 0xD782, 0x5B0A, 0xC4C8,
+    0x8706, 0x22B9, 0x3360, 0xB028, 0x0B6A, 0xE501, 0x160C, 0x4592,
+    0x6446, 0x1C88, 0x02D8, 0x5A40, 0x27A5, 0xC201, 0x0E30, 0xA01D,
+    0xF7DD, 0xB888, 0x3C82, 0xE448, 0x446E, 0xA38E, 0xB5A1, 0x2184,
+    0x1F09, 0xC4EF, 0x38F4, 0xA1DF, 0xD005, 0xDEB5, 0xC58E, 0xBC08,
+    0x32F8, 0x7F3F, 0x2FBF, 0x0EFB, 0xB212, 0x6150, 0x976A, 0x0AA4,
+    0x9450, 0x42A1, 0x0A7D, 0x1173, 0x8EDF, 0x0FAE, 0x7107, 0xBEEC,
+    0x12EF, 0xBAF4, 0xBBEE, 0xB90E, 0xF395, 0x2EFB, 0xAD28, 0x41EF,
+    0xBAC4, 0x078E, 0xFBAB, 0x4478, 0xE71D, 0x0242, 0x58C5, 0x2004,
+    0x2951, 0xBE60, 0x4CE0, 0xAF00, 0x7814, 0x66ED, 0xCA60, 0x0D0E,
+    0xA1D7, 0x6266, 0x89F4, 0x3A8B, 0x43AF, 0x8213, 0x8737, 0xD4BB,
+    0x0E64, 0x415E, 0xFBA0, 0x202C, 0xA908, 0x10C4, 0xAC1D, 0xF688,
+    0x2007, 0x6E96, 0x8807, 0x9056, 0x5D0F, 0x983E, 0x4AB4, 0x3EA0,
+    0xC943, 0xA07C, 0x47A8, 0x0F47, 0x9072, 0x0F66, 0xB888, 0x0E4C,
+    0x029D, 0x80AE, 0x6181, 0x03D9, 0x82C3, 0xAB72, 0x1EC7, 0xDD3E,
+    0x1CE8, 0x4C06, 0x0087, 0x7C75, 0x9692, 0x30BD, 0x9DAA, 0x3E42,
+    0xAD1F, 0x1CFD, 0x9CD4, 0x3321, 0x3670, 0x811D, 0x41E0, 0x8B1D,
+    0x9720, 0x2414, 0xCA24, 0xB182, 0x4176, 0x03F8, 0x9073, 0x41CC,
+    0xAA81, 0xDE1E, 0xA016, 0x3D24, 0x323A, 0x2142, 0xF672, 0x38F6,
+    0x6F50, 0xDC30, 0x3DC8, 0xE227, 0x8962, 0x6B08, 0x6056, 0x5FEC,
+    0xF5C5, 0x3081, 0x5782, 0x0894, 0x5B00, 0xBCE3, 0x7440, 0x2853,
+    0x0181, 0xE020, 0x1421, 0x3C3C, 0x4639, 0x6EA2, 0x5B77, 0x8170,
+    0xF972, 0x807D, 0x9512, 0x2041, 0xCD1C, 0x2051, 0x6C03, 0xF98F,
+    0x204D, 0xA852, 0xEFA4, 0xD301, 0xCB6D, 0x0CF0, 0xC387, 0x8876,
+    0x080F, 0x2E82, 0xB203, 0xBF0D, 0x93D2, 0x2808, 0x1475, 0x0405,
+    0x0754, 0xD110, 0x1677, 0x2050, 0x6477, 0x95EB, 0x8189, 0x8422,
+    0x47A7, 0x1605, 0x8368, 0x20E2, 0xF623, 0xC578, 0x10ED, 0xD764,
+    0x30F1, 0x082E, 0x0BD4, 0xE88E, 0x0597, 0x7DC6, 0x0819, 0xDDE2,
+    0xA46C, 0x79F9, 0xC068, 0x9002, 0xFDF7, 0xCC20, 0x71C6, 0x4810,
+    0x7DBA, 0x6820, 0x09A8, 0x12F5, 0x0969, 0x801D, 0xB278, 0x4690,
+    0x3FD4, 0xA4A5, 0xDF88, 0xA646, 0x97A8, 0x9743, 0x1976, 0x8184,
+    0x8210, 0x3A38, 0x8C48, 0xDF07, 0x4808, 0x885D, 0x87C7, 0x077C,
+    0x758F, 0x5F81, 0x91EA, 0x701A, 0xA0C7, 0x638F, 0x88D6, 0x0113,
+    0xE780, 0x5D70, 0x7169, 0x1308, 0x0AF4, 0x0262, 0x1D44, 0xE078,
+    0x7703, 0xBEEC, 0x90B8, 0x68AF, 0xD82E, 0xF90E, 0x3361, 0x1F00,
+    0x1A18, 0x09DF, 0x768E, 0x0466, 0xE286, 0x1F41, 0xB868, 0x45CE,
+    0xA2AC, 0x401A, 0x2D39, 0x5FE9, 0x5B10, 0x00C1, 0x47A8, 0x3DC7,
+    0xBF1F, 0x0804, 0xABB2, 0xECAB, 0x0134, 0x495E, 0xFC7B, 0x2033,
+    0xABA4, 0xC582, 0x57BF, 0x1E48, 0x0738, 0xFBB9, 0xBCCF, 0x4010,
+    0x956C, 0x2048, 0x412C, 0x5210, 0x2841, 0xF193, 0x78B1, 0x936A,
+    0x5DF8, 0xF49B, 0x0DF7, 0x1D1A, 0x0D01, 0xA91F, 0x604E, 0x871C,
+    0x4D93, 0xF3BF, 0x1E5A, 0x018D, 0xC3FC, 0xEBB8, 0x2400, 0x6214,
+    0x2BE8, 0xB284, 0x0560, 0xAFBE, 0xE307, 0x4080, 0x5DB0, 0x4E3E,
+    0xB707, 0x1E2B, 0x1222, 0x1D53, 0x8DD3, 0x806F, 0xF7D9, 0xE899,
+    0xA120, 0x2801, 0x9185, 0xA140, 0x10C2, 0x8842, 0xA1DD, 0xE362,
+    0xC044, 0xA156, 0xA041, 0x9401, 0x282F, 0x8022, 0x00F3, 0x6C93,
+    0x2087, 0xD008, 0xA328, 0x0061, 0xD668, 0x400D, 0x3B93, 0xEE95,
+    0x64C1, 0x91C8, 0xF81C, 0xCB84, 0x0B23, 0xDBAD, 0x7707, 0x4E59,
+    0x225E, 0x3850, 0x04C8, 0x809C, 0x541C, 0xC5AE, 0x659A, 0x20AF,
+    0x9A86, 0x4468, 0x1D46, 0x81CC, 0x3A1C, 0xFC78, 0xE427, 0x802B,
+    0xE3D3, 0xD2E2, 0xEC82, 0x05FB, 0x5D7C, 0x44BE, 0xA34E, 0x1EA7,
+    0xF710, 0x8FC6, 0xB3A2, 0x0281, 0xFE63, 0x4F12, 0x0C72, 0x2080,
+    0xACDD, 0x01E9, 0x2389, 0x148E, 0x6637, 0x3311, 0xAF00, 0x1341,
+    0x0402, 0x73D4, 0x0322, 0x6888, 0x9143, 0xA842, 0x14E0, 0xE302,
+    0xF820, 0x62E5, 0xF01C, 0x427B, 0xC4E0, 0x12EC, 0xD831, 0xE9D3,
+    0x9130, 0x80C2, 0xCCA0, 0xC60E, 0x0579, 0x0723, 0x1000, 0xCF44,
+    0x0032, 0xC7D3, 0x8A38, 0x4FE0, 0x8180, 0x40C2, 0xF2BA, 0xE19D,
+    0x9C5E, 0x4CBB, 0xBAF8, 0xB9C5, 0x1080, 0xDD2C, 0x1859, 0x4385,
+    0xC8C2, 0xCC0B, 0x1C0C, 0x8038, 0x2E0A, 0xFC1F, 0x4423, 0xF01D,
+    0xE30A, 0x8109, 0xA148, 0x7D03, 0x813B, 0xA847, 0xA83D, 0x0BB1,
+    0xF588, 0xDA60, 0x980B, 0x7C0F, 0x8620, 0x2016, 0x2302, 0x9A05,
+    0xA1E2, 0x6042, 0x0251, 0x7110, 0x7BA0, 0xACB3, 0x4AC4, 0x13E7,
+    0x1992, 0x5003, 0xA1E0, 0x4642, 0x03A1, 0xF046, 0x2214, 0x0707,
+    0x8CC7, 0x8898, 0x2E8D, 0xFF19, 0x6C09, 0xEC07, 0x13C1, 0x1930,
+    0x0D97, 0xA027, 0x2221, 0x23A4, 0x07EB, 0x3732, 0x02C3, 0xAF49,
+    0x2297, 0x6AE6, 0x082E, 0x0988, 0x43B8, 0x25D1, 0x33C5, 0xD133,
+    0x857E, 0x887B, 0x34FC, 0x402E, 0x2262, 0x5DAE, 0x5258, 0xEF04,
+    0x4102, 0xC129, 0x210E, 0xA044, 0xE622, 0x013C, 0x10F7, 0xD9F1,
+    0x9520, 0x5195, 0x3F14, 0x395C, 0x9200, 0xEF81, 0x01C7, 0xAC0D,
+    0x489E, 0x0881, 0x7207, 0xB163, 0x863C, 0x8AA5, 0x0E96, 0x9536,
+    0x0144, 0x7451, 0x04C0, 0x465F, 0x8891, 0xC647, 0x2804, 0x60E8,
+    0x2011, 0xE864, 0x841D, 0x05A3, 0xD0EB, 0x0CE1, 0xC6C4, 0x13B0,
+    0x77AF, 0x2980, 0x83E8, 0x57A1, 0xCE4C, 0x0C0E, 0x82BE, 0xFC9A,
+    0x44D8, 0xEDEE, 0x23E2, 0x08A5, 0xDF92, 0x8891, 0xC328, 0x7A3F,
+    0x2647, 0x0E08, 0x840C, 0x6540, 0x3B84, 0xFD31, 0x4338, 0x2720,
+    0x42E3, 0x9BC3, 0x7304, 0x0140, 0x6580, 0x8676, 0x0EE0, 0x1913,
+    0xA40C, 0x38A1, 0x4ADF, 0x8775, 0xA05E, 0xA802, 0x8C38, 0x16D6,
+    0xFC1B, 0x7383, 0x1DF9, 0x28C1, 0x229F, 0x65F2, 0x11AE, 0x2793,
+    0x22C9, 0x3E05, 0xD8B4, 0x3B22, 0x0843, 0xABFA, 0x4B47, 0x685A,
+    0x6A51, 0x10B8, 0xC450, 0x8024, 0xF812, 0x4C86, 0xE5E8, 0xC2C8,
+    0x01E5, 0x2751, 0xEFC0, 0xF2F2, 0xF718, 0xB001, 0x8828, 0x6AC4,
+    0x87BF, 0x2488, 0x7B0B, 0x0661, 0xFBBF, 0x2412, 0xEFC0, 0x92C8,
+    0xD21E, 0xFD26, 0x237C, 0x9020, 0x8EE0, 0x370B, 0x1805, 0x7DF9,
+    0xBA5D, 0xF928, 0x2060, 0xA50A, 0x6C04, 0x2A51, 0x410C, 0x05B8,
+    0x19D8, 0xFB04, 0x4C76, 0x1C58, 0xE105, 0x02DC, 0xCF34, 0x02E0,
+    0x34F6, 0x0573, 0xD944, 0x0931, 0xB009, 0x991A, 0x872B, 0x7C48,
+    0x320A, 0xD0E4, 0x5E04, 0x4876, 0x61A8, 0xE2B5, 0x1078, 0xD509,
+    0x49D0, 0x580E, 0x3C82, 0x0183, 0xD28F, 0xE645, 0x81E3, 0x9040,
+    0x3077, 0xDEB9, 0x7923, 0x7C7D, 0x948E, 0x381E, 0xC7AC, 0xA507,
+    0xC8A4, 0x0404, 0x8A40, 0xA68B, 0x74FB, 0xEF0C, 0x89D0, 0xDAB7,
+    0xCFDB, 0x3322, 0xDC39, 0x325A, 0x82C4, 0xE86F, 0x76D1, 0x4610,
+    0x1079, 0x2806, 0xF162, 0x0B80, 0x6168, 0x57D7, 0x4188, 0x8145,
+    0x14F8, 0x06A8, 0x1A6B, 0x0124, 0xF024, 0x0AF7, 0xE2B0, 0xF1B3,
+    0x4118, 0xC971, 0x01BE, 0xBE33, 0x2C1B, 0x4199, 0x0A23, 0x1D08,
+    0x0B86, 0x430F, 0xD08D, 0x1813, 0x10F0, 0x5388, 0xDC98, 0x772B,
+    0x0010, 0x6B02, 0x8107, 0x7A79, 0xA404, 0x12D3, 0x710E, 0x01D6,
+    0x1220, 0x27BB, 0xF181, 0x0BB2, 0x4086, 0xB029, 0x8614, 0x0CBA,
+    0x98DC, 0x89E0, 0x509E, 0x0C4D, 0x7376, 0x34C6, 0xA500, 0xC57D,
+    0x7890, 0x4C06, 0x4802, 0xB186, 0x2928, 0x065D, 0xF8F0, 0x5808,
+    0xC098, 0x0029, 0xE91A, 0x0694, 0x20F7, 0xE2E0, 0x82A2, 0xAFA8,
+    0x8050, 0xB07C, 0x5420, 0x02FD, 0xF61E, 0x3E90, 0x9E11, 0x8AA2,
+    0x5132, 0xFBF1, 0x7920, 0x5CA4, 0x05D4, 0x0156, 0x2692, 0x3CF4,
+    0x043C, 0xFDD0, 0xAAF4, 0x40B0, 0x1082, 0xF2A9, 0x9967, 0x7F88,
+    0x1A12, 0x8004, 0xA752, 0x98C9, 0xE412, 0x7AB7, 0x2041, 0x6A40,
+    0x5788, 0x077E, 0x3099, 0x1497, 0x4FEC, 0x881F, 0xE8E4, 0xB1A4,
+    0x8231, 0x16DD, 0xF8C0, 0x8459, 0x7B4B, 0x9C8B, 0xA700, 0x08B6,
+    0x05F4, 0xA4C4, 0xCB20, 0x794D, 0x1261, 0x1200, 0xC781, 0x64C6,
+    0x7113, 0x44AA, 0xED20, 0xB1EF, 0xC673, 0xC736, 0x250D, 0x5725,
+    0x59E0, 0xCE4E, 0x8089, 0x041F, 0xA1ED, 0x44C2, 0xF6D1, 0x5093,
+    0x0175, 0xC8E0, 0x7483, 0x1E2B, 0xAA23, 0xD854, 0x3449, 0xBCB1,
+    0x4120, 0x8990, 0x830C, 0xE81A, 0x24C9, 0x8400, 0x4207, 0x4AE3,
+    0x8904, 0x5904, 0x060F, 0x813A, 0xA427, 0xEFC6, 0x954D, 0x0258,
+    0x71CB, 0x153E, 0xB913, 0x2C8B, 0x913A, 0x7BF1, 0x3CC0, 0xA340,
+    0x921C, 0x72C8, 0x1189, 0x4C8E, 0x5C22, 0xDE10, 0xEF30, 0x131F,
+    0xB5DB, 0xC631, 0xA201, 0x407F, 0xE45F, 0xA7D8, 0x7426, 0x001C,
+    0xB4A9, 0x2020, 0x8A44, 0xD51E, 0xBC51, 0xD423, 0xF1EC, 0x814C,
+    0x00F9, 0xDF30, 0x4C00, 0x3AB2, 0x84B5, 0xEE68, 0x4100, 0x0D99,
+    0x1016, 0xA002, 0x8084, 0x15F2, 0xE515, 0x7B11, 0x9CB9, 0x46F0,
+    0x8BC3, 0xB024, 0x6A8B, 0xC6B8, 0xBC60, 0x94E7, 0x4006, 0x6B0D,
+    0x9780, 0x0016, 0x2F4A, 0xC012, 0xEFD4, 0x322A, 0x40C2, 0x5820,
+    0x1807, 0x23A4, 0xD119, 0x7BF1, 0x0943, 0x5864, 0xF303, 0x091A,
+    0x02AF, 0x95AA, 0x87BF, 0x1108, 0x1105, 0xC623, 0xD96B, 0xA3E8,
+    0x4BCF, 0x1DE2, 0x101A, 0x0878, 0xFBDC, 0x445C, 0x4987, 0xED0A,
+    0x913A, 0x40BE, 0x4648, 0x5DF8, 0x8AB8, 0x1605, 0x1ED3, 0xA20D,
+    0x8181, 0x7040, 0x3028, 0xF47E, 0x0985, 0x3D1F, 0x7461, 0x09A2,
+    0x2593, 0x22EF, 0x82F4, 0x11EA, 0xDE61, 0xCDEF, 0x1EE7, 0x262E,
+    0xFC4C, 0x63BC, 0x7D64, 0x0A2B, 0xA8C2, 0x4059, 0xCC98, 0x23D0,
+    0xC028, 0x93BC, 0x93F0, 0x8042, 0x7C00, 0xEFC4, 0xB33A, 0x3ACB,
+    0x2C7A, 0x93F0, 0x8E41, 0xC016, 0x2E00, 0xAE3A, 0x505D, 0xE79C,
+    0x44E8, 0x4187, 0x0849, 0x4EFC, 0x162E, 0xD47B, 0x301B, 0xBF06,
+    0x089F, 0xF281, 0x98DA, 0x2C81, 0x5EFC, 0x4A40, 0x4951, 0x05BB,
+    0xF194, 0x5CC1, 0x5540, 0x343A, 0xB1B1, 0x3010, 0x2971, 0x2181,
+    0x6020, 0x4820, 0x1C50, 0x062C, 0x2046, 0xED16, 0x2C11, 0x5E7B,
+    0x8931, 0xC5C6, 0xB0C1, 0xB3C0, 0x86D4, 0x4A25, 0xE028, 0x29F6,
+    0xD6DC, 0xE02A, 0x4042, 0x0A53, 0xC02C, 0x3E81, 0x9223, 0xB210,
+    0x700E, 0x10C8, 0x8EAC, 0x7060, 0x8312, 0x10B0, 0x7E22, 0x126E,
+    0x10C2, 0x050D, 0x88E0, 0x3A2E, 0xA48C, 0x2108, 0x2C47, 0x48D4,
+    0x4211, 0x608F, 0x524C, 0x177D, 0xB720, 0x0A81, 0xC10F, 0x9488,
+    0x468F, 0x0176, 0x0274, 0x92A8, 0x9C7D, 0x381A, 0x3474, 0x7C38,
+    0x5E58, 0xA806, 0xE4D0, 0x0A79, 0x2D38, 0x8120, 0x9116, 0x13E8,
+    0xE544, 0x0A2C, 0xBD2C, 0x1040, 0x913E, 0x13F7, 0xE3D2, 0x4292,
+    0x1ECB, 0x6910, 0x3066, 0xA565, 0x5105, 0xA50C, 0x400C, 0x15A2,
+    0x0BB5, 0x4E09, 0x8028, 0xD11B, 0xC0C1, 0xEBD2, 0x01E3, 0xD17C,
+    0xE5DF, 0x8F88, 0x8181, 0xB541, 0x21CA, 0x05CB, 0xD537, 0x6241,
+    0x0F5D, 0x8DF2, 0x2101, 0x072F, 0x121B, 0xCD5C, 0x8402, 0x0873,
+    0x2101, 0x405F, 0x66DD, 0x0C49, 0x00B6, 0xF818, 0x5201, 0x89DD,
+    0x1960, 0xD430, 0x13FD, 0x9BBA, 0x25B8, 0x000B, 0x77E4, 0x10FA,
+    0xD664, 0xC460, 0x04C3, 0xD125, 0x8944, 0x3C0E, 0x1D8A, 0xF037,
+    0xA507, 0x7E42, 0x1846, 0xA508, 0x2C74, 0x9FE9, 0x3883, 0xCA40,
+    0x2972, 0x15F4, 0x4A02, 0x6069, 0x0415, 0xF7D0, 0x82B9, 0x77C4,
+    0x0489, 0xD607, 0x0EFA, 0x1040, 0x0933, 0xAC5E, 0x5DF4, 0x1E25,
+    0x9791, 0x71CF, 0xD635, 0x0393, 0x0021, 0x1806, 0x6881, 0x2550,
+    0x4030, 0x02A4, 0x602F, 0xA167, 0x1024, 0xA285, 0x1234, 0x1740,
+    0x9EEF, 0x9F34, 0xEF8C, 0x0254, 0x01B9, 0x508D, 0x10CC, 0x99F3,
+    0xF960, 0x9320, 0x4D14, 0x0340, 0x32D3, 0x4308, 0x01DF, 0x3D64,
+    0xC060, 0x4C04, 0x04F8, 0x01E0, 0x4042, 0xCFDB, 0x446B, 0x0AD4,
+    0x336F, 0x8BC3, 0x7822, 0x151B, 0x1CD0, 0xE482, 0x9CA2, 0xA110,
+    0xFA5E, 0x9841, 0x2E79, 0xFC3D, 0x8680, 0x7D51, 0x2220, 0x88F0,
+    0x3A65, 0x1891, 0xA611, 0x967D, 0xF50E, 0x659A, 0xA166, 0x1516,
+    0x6061, 0xB001, 0x955C, 0x6921, 0x3ECE, 0x1710, 0x57BF, 0x5184,
+    0x033A, 0xC14C, 0xD8E2, 0xF047, 0x1889, 0xC686, 0x65D8, 0xE743,
+    0x089E, 0x5808, 0xF9B1, 0xC441, 0x029D, 0x0D40, 0x7C6B, 0x8441,
+    0xD27F, 0xCFF9, 0x0209, 0x74AE, 0xF182, 0x44C0, 0x9068, 0xC100,
+    0x1258, 0x8AC5, 0x882F, 0xCAE3, 0xCBD4, 0x3345, 0x867C, 0x4400,
+    0x12E1, 0x10F6, 0x4E42, 0x7D80, 0xB47D, 0xF41C, 0x904F, 0xDF43,
+    0xC9F7, 0xE421, 0x8480, 0x823E, 0x3194, 0x2EA5, 0xB62B, 0xCA03,
+    0xB52A, 0x4BA3, 0x15C4, 0x02E3, 0xDE82, 0x219E, 0x0044, 0x1975,
+    0x58F0, 0xF645, 0x39F6, 0x5362, 0x4060, 0x2C15, 0xA039, 0x8106,
+    0xB9D3, 0xD249, 0x8811, 0xE000, 0x1BE5, 0x09E1, 0xC650, 0x0478,
+    0x4034, 0x813D, 0x95A0, 0x2018, 0xF3D4, 0xE6C7, 0xD67D, 0x6383,
+    0x280F, 0x8204, 0x4026, 0x8202, 0x6844, 0x3FCE, 0xC8E0, 0x8B32,
+    0x0521, 0x08B2, 0xE922, 0xE23A, 0xB09C, 0x0E6B, 0xA10A, 0x2087,
+    0x88FF, 0x0661, 0x01A0, 0x2903, 0x4F72, 0x4043, 0x1B7B, 0xE784,
+    0x7D91, 0x9A5D, 0x50E0, 0x585A, 0xC24C, 0x240C, 0x2905, 0x8020,
+    0x001F, 0x4309, 0x0B35, 0xA44C, 0xFB40, 0x6C84, 0x1268, 0x403F,
+    0xCD67, 0x91D4, 0x8840, 0xDD00, 0xCE10, 0xAF98, 0x641E, 0x0D50,
+    0xA220, 0x3803, 0x3852, 0x531E, 0x5016, 0x79DF, 0x1082, 0xDDDD,
+    0x0E20, 0xB82C, 0x4569, 0x2484, 0x5BD5, 0x0D11, 0xA25C, 0x9121,
+    0x002C, 0x2704, 0x3E21, 0xA911, 0xCF71, 0x7A90, 0x2445, 0x01C9,
+    0x0F0E, 0x7708, 0x1008, 0x0040, 0xA89F, 0x81AA, 0x0F62, 0x67BB,
+    0x9D84, 0xCEC1, 0x6E1E, 0x03C9, 0x1334, 0x9D38, 0x49E3, 0x089D,
+    0x2887, 0x9388, 0x7E28, 0x87D0, 0xC47F, 0xBA26, 0x0FD0, 0x34DF,
+    0x254C, 0x3F30, 0x2795, 0xC2E0, 0x331B, 0xC718, 0x0C3F, 0x1A80,
+    0x599E, 0x409C, 0x43D1, 0x8478, 0x0D40, 0x988E, 0x1818, 0x5D59,
+    0x422C, 0x6988, 0x4450, 0x8412, 0x400A, 0xCB2F, 0x9BEF, 0xC26A,
+    0x480F, 0x2D70, 0x2683, 0x5DDD, 0xA02E, 0x3384, 0x0FC7, 0x113A,
+    0xC66D, 0xB091, 0x23C9, 0xC568, 0xC112, 0x7AC7, 0x1870, 0xBE00,
+    0xFE0B, 0x7280, 0xE11C, 0x45A1, 0xC4BA, 0xC520, 0x0780, 0x3D79,
+    0xF802, 0x8277, 0x7B59, 0x0F1F, 0xF410, 0x4454, 0x27A4, 0xC061,
+    0x79E9, 0x8841, 0x31FC, 0xC2F1, 0x1A90, 0x9921, 0x085E, 0x19F5,
+    0x4F88, 0x86A0, 0x70EC, 0x1884, 0x4610, 0x4866, 0x0426, 0x1006,
+    0x6677, 0x55D0, 0x8D92, 0x81E1, 0x33F4, 0x2801, 0x0649, 0x4249,
+    0x02C2, 0x6043, 0x84AC, 0x08B2, 0x8FBE, 0x0404, 0x2423, 0x7430,
+    0x8546, 0x0073, 0xA420, 0x1A01, 0x63DD, 0x1501, 0x883A, 0x4014,
+    0x1E43, 0x3CFD, 0xC124, 0x4F12, 0xCF8E, 0x2E08, 0x7E80, 0x066C,
+    0xE066, 0x00E8, 0xF12B, 0x7BD5, 0x8487, 0x830A, 0x4814, 0xA41A,
+    0x14DA, 0x0887, 0x91CF, 0x30FC, 0x4FEE, 0x930B, 0x1EF2, 0xBD2F,
+    0x6755, 0x0DA4, 0x030D, 0x0076, 0x1741, 0xC200, 0x840D, 0x752F,
+    0x5D76, 0x06B8, 0xE44E, 0x4F1B, 0x3416, 0x3D5A, 0xBC88, 0x0407,
+    0x856A, 0x9829, 0x82D9, 0x6A74, 0xE7D8, 0x817D, 0x4BC2, 0x2271,
+    0x602C, 0x1C20, 0x8690, 0x4449, 0x8F0F, 0xC388, 0x3409, 0x4C20,
+    0x469C, 0x4080, 0x3627, 0xF775, 0xE88A, 0x2581, 0x3006, 0x8120,
+    0xBA06, 0x879B, 0x3C86, 0x1001, 0x5045, 0x0159, 0x0031, 0xCBE8,
+    0xC101, 0xEE08, 0x2115, 0x41B1, 0xA4B0, 0x063A, 0xEFB1, 0x107C,
+    0x0614, 0xF442, 0xA27C, 0xA1EC, 0x69B1, 0x0008, 0x0EF2, 0x0211,
+    0x8D02, 0x0806, 0x027B, 0x9954, 0xCF63, 0x4048, 0xF22C, 0x2083,
+    0x0680, 0x95E4, 0x58F1, 0xEEEC, 0x5135, 0xC49E, 0xEF2A, 0x2028,
+    0x5E0A, 0xC60E, 0xEEBA, 0x4454, 0x4413, 0x14FB, 0xB158, 0x4560,
+    0xE017, 0xEAA9, 0x1924, 0x429E, 0xF739, 0x403E, 0x9025, 0xA1EA,
+    0x2F22, 0xE28F, 0x7759, 0x0814, 0x1545, 0x080A, 0x3B74, 0xA2D0,
+    0x8004, 0x9046, 0x2C87, 0xE207, 0x7C9B, 0x8E20, 0x7018, 0x0DA1,
+    0x2FD3, 0x6825, 0x3B80, 0x0E04, 0x04E2, 0xA828, 0x6081, 0x767E,
+    0x1368, 0x641D, 0x46BE, 0xBD1B, 0x1020, 0x1B15, 0xBBBA, 0xD045,
+    0x747D, 0xAFC4, 0x4070, 0x19DE, 0x0362, 0x4081, 0x47B4, 0x794A,
+    0x003C, 0xE9CE, 0x32A1, 0x2014, 0x202C, 0xA754, 0x8A22, 0xCF77,
+    0x6010, 0x0A05, 0xA041, 0x22F5, 0xA035, 0xA422, 0x1945, 0x2404,
+    0x77D3, 0xE0F8, 0x0578, 0x4C28, 0xA208, 0x74AA, 0xC40A, 0x202D,
+    0x2018, 0x07C3, 0xC283, 0xB19F, 0x441F, 0x08A0, 0xC342, 0x2846,
+    0xA02E, 0x3093, 0x4457, 0x4F77, 0x8954, 0x0CE0, 0x670B, 0x8500,
+    0x093D, 0x4861, 0x534C, 0x6822, 0xDA00, 0xC7B2, 0xB284, 0x141E,
+    0x0CC0, 0x4C52, 0xF40F, 0x20F5, 0x19E9, 0x0CC0, 0x0E0B, 0x5334,
+    0x3CBA, 0x0858, 0x5AC0, 0xF3EE, 0x28E1, 0x170B, 0x0063, 0xBC0C,
+    0x10EE, 0x9662, 0x6372, 0x3E1D, 0xCA50, 0x5863, 0xD55F, 0x45AB,
+    0xB610, 0x2F2D, 0x1040, 0xDB7F, 0x177F, 0x4213, 0x0130, 0x2BDD,
+    0x2182, 0xC00A, 0x2A71, 0xCC91, 0x0301, 0x316E, 0x691E, 0x664B,
+    0x254F, 0x4D49, 0x94E8, 0x381F, 0x8306, 0x8003, 0x62EF, 0x7429,
+    0x082C, 0x43D5, 0x300B, 0xC885, 0x8207, 0x8EB3, 0x0830, 0x04C1,
+    0x3267, 0x0040, 0x0114, 0xE041, 0x317B, 0xBA1A, 0x045F, 0x441B,
+    0x264A, 0x0060, 0x132C, 0xA284, 0xE252, 0x1814, 0x592A, 0xAF87,
+    0xD6AC, 0xE444, 0x02F5, 0x6A5A, 0x6591, 0x8D01, 0x84B0, 0x1601,
+    0x3174, 0xB6EA, 0x3E23, 0x0601, 0x6EEF, 0x401F, 0x5ABA, 0x8814,
+    0x67F7, 0x6DA0, 0x8C48, 0xCEE0, 0x1003, 0x2088, 0x2C5B, 0x8800,
+    0x417F, 0x1023, 0x1A20, 0xD941, 0xD38C, 0x4252, 0x4105, 0x8604,
+    0x8307, 0x46A2, 0x4C98, 0xEEE3, 0x613F, 0x8C61, 0x0075, 0x2E01,
+    0x3150, 0xB6BF, 0x9047, 0x5EE7, 0x263D, 0x1E40, 0x9881, 0x2D81,
+    0xC71C, 0x9005, 0xC208, 0xF436, 0x68F3, 0x4403, 0x8D48, 0xD03A,
+    0xF554, 0x0518, 0x2210, 0x2634, 0x96DE, 0x0F30, 0x3C5D, 0x805B,
+    0x00E0, 0xA8D5, 0xE97B, 0x2118, 0x4B66, 0x0110, 0xC0B7, 0xEB8F,
+    0xB2CB, 0x3F10, 0x746B, 0x2401, 0x8064, 0x302C, 0x01C0, 0x4C63,
+    0x2D80, 0x01D0, 0x6AF0, 0x4658, 0x82D0, 0xC1DF, 0x6A82, 0x0482,
+    0x62F9, 0x6C00, 0x1581, 0x068F, 0x887A, 0xC344, 0x4131, 0x8BB9,
+    0x8D04, 0x27D1, 0x8599, 0x3280, 0x07DD, 0xA7A2, 0x4CA2, 0x098C,
+    0x1DDD, 0x967A, 0x4381, 0x60B2, 0x2194, 0x4B22, 0x0058, 0xCDEF,
+    0x110B, 0xBBAC, 0xCAF9, 0xA800, 0x473E, 0x9DCD, 0x1A54, 0xA182,
+    0x90CA, 0xFD34, 0xA429, 0x1A54, 0x792A, 0x4EE7, 0x6793, 0x17A6,
+    0xE446, 0x938D, 0x2B2A, 0x5255, 0x0654, 0xADE5, 0xA195, 0xB82A,
+    0x64D6, 0xE938, 0x776D, 0x30B0, 0x3222, 0x39B3, 0x0099, 0x5718,
+    0x3F78, 0x4518, 0x59D2, 0x2A8B, 0x065D, 0x2311, 0x99D8, 0xBB48,
+    0x676B, 0x86E2, 0x2952, 0x21F2, 0x547C, 0x6961, 0x74BB, 0x9100,
+    0xA20F, 0x70BF, 0x16AA, 0x986B, 0x551A, 0x527D, 0x1634, 0x2C10,
+    0x4BEF, 0xDB0C, 0xEE08, 0x9695, 0xA843, 0x32F5, 0x294B, 0x37A8,
+    0x58EE, 0xE113, 0x70AD, 0x4102, 0x8C70, 0x0473, 0xF23A, 0x8959,
+    0xCC69, 0x3A05, 0xBA43, 0x43F5, 0x568A, 0x2398, 0x5E11, 0xB359,
+    0x2861, 0xB586, 0x2710, 0x3405, 0x2A50, 0x5D34, 0xC62C, 0x1006,
+    0x0539, 0x2B1B, 0x1D8E, 0x8854, 0xEEE7, 0x33A4, 0xA800, 0x6A42,
+    0x08C0, 0x3C28, 0x4068, 0x3430, 0x1E19, 0x092C, 0x0605, 0x8F60,
+    0x65AD, 0x4A91, 0x9D19, 0x4292, 0x030D, 0x0034, 0x8CB1, 0xBE85,
+    0x245B, 0xC80E, 0x63DA, 0x0D42, 0xC559, 0x8033, 0xD9E1, 0xE413
+};
+
+static const u16 ap1302_fw_bootdata11[ ] = {
+    0x8000,
+    0x4388, 0xEC5D, 0x0E66, 0x48EC, 0x6D1E, 0x00AF, 0x46AF, 0x8982,
+    0x3884, 0x5E9F, 0xDE10, 0x8FA7, 0x3D84, 0xC3E9, 0x3581, 0x25B8,
+    0xCA4C, 0x8323, 0x9210, 0xA24A, 0xA40D, 0x0E60, 0xD8EE, 0x1DE6,
+    0xDC08, 0xD603, 0x74EF, 0x98F2, 0x6E81, 0x18E3, 0x0753, 0x822C,
+    0x5770, 0x8466, 0x0A24, 0x3885, 0xDAD6, 0x0229, 0x1A40, 0xE0C4,
+    0x7551, 0xC021, 0xC4F0, 0x4C5A, 0xEE79, 0x8102, 0x7A46, 0x3C45,
+    0xCB77, 0x0D47, 0x8180, 0x4885, 0xBE90, 0xD630, 0x7FD0, 0x7D83,
+    0x7558, 0x6515, 0x0E14, 0x78C3, 0x9422, 0x0C8C, 0x80F2, 0x3490,
+    0x1098, 0x0A8F, 0x131A, 0x28CF, 0xBEEE, 0xC313, 0xDC80, 0x2087,
+    0x12A0, 0xF12F, 0xBC41, 0xD84C, 0x1307, 0xF995, 0x72D1, 0x7774,
+    0x6183, 0x6800, 0xCBBB, 0xC47C, 0x8F00, 0x6121, 0x599A, 0x023D,
+    0x4210, 0x446E, 0x8D50, 0x8131, 0x5EE9, 0x11E0, 0xBC22, 0x3C8A,
+    0x8088, 0xC040, 0x8837, 0x8081, 0x6810, 0x0147, 0x890C, 0x294F,
+    0xE37D, 0x6C61, 0xA880, 0x67D0, 0x6145, 0xD337, 0xC580, 0x911C,
+    0x0031, 0xD92E, 0x6205, 0x1F77, 0x8780, 0x440A, 0x8064, 0x1F7F,
+    0x0490, 0x43DD, 0x1C26, 0x7E95, 0x0318, 0x3655, 0xE803, 0x44F1,
+    0x3CE7, 0xA2B5, 0xC090, 0x3DDD, 0x6420, 0x05C8, 0x85CC, 0x60CB,
+    0x21D8, 0x420E, 0xEEB1, 0x106E, 0xB445, 0xA019, 0x3042, 0xECD4,
+    0xC094, 0x4014, 0x636E, 0x0631, 0xA403, 0x1D3B, 0x0A34, 0xE84B,
+    0x822E, 0x9C81, 0x7277, 0xF9C7, 0x58C0, 0x6A06, 0x4080, 0x6800,
+    0x8253, 0x591A, 0xC630, 0x2044, 0x80E2, 0x09A0, 0x6310, 0x0501,
+    0x7A24, 0x0F45, 0x71D2, 0x1613, 0xC300, 0xF560, 0x9814, 0x47A1,
+    0x3B10, 0x68E6, 0x9988, 0xF01D, 0x8E40, 0x874A, 0xA290, 0x0614,
+    0x9EC0, 0x3E77, 0xE901, 0x21B0, 0x27A0, 0xA01F, 0x05F6, 0x95F8,
+    0x8068, 0x975A, 0x0672, 0x1FC7, 0x3CC7, 0x2303, 0xC633, 0xEFC3,
+    0x75C2, 0x5B44, 0x978B, 0x0986, 0x2950, 0x28DB, 0xA760, 0x5B14,
+    0x1E45, 0x3C31, 0xAC13, 0x160B, 0x6003, 0xCA47, 0x020B, 0x7746,
+    0x0904, 0x019F, 0x1F6B, 0x1AD6, 0x0082, 0x1049, 0x7482, 0x104C,
+    0x562D, 0xBBB6, 0xECB1, 0xEE01, 0xA808, 0x54C0, 0x0803, 0x7065,
+    0xEDB0, 0xF2BD, 0xC041, 0x3EEF, 0x7B2B, 0x1108, 0x1A38, 0x8C60,
+    0x5876, 0x1204, 0x608D, 0x8700, 0x0F09, 0x4F00, 0x8C91, 0xD470,
+    0x176B, 0x908F, 0x6F9A, 0x1064, 0x1584, 0x1DB0, 0xD440, 0x209A,
+    0x1346, 0x0F5A, 0xD008, 0x9E17, 0xB883, 0x4A42, 0x7CA0, 0x025E,
+    0x939B, 0x108F, 0xBF87, 0x8881, 0xF5C8, 0xA0EB, 0x2190, 0xCE4B,
+    0x1097, 0xD944, 0x3210, 0xF9B5, 0x5C84, 0x209F, 0x5846, 0x8779,
+    0xC00C, 0x8C0A, 0x4C71, 0x6205, 0x1BD5, 0x5A20, 0x2F82, 0x5544,
+    0x011F, 0x8222, 0xF6E3, 0x3004, 0xC790, 0x5813, 0x13E8, 0x780C,
+    0xC1F7, 0x6040, 0x0940, 0x09F2, 0x5439, 0xF14C, 0x58C2, 0x81C1,
+    0x6BC2, 0x0303, 0x1298, 0x52B0, 0x0102, 0x6277, 0x777F, 0x3A28,
+    0x2C81, 0x46F9, 0x03D8, 0x9623, 0x5381, 0x261E, 0xEEFD, 0x6850,
+    0x5D02, 0x4DBD, 0x2D72, 0x0008, 0xEA15, 0xE850, 0x91C4, 0x1801,
+    0x5F1D, 0x6A2E, 0xD57D, 0x2EBF, 0x881E, 0x4C40, 0x2097, 0x7AC6,
+    0x0956, 0x688B, 0x9EB1, 0x3341, 0x8297, 0xA595, 0x0B40, 0x165B,
+    0x09F9, 0x1A02, 0xC796, 0xEC47, 0xBD60, 0x11C5, 0x2914, 0x9C86,
+    0xD0CB, 0xDB88, 0x85D6, 0x5C24, 0xC1A4, 0x0969, 0x8A44, 0xD614,
+    0x0E80, 0xD0D1, 0x1408, 0x1C9D, 0xD12E, 0x030E, 0xA1EB, 0x104C,
+    0x8162, 0x0C41, 0x0D1D, 0x4880, 0x672F, 0x9BF7, 0x87AE, 0x1044,
+    0x20C0, 0xAA3C, 0x904C, 0x40D1, 0x041E, 0x18F8, 0xE198, 0x9EBE,
+    0x4805, 0x1EFB, 0x1F12, 0xE00E, 0x024A, 0xEAAC, 0x10BC, 0x70F4,
+    0x7870, 0x9E1D, 0x7754, 0x31A0, 0x319F, 0x43C0, 0xA94C, 0x02D8,
+    0x6265, 0x9020, 0x9CD8, 0x4041, 0xDA40, 0x8098, 0xAAC0, 0x632E,
+    0x0E10, 0x0821, 0xF052, 0x711E, 0x3E17, 0xF119, 0xAC08, 0xB354,
+    0x38C7, 0x025D, 0x8CFA, 0x3DEA, 0xF05C, 0xB9C0, 0x582A, 0x4E0E,
+    0x4ADC, 0x401F, 0x7ABC, 0xA274, 0xD2A1, 0xE473, 0xE36F, 0x30F0,
+    0xB930, 0x971E, 0x6CBF, 0x3EAB, 0xEA13, 0x83A2, 0x49CC, 0x8600,
+    0x1138, 0x0042, 0x1B31, 0x7CBC, 0x0F88, 0x2067, 0x7026, 0x11BD,
+    0xE6DB, 0xF118, 0x3DB5, 0xC441, 0x2F7A, 0xC490, 0x1E8C, 0xCA41,
+    0x2F7A, 0xC521, 0x370C, 0x391C, 0x1E16, 0x4D1E, 0xF58B, 0x1F04,
+    0xE00F, 0xABFF, 0xCBDB, 0x4746, 0x0D04, 0xBCD7, 0xAC6C, 0x5A06,
+    0x9832, 0x3D0C, 0x04D8, 0x41E4, 0x6A92, 0x2441, 0x2358, 0x1795,
+    0x8880, 0x4377, 0xAC29, 0x90DE, 0x18E8, 0x1EF5, 0x8A40, 0x000F,
+    0x6988, 0x33B1, 0x0208, 0x098D, 0x490D, 0x570C, 0xB1E0, 0x79D1,
+    0xEFE1, 0x44F4, 0x7245, 0x8130, 0xBBD1, 0xE87C, 0xC084, 0x6120,
+    0xD088, 0x8E68, 0x6370, 0x11C1, 0x1D89, 0xB87D, 0xB12C, 0x6C14,
+    0xCC84, 0x8387, 0xACC9, 0xC82A, 0x303C, 0xE22C, 0x5ED5, 0x2430,
+    0xEB59, 0xF63D, 0x4836, 0x3A36, 0xA114, 0xC021, 0x4CB8, 0x0ABA,
+    0xBE94, 0x82FE, 0xAB95, 0x1841, 0x1540, 0xE298, 0x1318, 0x3B0D,
+    0xFCAF, 0x5980, 0x389A, 0x851D, 0x1C30, 0xB009, 0x2049, 0x28AA,
+    0xEC5B, 0x11ED, 0x9D61, 0xCD41, 0x1119, 0x1F20, 0x908F, 0x6418,
+    0x0F57, 0xD211, 0x6DD5, 0xF465, 0xDBE2, 0x4440, 0x16BE, 0x7487,
+    0x1F4F, 0xB089, 0xF18B, 0xC933, 0xD898, 0x409D, 0x5460, 0x0E64,
+    0x5645, 0xA098, 0x8077, 0x8AAB, 0x849D, 0xE5FA, 0x4208, 0x88E6,
+    0x0E64, 0x50F9, 0xDD64, 0x7D52, 0x963A, 0x0F02, 0xEAFA, 0xA361,
+    0xC7A7, 0xE147, 0xABEA, 0xD03A, 0x3B45, 0x2880, 0x8C73, 0x83DE,
+    0x18C5, 0x77DC, 0x0559, 0x8F46, 0x0717, 0xD081, 0xD5F5, 0x4A95,
+    0x868F, 0x48A5, 0x8876, 0x0681, 0x0650, 0x57E8, 0xCD72, 0x37B4,
+    0x5145, 0xD5F4, 0x466E, 0x1A26, 0xEAA1, 0x53AB, 0xF721, 0xDC4A,
+    0xEA14, 0x6208, 0x40A0, 0xD3A8, 0x4F8B, 0xA00B, 0x072E, 0x8470,
+    0xF907, 0x57BD, 0x9F76, 0x6F0B, 0x1EAF, 0x0721, 0xB414, 0x350D,
+    0x1EAF, 0x722B, 0x4BC1, 0x53EA, 0x04C1, 0x0533, 0x4988, 0xDD24,
+    0x10EA, 0xDA11, 0x3333, 0x4956, 0xA4C0, 0x4004, 0x45C8, 0x545C,
+    0x9923, 0x387F, 0xB0C8, 0x11C3, 0xD978, 0xE420, 0x0F25, 0xDE9D,
+    0x7C4D, 0x4205, 0x01E4, 0xDAEB, 0xE091, 0x07C8, 0x0F1F, 0x0791,
+    0x03D3, 0x0626, 0x3976, 0x6C30, 0x82BD, 0x1E2E, 0x24C4, 0x1082,
+    0xE886, 0x7E9F, 0xA820, 0x1BDA, 0x64E2, 0x750E, 0x6866, 0x8C2D,
+    0xD550, 0x43D5, 0xD962, 0x1880, 0x4051, 0xDC0F, 0x9C1D, 0x54BC,
+    0x2207, 0x552E, 0x0883, 0xD5ED, 0xE5DC, 0x95A3, 0xD54B, 0xA420,
+    0x754D, 0xA088, 0x543C, 0x4A94, 0x7AD1, 0x30D8, 0xA1C5, 0xD3B7,
+    0xA353, 0x2056, 0x50C5, 0x0610, 0x6882, 0x1042, 0x1EDA, 0x5A92,
+    0xE82A, 0x2E8C, 0x9EB7, 0xBA2E, 0x3744, 0x5E15, 0xCA2F, 0x5D3E,
+    0x08B2, 0x7993, 0x53E1, 0x7A6D, 0xFCA7, 0xD6A6, 0x88F2, 0x0111,
+    0x4F06, 0x7B20, 0x0079, 0x2344, 0x814E, 0xB6FF, 0x28A1, 0xC60E,
+    0x8758, 0x9797, 0x940E, 0x0736, 0x091E, 0xAF3F, 0x5B9A, 0x3191,
+    0xE237, 0x50B1, 0x2111, 0xB298, 0x0C04, 0xD154, 0x101E, 0x2336,
+    0x826C, 0x8E8D, 0x84DC, 0x40E0, 0xBAB4, 0x82A3, 0xC877, 0xF1A4,
+    0xF086, 0x0086, 0xB580, 0x41E8, 0x80D8, 0x7204, 0x5AE9, 0xC171,
+    0x13F5, 0x1CE5, 0xE4A9, 0x813B, 0x0BA3, 0x0FC2, 0xC224, 0x1577,
+    0x2F0A, 0x396A, 0x8468, 0x0EA5, 0x8763, 0xA2A0, 0x0C85, 0x5D75,
+    0x7491, 0xD415, 0x21DA, 0xCE62, 0x3802, 0x2221, 0x03DC, 0x7B44,
+    0x6480, 0x24F0, 0x222A, 0x90E8, 0x78A3, 0x9D3C, 0xE491, 0xF11F,
+    0xE8F9, 0x886D, 0x5F50, 0x7A98, 0x09D5, 0x0A25, 0xDDB4, 0x4601,
+    0xE708, 0x98B7, 0xD60D, 0xE830, 0x4684, 0x0863, 0xB243, 0xABB6,
+    0x4BAD, 0x4747, 0x3860, 0x6FA6, 0x0247, 0xABB8, 0x0FAB, 0x928C,
+    0xFE4B, 0xBD8E, 0x9014, 0x11EA, 0xE494, 0x0E62, 0x0CD0, 0x13BC,
+    0x48C4, 0x220F, 0x2827, 0x2CE1, 0x8286, 0x100B, 0xAB93, 0xCEA7,
+    0x8FAB, 0x930C, 0x4A1E, 0x90EA, 0xE532, 0x2E80, 0xE2E4, 0x1EEA,
+    0xE4F4, 0x3AB9, 0x3500, 0x4946, 0x6A49, 0x8F55, 0x581F, 0x5726,
+    0x0E3D, 0x7131, 0xC041, 0xA42A, 0xEB94, 0x0440, 0xC07A, 0xCCC4,
+    0xC150, 0x6887, 0x63A9, 0x1607, 0x6298, 0x8D82, 0xD07D, 0x50FC,
+    0x46B0, 0x73D5, 0xC426, 0x1C92, 0x0169, 0x2C01, 0x7572, 0x6A20,
+    0x2F2D, 0x4C43, 0xA688, 0x67B2, 0x8A88, 0x3486, 0x4C5E, 0xF551,
+    0x1206, 0x8041, 0xD5C9, 0x4A83, 0xEABE, 0x355B, 0x16BB, 0x0F48,
+    0x7C56, 0x4660, 0x2556, 0x0F59, 0x1C21, 0xDA8A, 0xE213, 0x8277,
+    0x6A19, 0xE842, 0x5CBE, 0x2207, 0x8EB0, 0x0A67, 0x1340, 0xBA3B,
+    0xCF21, 0xF30C, 0x6078, 0xE940, 0x4222, 0x2102, 0x07D2, 0x9463,
+    0xB288, 0x8843, 0xCA5C, 0xCBAE, 0x9804, 0x2E34, 0x4203, 0x4820,
+    0xD5CC, 0x9749, 0xC010, 0xA3E8, 0xAE09, 0x1449, 0x8C4F, 0x4212,
+    0x4108, 0xA1D6, 0x0C0A, 0x7583, 0xE2DB, 0x2520, 0xE6F7, 0x1E5D,
+    0x321A, 0x1DA4, 0xA502, 0x3823, 0xB257, 0x0E8F, 0x80F2, 0x2489,
+    0x8980, 0x427D, 0x9240, 0xB682, 0x0109, 0xDB17, 0x19EA, 0xE462,
+    0xD1FD, 0x2428, 0x941E, 0x64E4, 0x44ED, 0x4406, 0x3101, 0xAEB6,
+    0x5A12, 0xC02F, 0x3441, 0x648C, 0xD344, 0x152A, 0x4A08, 0x20C5,
+    0x291E, 0x3284, 0x22C4, 0xA034, 0x4148, 0x511B, 0x13E4, 0xB1E2,
+    0x2F30, 0x5022, 0x4884, 0x5DAF, 0x482C, 0x1341, 0x8160, 0x1613,
+    0x418F, 0x59F7, 0x1172, 0x4732, 0x5805, 0xA05F, 0x3AF6, 0x202B,
+    0xD526, 0x2881, 0x2881, 0x27B0, 0x27C8, 0x46C4, 0x0301, 0x42A3,
+    0x03AD, 0x3B90, 0xBA98, 0xBAD3, 0xC10B, 0xA885, 0x9602, 0x71D3,
+    0xCEE4, 0x862D, 0x0546, 0x02A7, 0x5F21, 0x19B3, 0xDEA2, 0x24C7,
+    0x5F92, 0x9B06, 0x9197, 0xD622, 0x47D9, 0x2103, 0xD9F9, 0xA202,
+    0x75F9, 0x291A, 0x263F, 0xA1D0, 0x44EA, 0xD002, 0x8838, 0x6818,
+    0xE6A9, 0x8FE0, 0x3691, 0x0A4D, 0x231F, 0xAF90, 0x5202, 0x48A0,
+    0x4F40, 0x364C, 0x01E3, 0x9049, 0xD705, 0x6394, 0x1C40, 0x4074,
+    0x86C0, 0xF85D, 0x7C84, 0x24E8, 0xC689, 0x3A12, 0x3127, 0x4C52,
+    0xE903, 0x30BC, 0x3303, 0xC4E8, 0x144E, 0x84FD, 0x7E26, 0x4E20,
+    0x401D, 0x2636, 0xB47C, 0xCB74, 0x8531, 0xD7C9, 0x15DC, 0xDA9C,
+    0x7D1A, 0x9A7E, 0xB5F9, 0x1288, 0x701E, 0x82EE, 0xBE40, 0x4C08,
+    0xF4A3, 0xC0B2, 0x6B95, 0x04FE, 0x9DAC, 0x7AF8, 0xFDB2, 0x4061,
+    0x4076, 0x6205, 0x7B88, 0xB080, 0xA1BA, 0xC2A1, 0xD7C7, 0xEC17,
+    0xC221, 0x6A63, 0x25E9, 0xE071, 0x6186, 0xEDB0, 0x2013, 0x610A,
+    0x2003, 0x703F, 0xD1DC, 0x62D0, 0x644F, 0x8A65, 0xC808, 0x5D21,
+    0xCCBA, 0x4FAF, 0x8F91, 0x1883, 0xB1C0, 0x7051, 0xD2C9, 0x1015,
+    0x6771, 0x1C44, 0x89C5, 0x5F02, 0xC288, 0x4020, 0x93A0, 0x4173,
+    0xE121, 0xC3D2, 0x3291, 0xC3D7, 0xC60C, 0x8F20, 0x70E2, 0xA05A,
+    0xAAB9, 0x8582, 0xD428, 0xF091, 0x7205, 0xABA7, 0x87D1, 0xE5C3,
+    0x8F9C, 0x156B, 0x87A6, 0x4CC6, 0xA580, 0x5FAF, 0x61F3, 0x1D10,
+    0xFAC0, 0xE849, 0xE376, 0xFF31, 0xF1DF, 0x088D, 0x7D79, 0xA2C6,
+    0x83E8, 0x4C2E, 0xBCD3, 0x1CCA, 0xF173, 0x024E, 0x1D2B, 0xE08C,
+    0x7D79, 0xAA3A, 0x6121, 0x030D, 0xAA9A, 0x0EBC, 0xD511, 0x854E,
+    0xF821, 0xCCE1, 0x2E7B, 0xCA25, 0xB037, 0x6400, 0x0ABC, 0x16E8,
+    0x80AD, 0x60D4, 0x0D01, 0x67AF, 0x2919, 0x1850, 0xDAAC, 0xE7D4,
+    0x8842, 0x0275, 0xE52A, 0x6221, 0xA029, 0xA442, 0xD0A1, 0xF545,
+    0xC90F, 0xA875, 0x4698, 0xF94C, 0xBC40, 0x9344, 0x4ED1, 0xEE98,
+    0x9CA4, 0x7AA7, 0xB4F5, 0x86DF, 0x2026, 0x03A0, 0x4002, 0x420E,
+    0x07C0, 0x3BE0, 0x1111, 0xF077, 0x6081, 0x1DCA, 0x6622, 0x0031,
+    0x1220, 0xC014, 0x0098, 0x9827, 0x043D, 0x047B, 0x1674, 0x7426,
+    0x2209, 0x8DBA, 0x3EB2, 0x1090, 0x3634, 0x7D42, 0x0193, 0x6802,
+    0x87A0, 0x0220, 0x9AE1, 0xFE8F, 0xAD0E, 0xC311, 0x113D, 0xB26C,
+    0x6534, 0x03C1, 0x8479, 0xAD52, 0x67C3, 0xDD22, 0x739A, 0x0169,
+    0xA215, 0xD300, 0x2647, 0xCD12, 0x4884, 0x64C8, 0xBC4C, 0x87A3,
+    0xC0C5, 0xD78A, 0xE902, 0x8538, 0x0FAD, 0xA13D, 0x30B8, 0x875A,
+    0xFFE3, 0x3842, 0xA52D, 0x2491, 0x859E, 0x039B, 0x10B0, 0xD50B,
+    0x4D30, 0xB4D2, 0x0B90, 0x0209, 0x9E57, 0x5524, 0xC802, 0x59FA,
+    0x50C8, 0x4B2C, 0x17C2, 0x4EA1, 0xE115, 0x0182, 0x0004, 0x9246,
+    0xE4C0, 0x3082, 0x4203, 0xB351, 0x91F0, 0x9979, 0xF5E2, 0xA084,
+    0x7EB3, 0x4E32, 0x842A, 0xECAF, 0xC2D8, 0x8D04, 0x0D24, 0x3AFB,
+    0x214D, 0x8871, 0x2F2B, 0x5510, 0x4E0A, 0x23D8, 0x6787, 0x6FE4,
+    0x4380, 0xD3AF, 0x2F97, 0xEBCB, 0x84EE, 0x282D, 0x1F01, 0x7B57,
+    0xC49C, 0x044F, 0x05E5, 0x23A3, 0xE457, 0xAF29, 0x8B4C, 0x6840,
+    0x8ED8, 0x6B22, 0x8F1A, 0x099E, 0xB560, 0x9EBF, 0x0A30, 0x9C30,
+    0xC044, 0x2410, 0x5599, 0xC07E, 0x1A08, 0x1258, 0x9003, 0xB930,
+    0xF206, 0xB12B, 0xDD5C, 0xE813, 0xC2A7, 0x66DB, 0x0823, 0xCD98,
+    0x46FF, 0xA32E, 0x808D, 0x1521, 0x02E4, 0x85FC, 0x63DF, 0x4A82,
+    0x6E80, 0x1E07, 0x3340, 0x23EB, 0xA7C4, 0xCBD2, 0x43C8, 0xC7A2,
+    0xCF86, 0x4FC4, 0x856F, 0x02F8, 0xBAF6, 0x52E1, 0x7966, 0x0CBA,
+    0xBBCC, 0xB2FF, 0xC420, 0x47B5, 0x654E, 0x1C84, 0xA4C9, 0xE0BF,
+    0xD2D0, 0xC6C6, 0x6609, 0x7761, 0xC088, 0x1D32, 0x6220, 0xBF98,
+    0xFDD1, 0x9C13, 0xEA6D, 0x0205, 0xCEA0, 0x9C00, 0x2583, 0x0466,
+    0x50B4, 0xE968, 0x5888, 0x7020, 0x80E3, 0x282A, 0x283B, 0x95A0,
+    0xA4AA, 0x7323, 0x72F6, 0xC169, 0x7779, 0x999D, 0x5381, 0x60DB,
+    0x1044, 0x9E04, 0x7CB8, 0x3073, 0x8A33, 0x7BC4, 0xB025, 0x3808,
+    0x02E7, 0x3688, 0xE4BE, 0xD08E, 0x593D, 0xD7E2, 0xE351, 0xE875,
+    0xF978, 0xCD81, 0x7C00, 0x1B01, 0x3887, 0xD2E9, 0xC804, 0x34FD,
+    0x3949, 0x12C2, 0x75BA, 0x03B7, 0x9ECA, 0xA783, 0xD006, 0xE210,
+    0x7AB4, 0x3880, 0x7390, 0xBA63, 0xCCDC, 0x0439, 0x7A15, 0x2119,
+    0x108D, 0xA5D2, 0x05B8, 0xC05B, 0x8435, 0xB015, 0xE200, 0xF80D,
+    0x78B8, 0x03E0, 0x4028, 0x2216, 0xE029, 0x6E23, 0x6005, 0x3086,
+    0xC80A, 0x5B18, 0x02AD, 0x85D1, 0x4298, 0xD70A, 0x4970, 0xA827,
+    0x1001, 0xA250, 0x7A0B, 0xF8F9, 0x2898, 0x6686, 0x02E1, 0xB198,
+    0x6974, 0xC440, 0x3442, 0x9F39, 0xCB1B, 0x1D7A, 0xF681, 0x3E05,
+    0xF675, 0xD0DD, 0x2300, 0x95B8, 0xC8B8, 0x1233, 0x5208, 0x75F0,
+    0x0D44, 0xF47B, 0xB084, 0x5D7A, 0x8C43, 0xC1B7, 0x9010, 0x2741,
+    0x0280, 0x49E0, 0xC7E1, 0xF51F, 0x6883, 0xDD7A, 0xC088, 0x063D,
+    0xA171, 0x4868, 0xE948, 0x72C8, 0x781B, 0x6400, 0x25E4, 0x3121,
+    0xF049, 0x50B1, 0x800C, 0x09F0, 0xB333, 0xC080, 0xAA81, 0x3D9E,
+    0x6082, 0x412E, 0xD662, 0x26F6, 0x5159, 0x6262, 0x0068, 0x2409,
+    0x361C, 0xD301, 0x0850, 0xA942, 0xCD88, 0x75DF, 0x1161, 0xDA1E,
+    0x0181, 0x8189, 0xB7D1, 0xA008, 0x6D01, 0xC859, 0xA86D, 0x0825,
+    0x0594, 0x07BE, 0x9407, 0xB6DE, 0x846E, 0x3AC0, 0x502C, 0xCE09,
+    0xB655, 0x42D9, 0xD911, 0x02CD, 0x2A70, 0x81A1, 0xB233, 0x1753,
+    0xFDAE, 0x1E80, 0x68CE, 0x0875, 0x3FD3, 0x7CED, 0x2116, 0x0B05,
+    0x6E3B, 0xE02C, 0x1D2A, 0x373B, 0x8004, 0x4BF5, 0x3F21, 0x1A07,
+    0x3753, 0xFC90, 0x361E, 0x16A6, 0x0217, 0x9181, 0x81D4, 0xFEE2,
+    0x0620, 0x0036, 0x0411, 0xB071, 0x97A9, 0x568E, 0xB803, 0xA9E2,
+    0x4440, 0x9396, 0x0AE2, 0x6048, 0x2D04, 0x0EF3, 0x3610, 0x60D0,
+    0x35FC, 0x77C4, 0x3D4F, 0xE6F2, 0xC6AC, 0xE49A, 0xC2C6, 0x0699,
+    0x0809, 0x1A06, 0x5EC3, 0xC65D, 0x4FEA, 0xB6C3, 0xCA5D, 0x4FEE,
+    0x3D4B, 0x4E2C, 0x18AA, 0xFD4F, 0xEA55, 0xCC04, 0x31C6, 0x7390,
+    0x002F, 0xAF28, 0x47C3, 0x8EE2, 0x116C, 0x3E05, 0xD4FC, 0x8897,
+    0x8943, 0x9753, 0xF10E, 0xD01A, 0x38FF, 0xC020, 0xD6ED, 0x0E0C,
+    0x90BB, 0x580B, 0x7EA7, 0xE348, 0x0908, 0xA291, 0x0EDC, 0x4B44,
+    0x8B45, 0x8B47, 0x8022, 0x6895, 0x2C81, 0x1621, 0x101E, 0x8049,
+    0x25A1, 0x00C8, 0xE521, 0x11D4, 0xDB05, 0xAC19, 0x1168, 0x6F0D,
+    0x18F6, 0x2F10, 0xF53F, 0x0218, 0xA204, 0x5087, 0x47A9, 0xF80A,
+    0x2081, 0x3520, 0x2106, 0x023D, 0xBEC6, 0x2C02, 0xC137, 0x53EB,
+    0x1016, 0x9EC1, 0x7A3E, 0x8484, 0x1F0F, 0x2797, 0x9BE0, 0x8462,
+    0xB0A9, 0x5210, 0x0BBA, 0x9F48, 0x75AE, 0x2384, 0x340F, 0xBC81,
+    0xF105, 0x41D1, 0xB0A0, 0x1107, 0x530B, 0xA9F6, 0x4FD4, 0x2722,
+    0xC810, 0x1F48, 0xD071, 0xE794, 0xF2C7, 0xA1AC, 0x0C2B, 0x0202,
+    0x68C3, 0xEA7D, 0x8458, 0x6A52, 0x2604, 0x6081, 0xCA3D, 0x4FAE,
+    0x831D, 0x4FAA, 0x3D4F, 0xA640, 0x789E, 0x4A98, 0x5D50, 0xE25B,
+    0x06F0, 0xF53E, 0xA8FB, 0x3638, 0x4407, 0x0091, 0x47BB, 0x1AC4,
+    0x28EA, 0x1384, 0x7AC8, 0x7C42, 0x6E46, 0xEF27, 0x8072, 0x6A0D,
+    0x7B02, 0x810C, 0xA4C9, 0xA835, 0x5D49, 0x0329, 0x306A, 0x0D3D,
+    0xA479, 0x2426, 0xC412, 0x5122, 0x33A7, 0xE2E4, 0x9208, 0xFA98,
+    0x2500, 0x00D4, 0x1921, 0x46A0, 0x4CBA, 0x327D, 0x4C12, 0x45C1,
+    0x9011, 0xF530, 0xE200, 0x6176, 0x640C, 0xA4F1, 0xA82E, 0x96C2,
+    0x00CA, 0x4D41, 0x8165, 0x3215, 0x8180, 0x6008, 0xBC1A, 0x7125,
+    0xC997, 0x0C18, 0xF102, 0xABCB, 0xBB36, 0xCA84, 0x016D, 0xEAFF,
+    0x81C6, 0x8500, 0x1DDB, 0xC006, 0x04BD, 0x501A, 0x7D50, 0x2E2C,
+    0x4103, 0x0292, 0x1E2B, 0x1212, 0xD3BF, 0xEC4B, 0xA1D2, 0x47A1,
+    0xD2CC, 0x0702, 0xFA9E, 0xA102, 0x0072, 0xF1A3, 0x0881, 0x4648,
+    0x0A61, 0x81C7, 0xE940, 0x478F, 0x22DE, 0x45E1, 0x8D84, 0x0F57,
+    0x840F, 0x5403, 0x09B0, 0x8189, 0xD501, 0xC890, 0x98AF, 0x04A8,
+    0x2044, 0x4EA8, 0x0F44, 0x0444, 0xB446, 0x6360, 0x97F4, 0x9200,
+    0xA214, 0x2013, 0xF0C7, 0x06B2, 0x8860, 0xD013, 0xBC32, 0x4C26,
+    0x277B, 0xDB8F, 0x7E71, 0x8F94, 0xB904, 0x8434, 0x02F6, 0x843E,
+    0xAE6D, 0x1EA8, 0x1212, 0xC0C4, 0x09FA, 0x9FED, 0x1E9D, 0xCE1D,
+    0x40E8, 0xC290, 0xFC87, 0x7D2F, 0x0B03, 0x31FD, 0xE38A, 0xA110,
+    0x3AA0, 0x210D, 0xA1AC, 0xB062, 0x8049, 0xD504, 0x08C4, 0x0F86,
+    0x0F08, 0xD8EA, 0x7402, 0xEE29, 0x2108, 0xFC30, 0xF874, 0x6876,
+    0x8DA3, 0xD9B6, 0x8712, 0xD051, 0xF01C, 0x49A3, 0x86C5, 0x858A,
+    0x480B, 0xAD19, 0x70F5, 0x4029, 0x73FA, 0x41C6, 0x6700, 0xA040,
+    0x6C8F, 0x4130, 0x1E12, 0x1AD9, 0xF062, 0x6052, 0xA444, 0x23C0,
+    0x24EA, 0x7F25, 0xBAB9, 0xB8BA, 0x9FD1, 0x2EA7, 0xF048, 0x52E9,
+    0xB562, 0xC334, 0x3CA8, 0x287A, 0x9BA8, 0x8001, 0x47B0, 0x9C0B,
+    0x6E62, 0x114B, 0xCD4D, 0x4412, 0x721A, 0xC2B8, 0x984A, 0x8B1F,
+    0x16C5, 0xF63D, 0xB7CE, 0x2408, 0xB5D6, 0x5C82, 0x4254, 0x90F5,
+    0x4151, 0x31B1, 0x7E95, 0x4A18, 0xB28E, 0xCCE8, 0x2182, 0x1D52,
+    0x4E21, 0x8109, 0xE9FA, 0xF21C, 0x080B, 0x6017, 0x5409, 0x954F,
+    0x816C, 0x2275, 0x40AA, 0x7AD1, 0x61B9, 0xE042, 0x3EA8, 0x192A,
+    0xD52A, 0xCC2E, 0xB16D, 0x2EB8, 0xFD20, 0x94C2, 0x0044, 0xBEE0,
+    0x681C, 0x9841, 0x0BC9, 0x5B40, 0x96C9, 0xE25E, 0x4A0E, 0x1103,
+    0xAA04, 0xD4F4, 0xE720, 0xB882, 0x9DC6, 0xB647, 0xB023, 0xD435,
+    0xC200, 0x64D8, 0x9120, 0x1074, 0xD3D0, 0xDC66, 0x440D, 0xC205,
+    0xEE97, 0xC113, 0x7A9F, 0xE464, 0x2202, 0x9C47, 0xF992, 0x6B0C,
+    0x5A90, 0xC130, 0x3A28, 0x8040, 0x3DAB, 0xBCB9, 0x79F9, 0x5B4C,
+    0x2DC6, 0x4C79, 0x77C8, 0x6A88, 0x480E, 0x9EA0, 0x1268, 0xF006,
+    0x8602, 0xE80A, 0xEA80, 0x8408, 0x02E9, 0x3202, 0x4C24, 0x797E,
+    0xC012, 0xAA40, 0x2F20, 0x6849, 0xA395, 0xB103, 0x415C, 0x412B,
+    0x872B, 0x8C21, 0xE40D, 0xA005, 0xD811, 0xC3E9, 0x9671, 0xE6F1,
+    0x83E0, 0x9981, 0xD69C, 0x0F73, 0xBD49, 0x67E4, 0x7C43, 0x3404,
+    0x3A24, 0x5BED, 0xEC88, 0x9E46, 0xE72C, 0xA4A1, 0xB95C, 0xCB83,
+    0xB004, 0x36BD, 0xA3E0, 0x3B11, 0x00EC, 0x73A5, 0xD4FF, 0x2352,
+    0xE2ED, 0xDEF6, 0x63EB, 0xB522, 0xE933, 0x7204, 0x8E0E, 0xA7F8,
+    0x5AE3, 0x9304, 0x8043, 0x0A96, 0x87AA, 0x040F, 0xCDE6, 0xE3E9,
+    0x29C1, 0x6363, 0xE02D, 0xA2A4, 0xBC2E, 0x6062, 0x34A4, 0xB4ED,
+    0xC206, 0x6C62, 0x0362, 0xE119, 0x49F2, 0x7F62, 0xDD3D, 0x5E91,
+    0x993D, 0xBE48, 0x2134, 0x8089, 0xF080, 0xB8CB, 0xD61C, 0x65E0,
+    0x7B78, 0x27B4, 0x6425, 0xADE6, 0x1CCF, 0x9190, 0x180C, 0xAC3D,
+    0x33AE, 0xE298, 0x5202, 0xCE65, 0x61CD, 0xA842, 0xC80B, 0x319A,
+    0xD79C, 0x1FE7, 0x7B36, 0x2A1D, 0x9360, 0x4512, 0x9DA3, 0x13A9,
+    0xF75E, 0x4000, 0x6379, 0x823D, 0x4FB8, 0x9047, 0xA5D8, 0x4805,
+    0x1642, 0xACE5, 0x93C6, 0x821D, 0x4BF6, 0x20FF, 0xA28D, 0xC75C,
+    0x043C, 0x04A0, 0xBC4A, 0xFA50, 0x8077, 0x9F85, 0x0041, 0xD22E,
+    0x65DA, 0x0983, 0xD39A, 0xA3E8, 0xE7F1, 0x3982, 0x0902, 0x2102,
+    0x900A, 0x0284, 0xBB43, 0x68F2, 0x9E83, 0x047A, 0x7D10, 0x80B3,
+    0x9025, 0x1040, 0x03D7, 0x6916, 0x2030, 0xF20A, 0xB9CA, 0x1A26,
+    0xF808, 0x6B01, 0x66AF, 0x4C2F, 0x0FAE, 0xE8D2, 0xBE28, 0x4484,
+    0x745C, 0x23E2, 0x9463, 0x09D2, 0xEA36, 0x02DC, 0x668B, 0x07F0,
+    0x5AA9, 0x0BE4, 0x9E54, 0x3F18, 0x9E02, 0x910D, 0xD64C, 0x6911,
+    0xE012, 0x1EE2, 0xC510, 0xBB97, 0x0208, 0x23E4, 0x4801, 0xC2E5,
+    0x1EBB, 0xD83E, 0xCCF8, 0x1242, 0x10FC, 0x67BC, 0x3DB9, 0xAA3E,
+    0x84AF, 0x1EB2, 0x6730, 0x90D0, 0x1529, 0xA88A, 0x9D46, 0xDC3D,
+    0x64CE, 0x2071, 0xCD69, 0x302B, 0x4E03, 0xC019, 0xEC2A, 0x8108,
+    0x2084, 0x028A, 0x3348, 0x2543, 0xAC9A, 0x4981, 0x2921, 0x2900,
+    0x1F59, 0x34AC, 0x0716, 0xD1C2, 0x0315, 0xBD64, 0xD480, 0x1A99,
+    0xA020, 0x7593, 0x4A85, 0x3005, 0xA182, 0x101B, 0xCB0A, 0x05E9,
+    0xA703, 0xED34, 0x3405, 0x1AB0, 0x40E9, 0xF1BF, 0xB89D, 0x039D,
+    0x083A, 0x0C40, 0xAA20, 0x41B6, 0x4092, 0x2688, 0x6587, 0x1409,
+    0x110C, 0xB100, 0xCB11, 0x08D1, 0x0BFC, 0xC8C0, 0x5D95, 0x6622,
+    0x09A2, 0x16F9, 0x5BA4, 0x4412, 0xC711, 0x589E, 0x26DF, 0x5B9A,
+    0x2015, 0x0806, 0xB055, 0xE183, 0x19F1, 0x8C72, 0x5E6A, 0xB521,
+    0x03D2, 0x9825, 0xE748, 0xB23C, 0x83CA, 0x0606, 0xB846, 0x6A83,
+    0xDC9C, 0x3C79, 0xD430, 0x8023, 0xA16A, 0x071A, 0x210D, 0xCE30,
+    0x0684, 0xC09F, 0xBAAF, 0x040C, 0xC740, 0x25A8, 0x6078, 0x02FE,
+    0x0037, 0x3033, 0x45C2, 0x2217, 0xBAEE, 0x841C, 0x26C1, 0x4068,
+    0xA283, 0x1040, 0x1A24, 0x9206, 0x1178, 0x0430, 0x3C05, 0xE5C1,
+    0x11AE, 0x1913, 0x9080, 0x0109, 0x5038, 0x0935, 0x480F, 0x3F83,
+    0x0C48, 0x79B8, 0x3503, 0xFFAB, 0x9B13, 0xECC3, 0xA104, 0x8960,
+    0x2FA4, 0xE484, 0x0B3C, 0x0040, 0x2C82, 0x0944, 0x0EB4, 0x8391,
+    0x03D2, 0xCA88, 0xDCF8, 0x2289, 0x508F, 0x8E0C, 0x081D, 0xEC06,
+    0xE3B9, 0xB050, 0x0000, 0x0000, 0x0300, 0x00FC, 0x0000, 0x0000,
+    0x4206, 0x0A48, 0x3800, 0x0003, 0x7000, 0x1FBF, 0x65D6, 0x4808,
+    0x6A09, 0x981A, 0x74B4, 0xD218, 0x6D20, 0x2F46, 0x5062, 0xBFB8,
+    0x38A5, 0x8537, 0x6886, 0x3607, 0x4436, 0x034A, 0xDA4E, 0xBE4F,
+    0x64FC, 0x797D, 0xB6CB, 0x25AE, 0xC148, 0xAE1D, 0x6768, 0x235B,
+    0x4A62, 0x0060, 0x0401, 0x00F3, 0x545B, 0xBA00, 0x102F, 0xBFB2,
+    0xE403, 0x0041, 0x100C, 0x0204, 0x8030, 0x0F95, 0x40C8, 0x11B8,
+    0x144D, 0xCA80, 0x016A, 0x248B, 0x6DB4, 0xB007, 0xA5E6, 0x080F,
+    0x00FA, 0x83F8, 0x7B62, 0xF640, 0x105B, 0x0AC0, 0x02E0, 0x2007,
+    0xD0F3, 0xC209, 0x8060, 0x201C, 0x0100, 0x8048, 0x0202, 0x008C,
+    0x6C99, 0x6F2F, 0xBF7E, 0xFDFB, 0xF7EF, 0xDFBF, 0x7EFD, 0xFBF6,
+    0x2060, 0x1974, 0xD400, 0xE060, 0x1006, 0x0160, 0x601B, 0x868E,
+    0x4110, 0x339B, 0x200D, 0x6245, 0xD641, 0x67F0, 0x0200, 0x4F32,
+    0xD548, 0x1204, 0x0140, 0x581D, 0xD20A, 0x1209, 0xEF1C, 0xA20A,
+    0x8200, 0xB022, 0x0B82, 0x40C6, 0xB04A, 0x7607, 0xF797, 0xDFBF,
+    0x7EC4, 0x0000, 0x3618, 0xE5F2, 0x7130, 0xB090, 0x01E0, 0x26C0,
+    0xC2D2, 0x0000, 0x0600, 0x0008, 0x0001, 0x0002, 0x0300, 0x0168,
+    0x0000, 0x0000, 0xFFFF, 0xA000, 0x3800, 0x0001, 0xEC00, 0x03D8,
+    0x11F3, 0x64AC, 0xB01F, 0x2023, 0xC944, 0x3D8E, 0x1E1B, 0x5B2C,
+    0x04C8, 0x0751, 0x021C, 0xA017, 0x236F, 0x3016, 0x3BBB, 0xD058,
+    0x1150, 0x0DD0, 0x1661, 0xCBB0, 0x3E66, 0x110E, 0x8888, 0x6934,
+    0x881C, 0x803B, 0x2911, 0x1204, 0x4398, 0xB108, 0x900B, 0x6107,
+    0xA762, 0xC608, 0x43E4, 0x0369, 0x8843, 0xD851, 0xC828, 0xAC24,
+    0x8402, 0xA004, 0x23BA, 0x73CB, 0xAF27, 0x679F, 0x869D, 0x8D05,
+    0x802F, 0x1A45, 0x6926, 0x9090, 0x8C39, 0x007B, 0x6492, 0x200B,
+    0x8630, 0x8AC6, 0xA179, 0x1613, 0xB64E, 0x24C8, 0x0512, 0x7B02,
+    0x519F, 0xE7E1, 0xFE7D, 0x1FE7, 0xECC0, 0x71C3, 0xA11B, 0x23FC,
+    0xFB88, 0x3D26, 0x2943, 0x91F5, 0x2113, 0xFA18, 0xCFD8, 0x118E,
+    0x521C, 0xB426, 0x452C, 0x4220, 0x71C3, 0x6340, 0x4A88, 0x14EC,
+    0x402D, 0x111D, 0x27B8, 0xC70C, 0xF053, 0x791F, 0xF5C6, 0x602C,
+    0x4180, 0x1425, 0x1A26, 0x8000, 0xD007, 0x0288, 0x030E, 0x9C80,
+    0x67E3, 0x9A10, 0x9D0E, 0x8109, 0xF890, 0x0341, 0x4A18, 0x61CA,
+    0x2840, 0x31D8, 0x0222, 0x8013, 0x3401, 0x1CC0, 0x132F, 0xAD96,
+    0x4473, 0x008F, 0xE008, 0x1B00, 0x7CAC, 0x3639, 0x17A2, 0x0D80,
+    0x47D0, 0x045E, 0x0025, 0x7A05, 0x1203, 0x0414, 0x3C9B, 0x364B,
+    0xC008, 0xACF0, 0xAF84, 0x8EDD, 0x2104, 0x5D6D, 0x3D25, 0x473B,
+    0x6E93, 0x47CA, 0xC643, 0x5D40, 0x6380, 0x2638, 0x0469, 0x0061,
+    0xD004, 0x2900, 0x2380, 0x0205, 0x0023, 0x4804, 0x2600, 0x6140,
+    0x067F, 0x0046, 0xD804, 0x1700, 0x26B7, 0xAD67, 0xE634, 0x29A8,
+    0x0000, 0x0000, 0x0300, 0x0810, 0x0000, 0x0000, 0xFFFF, 0xAD08,
+    0x3800, 0x000D, 0x5C05, 0xFD55, 0x1D3E, 0x1A8D, 0x909C, 0xA3C5,
+    0xFC22, 0x91C5, 0xDF20, 0xA308, 0x2298, 0x3D13, 0x0630, 0x85C0,
+    0x2065, 0x8C0F, 0xC06C, 0x8842, 0x987D, 0x8622, 0xA214, 0x148D,
+    0xC081, 0x48FF, 0xA552, 0xC004, 0x291B, 0xC518, 0x110E, 0xA0A6,
+    0x100F, 0x5E56, 0x0192, 0x8C10, 0x99CA, 0x0C85, 0x3079, 0x403E,
+    0x9810, 0xA808, 0x6F08, 0x4538, 0x80B1, 0x04C4, 0xF500, 0x40A3,
+    0x109C, 0xC247, 0xA923, 0xE3AC, 0x212B, 0x408F, 0x30D4, 0x884C,
+    0x1604, 0xC198, 0x8016, 0x0270, 0x8014, 0x84C8, 0x0661, 0x0261,
+    0x2188, 0x2966, 0x31E4, 0x8200, 0x8102, 0x3072, 0x1984, 0xD112,
+    0x0C85, 0x9120, 0x1304, 0x110D, 0x5C6F, 0xC4F4, 0x47C1, 0x007F,
+    0x2221, 0x0A00, 0xB1F3, 0x1089, 0xF8C1, 0xFED0, 0xA20B, 0x6180,
+    0x9331, 0x8111, 0x1E25, 0x1A24, 0x062B, 0xD236, 0x444F, 0x0989,
+    0x1012, 0x4C81, 0x38C5, 0x4630, 0xEF5F, 0xA600, 0x6470, 0x80C0,
+    0x3C01, 0xE147, 0x8022, 0x290C, 0x1A90, 0x030B, 0x204B, 0x2222,
+    0x00C0, 0x0E68, 0x0106, 0x5014, 0x4602, 0x24A1, 0x8C22, 0xD3C2,
+    0xC6D4, 0x34F8, 0x6978, 0x88A2, 0x8841, 0x1A80, 0x1E50, 0x62CB,
+    0x031B, 0x1A60, 0x10D6, 0xB69A, 0xC493, 0x6443, 0x1441, 0xA0B8,
+    0xE0C6, 0xC401, 0x1851, 0x5804, 0x2884, 0x50C0, 0xDC71, 0x3228,
+    0x8698, 0x64AA, 0x2150, 0xDB0E, 0xDD56, 0xA190, 0x0148, 0x0908,
+    0x6410, 0x6464, 0x4808, 0x03AA, 0x8360, 0x38C8, 0x342A, 0xBB21,
+    0x444A, 0x8331, 0x3287, 0x11FB, 0x4611, 0x3840, 0x4148, 0x8E00,
+    0x0082, 0xB4A6, 0x2B4A, 0xE811, 0x2DA3, 0x59E6, 0x5C42, 0xC17C,
+    0x818D, 0x0226, 0x74D0, 0x5A1C, 0x0A38, 0x4021, 0x487E, 0x8B13,
+    0x58AD, 0x37A2, 0x55E0, 0x31D2, 0xC1CC, 0x81DC, 0xBC44, 0xB561,
+    0x211E, 0x0070, 0xCC04, 0x3329, 0x414C, 0xE07F, 0x1000, 0x1B58,
+    0x2CC2, 0xA543, 0x1D48, 0x8F55, 0x5485, 0x5910, 0xAA1D, 0x01DE,
+    0x1799, 0x1A94, 0x430F, 0xF552, 0x6111, 0x0AD3, 0xD810, 0x3301,
+    0x13AE, 0x0449, 0x98C6, 0x4F85, 0x4980, 0x0D40, 0x30E4, 0x0406,
+    0x83A5, 0x0F15, 0xDB48, 0x0256, 0x9ED1, 0xA00B, 0x14A0, 0x1EF6,
+    0x9E24, 0x200C, 0x0B10, 0xF082, 0x6603, 0x5182, 0x3855, 0xF91A,
+    0x9916, 0x2932, 0x569F, 0x4091, 0xC32D, 0x0040, 0x519D, 0xCE31,
+    0x1048, 0x8E48, 0xFC04, 0xC338, 0xD063, 0x1F10, 0x050E, 0xB283,
+    0x3F80, 0xD264, 0x0E19, 0xBB67, 0x6A5E, 0x8AEE, 0xA0D6, 0x18D0,
+    0x03C3, 0x340D, 0x7A1E, 0x58B8, 0x6983, 0x9804, 0x064D, 0x9010,
+    0x5412, 0x005D, 0xAB88, 0x6299, 0x12B6, 0xAF61, 0x00AB, 0x0D0A,
+    0xD321, 0x5066, 0x00B1, 0xD781, 0x33D4, 0x5952, 0x3174, 0xBF60,
+    0x8019, 0x4466, 0x0279, 0x7100, 0xC0C6, 0x8188, 0x7167, 0x58B7,
+    0x6C06, 0x3ABF, 0xBB12, 0x400D, 0xD88C, 0x4C61, 0x1E85, 0xA992,
+    0x2881, 0xD223, 0x8A7E, 0x782D, 0x12C0, 0x682C, 0x2E8E, 0x81D0,
+    0xB01E, 0x8B02, 0x00B0, 0x218B, 0x0230, 0x91DD, 0x90D0, 0x2830,
+    0xAA09, 0xFE02, 0x8400, 0xB141, 0xD0A5, 0x3202, 0x00A2, 0xA908,
+    0x0294, 0x78AF, 0xE4B0, 0xBB58, 0x3B0A, 0xF07B, 0x1842, 0x6146,
+    0x8307, 0x9014, 0xA58C, 0x5B90, 0x6880, 0x4581, 0x7A40, 0x73E2,
+    0x1183, 0x0C16, 0x31DC, 0x98B3, 0x1A20, 0x48A2, 0x80BD, 0x2C36,
+    0x0840, 0x26C7, 0x060C, 0x5860, 0x6108, 0x1A07, 0x44C2, 0x200C,
+    0x8D30, 0x2884, 0x0216, 0x4210, 0xD230, 0xC038, 0x33BD, 0xA005,
+    0x6843, 0x0300, 0x5408, 0x4010, 0x1A20, 0x6B04, 0xAD16, 0x11A8,
+    0x5040, 0x0688, 0x2B53, 0x80A1, 0xDD01, 0xA244, 0x0353, 0x2A31,
+    0x2040, 0xA818, 0x0804, 0x5801, 0x6D24, 0x4004, 0x2801, 0xD318,
+    0xCAD1, 0x9CD8, 0xA563, 0x3F88, 0xE002, 0x06C3, 0x3110, 0x06CB,
+    0x9289, 0x4046, 0x1990, 0x0121, 0x5009, 0x90A4, 0xC95A, 0x4941,
+    0xC77D, 0xD11C, 0x5DA0, 0x4401, 0x171D, 0xA001, 0x44A4, 0xC02C,
+    0x485A, 0x2240, 0x3602, 0x0014, 0x2093, 0x9548, 0x0026, 0x4C83,
+    0x4331, 0xB2C0, 0xE191, 0xCA34, 0x8024, 0xE512, 0xA636, 0xA133,
+    0x26C3, 0x0169, 0x8981, 0xC380, 0x1C01, 0x07B2, 0x0507, 0x1349,
+    0x1AD8, 0x1CBF, 0xA903, 0x84C0, 0x5CCC, 0x8911, 0x0C70, 0x048F,
+    0xC336, 0x04AC, 0x9E99, 0x3290, 0x040D, 0x0828, 0xEBC9, 0xF18A,
+    0x12A1, 0x48A8, 0x675C, 0x6573, 0x9015, 0xC024, 0x1016, 0x04A2,
+    0x4604, 0x4205, 0x9109, 0x0846, 0x3091, 0xD8B3, 0x23B7, 0x89DD,
+    0xC368, 0x6366, 0xA364, 0x489D, 0x8020, 0x0641, 0xD0CD, 0x0064,
+    0x1633, 0x0140, 0x6410, 0x2CC0, 0xD132, 0xF7C8, 0x246E, 0x64C8,
+    0x99C9, 0xC913, 0x3C11, 0x1854, 0x0EB0, 0x34B5, 0x50C6, 0x80CC,
+    0x052A, 0x0023, 0x1540, 0x3288, 0x66A0, 0x49EB, 0xE010, 0x892A,
+    0xC092, 0xA009, 0x29B8, 0xA314, 0x8460, 0x40EA, 0x038D, 0xC029,
+    0xFBC1, 0x9324, 0xD13F, 0xC183, 0xECF4, 0x92B1, 0x7441, 0x5384,
+    0xCC8C, 0x8BE2, 0xA9F0, 0x1C4C, 0xC3FE, 0x2CFB, 0xF78C, 0x8D50,
+    0x0810, 0x022C, 0x5238, 0x8226, 0xC881, 0x6290, 0x8D06, 0x0D08,
+    0xF1C7, 0xB032, 0x0502, 0xF05D, 0x2910, 0x1A08, 0xC5C4, 0x84AC,
+    0x9264, 0x0021, 0x3408, 0xA046, 0x0020, 0xC802, 0x19C4, 0x2A47,
+    0x65AD, 0x1360, 0x75A2, 0xE5A3, 0xD006, 0x1980, 0x3902, 0xA591,
+    0x8C00, 0xDFA2, 0x00F3, 0x7106, 0x0116, 0x4640, 0x4C02, 0x4385,
+    0x5A95, 0xE8A1, 0x7068, 0x0A66, 0x8232, 0x102C, 0x8C8A, 0x3085,
+    0x6403, 0x2299, 0xC980, 0x144C, 0xCAFF, 0x23F6, 0xE3E3, 0x14CC,
+    0x6CA4, 0x2288, 0x4EF3, 0x2031, 0x0280, 0x023D, 0x5329, 0x68C8,
+    0x627F, 0x5E0C, 0x7CAC, 0x508F, 0x0883, 0xCAA1, 0x18F2, 0x0581,
+    0x0B0A, 0x8E38, 0x319F, 0x8682, 0x8994, 0x6019, 0x9746, 0xA4CB,
+    0x1BBF, 0x2096, 0x4664, 0x5050, 0xE505, 0x23B1, 0x0054, 0xB233,
+    0x907C, 0x266F, 0x29A0, 0x8542, 0xA110, 0x4142, 0x8535, 0x1069,
+    0x9AAE, 0x00A0, 0x0108, 0x8011, 0x56B9, 0x8BD0, 0xFD52, 0x739E,
+    0x0751, 0xE940, 0x80FA, 0x3A83, 0xA378, 0x3200, 0x88B3, 0xD852,
+    0x3D85, 0xB3F0, 0x3E3D, 0x0673, 0x94AA, 0x3D89, 0x4ACF, 0x03E4,
+    0x0B3F, 0x8113, 0xF019, 0x3C61, 0x000F, 0x3E60, 0x80F8, 0x3E41,
+    0xFB1B, 0x01E8, 0x2B9E, 0xE6C4, 0x201F, 0x4541, 0xEC7B, 0x1FA5,
+    0xF9EA, 0x411E, 0xE241, 0xF201, 0x9F46, 0xA9EC, 0x211F, 0xC069,
+    0xEA5D, 0x9E25, 0x79EE, 0x1A1F, 0x6431, 0xE90C, 0x06A9, 0xF046,
+    0x5C58, 0xF222, 0x88BC, 0x8018, 0xB425, 0x8B42, 0x88B4, 0x2B8B,
+    0x42E8, 0xB431, 0x8B43, 0x48B4, 0x3789, 0x1464, 0x5729, 0x0A40,
+    0x1A60, 0x1D65, 0x1899, 0x6021, 0x0087, 0x12D8, 0x0800, 0x61D5,
+    0x2E01, 0x0009, 0x58BA, 0x0800, 0x4B43, 0x9028, 0x3332, 0x1106,
+    0x6C00, 0x6380, 0x7DB9, 0xA748, 0x0112, 0xB881, 0xBD97, 0xCBC8,
+    0x8402, 0x80D2, 0x2644, 0x4021, 0x0039, 0x1633, 0x0EB2, 0x73A2,
+    0x12D8, 0xE60B, 0x1009, 0x0043, 0x80AC, 0x1401, 0xE440, 0x0F10,
+    0xB83D, 0x0EA8, 0xA006, 0x012A, 0xC296, 0x963C, 0x5D45, 0x451B,
+    0x691B, 0x2195, 0xDA23, 0x3C1D, 0xB691, 0xF1EB, 0xFCF4, 0x2A10,
+    0x8011, 0x4B85, 0x0A42, 0x12E5, 0x661B, 0x0207, 0xFC3A, 0xB7D7,
+    0x8317, 0x1E1B, 0x15CD, 0x16F6, 0x4683, 0x000D, 0xDA0C, 0xB3B6,
+    0xFE99, 0xB203, 0x5910, 0x3801, 0xF8D8, 0x4200, 0x48A5, 0xCC88,
+    0x9200, 0xAA7D, 0x1A6A, 0x17B3, 0x08D0, 0x8D96, 0x4888, 0x0765,
+    0xCC05, 0x00A6, 0xD2B0, 0x4F31, 0x48BE, 0x5E80, 0x1124, 0x0A1E,
+    0xA0C0, 0xCC0F, 0x6043, 0x11C2, 0xF331, 0xC45F, 0x1724, 0xA554,
+    0xE652, 0x0A20, 0x5808, 0x844A, 0xE530, 0x0C01, 0x52D4, 0x220D,
+    0x92A0, 0x0604, 0x240A, 0x8868, 0x0E99, 0x9764, 0x7800, 0x13B2,
+    0x00AC, 0x848F, 0x400E, 0x1C04, 0x5141, 0x003D, 0x0089, 0xCD10,
+    0x00D4, 0xEA40, 0x28E1, 0x7ED0, 0x0400, 0xC736, 0x8799, 0x6A11,
+    0x60D4, 0xDA07, 0x90D6, 0x1E84, 0xB12B, 0x8E3D, 0x07D4, 0x2043,
+    0xC0E0, 0x7F03, 0x0060, 0x0CA5, 0x4211, 0x3E35, 0x7A63, 0x12C1,
+    0xF40C, 0x81E0, 0x3AC9, 0xF84C, 0x9003, 0x3269, 0xFA36, 0x3510,
+    0x080A, 0x0221, 0xD501, 0x0200, 0x8158, 0x080C, 0x2396, 0x0282,
+    0x0006, 0x6542, 0xC5E8, 0x0E20, 0x3032, 0x1986, 0xCE54, 0xB898,
+    0x0300, 0x8051, 0x580E, 0x0029, 0x0319, 0xDDD4, 0xF038, 0x8240,
+    0x4352, 0x9401, 0xDB7E, 0x8B00, 0xA021, 0x0EB0, 0x2D4D, 0xD488,
+    0x1618, 0x0601, 0x0F45, 0x1A8C, 0x4AA2, 0x18E2, 0x1166, 0x5189,
+    0x9982, 0x24A7, 0xA487, 0x02B8, 0xD11A, 0x21D5, 0xF3D7, 0xF4D8,
+    0x1D80, 0xD01A, 0x0340, 0x6B2C, 0x8BC5, 0x8183, 0x5B82, 0x5607,
+    0x54B2, 0x5291, 0xAA38, 0x169B, 0x7905, 0x0020, 0x0B9C, 0xDC25,
+    0xB1A2, 0x13C3, 0xABE4, 0xB729, 0x71A3, 0xA4C1, 0x5401, 0x806A,
+    0xC564, 0xB172, 0xE8AC, 0x0AAA, 0x8961, 0xC0BC, 0x007A, 0x0CF0,
+    0x5C6D, 0x0E65, 0xF03A, 0x1059, 0x110B, 0x4F94, 0xC022, 0x20E0,
+    0x6001, 0xE2E0, 0x107A, 0x80A0, 0xF002, 0x23CB, 0x0A2D, 0x1B16,
+    0x8185, 0x7741, 0x450C, 0xB46A, 0x1C2E, 0xD119, 0x6819, 0x4C57,
+    0xA306, 0x2101, 0x7D4B, 0x4630, 0x066B, 0xFAC0, 0xB644, 0x79C1,
+    0x9322, 0x9FC9, 0x67B0, 0x3EC8, 0x195C, 0xA9D4, 0x1019, 0xD9F9,
+    0xA585, 0xD887, 0x034A, 0x4E85, 0x958A, 0x6B1B, 0x4581, 0xADB7,
+    0xC8D3, 0xC1C4, 0x85C3, 0xD0F2, 0x7521, 0x5528, 0xCACB, 0x0B78,
+    0x0E1E, 0x430F, 0x92D4, 0x142D, 0x41E9, 0x9480, 0xC2CF, 0xD2B7,
+    0x437C, 0x094F, 0x800A, 0x79A4, 0x344C, 0xC620, 0x803D, 0xC49C,
+    0x4591, 0x385B, 0x0202, 0x8604, 0xF183, 0x228F, 0x39F4, 0x588A,
+    0x12CC, 0x2482, 0x02D2, 0xFE61, 0x60EC, 0x44B5, 0x0A2E, 0xE814,
+    0x0000, 0x0000, 0x0500, 0x01C4, 0x0000, 0x0000, 0x0000, 0x01B8,
+    0x71BE, 0x00A8, 0x54AB, 0x0003, 0xA000, 0xA0C4, 0xA188, 0x522F,
+    0x0010, 0xE903, 0xE9D8, 0xEF5D, 0xFC4E, 0x01E3, 0x0618, 0x0799,
+    0x0F53, 0x11FB, 0x129B, 0x14CC, 0x1818, 0x173F, 0x15FB, 0x1614,
+    0x1512, 0x515C, 0x0001, 0x003E, 0x02BE, 0x71C6, 0x0100, 0x6067,
+    0x0002, 0x4C00, 0x0110, 0x605D, 0x0002, 0x0000, 0x9C40, 0x53BF,
+    0x0002, 0x028F, 0x051E, 0x70F4, 0x0000, 0x7071, 0x0002, 0xFF86,
+    0xFF86, 0x7076, 0x0F33, 0x549A, 0xFEAE, 0x54A0, 0x0D99, 0x53B4,
+    0x005F, 0x5058, 0x1180, 0x53E9, 0x0002, 0x1000, 0x1000, 0x54B4,
+    0x000C, 0x544E, 0x0028, 0x5034, 0x0580, 0x501A, 0x0100, 0x5010,
+    0xF880, 0x5018, 0xFDCD, 0x5351, 0x0008, 0xF000, 0x0800, 0x0000,
+    0x1000, 0xF800, 0x0266, 0xF000, 0x0333, 0x534A, 0x8000, 0x537D,
+    0x0002, 0x0000, 0x0000, 0x5361, 0x0008, 0xC000, 0x4000, 0xC000,
+    0x4000, 0xC000, 0x4000, 0xC000, 0x4000, 0x526F, 0x0008, 0x0000,
+    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0299,
+    0x0002, 0xF4F9, 0x0153, 0x5376, 0xF7F5, 0x5348, 0xC000, 0x5100,
+    0x115F, 0x7151, 0x0020, 0x0040, 0x0040, 0x0040, 0x0040, 0x0040,
+    0x0040, 0x0040, 0x0040, 0xFA41, 0xFC4C, 0x0152, 0x0453, 0x074F,
+    0x0748, 0x0442, 0x0040, 0x0040, 0xF842, 0xF749, 0xF94D, 0xFC50,
+    0xFE50, 0x0050, 0x064B, 0x0B40, 0x0B43, 0x0040, 0x0040, 0x0040,
+    0x0040, 0x0040, 0x0040, 0x71B2, 0x522C, 0x52AA, 0x0140, 0x52B3,
+    0x0002, 0x0800, 0x00A0, 0x512E, 0x2000, 0x512C, 0x0100, 0x5384,
+    0x0000, 0x539E, 0x01E0, 0x539C, 0x0999, 0x52A3, 0x0002, 0x0000,
+    0x0000, 0x52D2, 0x0080, 0x52E5, 0x0003, 0x0040, 0x0300, 0x0400,
+    0x533E, 0x6000, 0x538D, 0x0002, 0x0000, 0x8235, 0x531E, 0x0000,
+    0x546B, 0x0007, 0x0800, 0x0CCC, 0x0E66, 0x0E66, 0x0B33, 0x0B33,
+    0x1000, 0x5456, 0x00E6, 0x545A, 0x1000, 0x545F, 0x0004, 0x0700,
+    0x157C, 0x0400, 0x0FA0, 0x5468, 0x0000, 0x545C, 0x00A0, 0x6011,
+    0x0003, 0xADA0, 0xB294, 0xBA3C, 0x0A00, 0x0008, 0x0000, 0x702C,
+    0x0000, 0x0000
+};
+
+static const u16 ap1302_fw_bootdata12[ ] = {
+    0x6002, 0xFFFF
+};
+
+static const u16 ap1302_fw_bootdata13[ ] = {
+    0x1184, 0x0001
+};
+
+static const u16 ap1302_fw_bootdata14[ ] = {
+    0x2012, 0x0041
+};
+
+static const u16 ap1302_fw_bootdata15[ ] = {
+    0x1184, 0x000B
+};
+
+static const u16 ap1302_fw_bootdata16[ ] = {
+    0x1184, 0x0001
+};
+
+static const u16 ap1302_fw_bootdata17[ ] = {
+    0x2000, 0x0280
+};
+
+static const u16 ap1302_fw_bootdata18[ ] = {
+    0x2002, 0x01E0
+};
+
+static const u16 ap1302_fw_bootdata19[ ] = {
+    0x1184, 0x000B
+};
+
+static const u16 ap1302_fw_bootdata20[ ] = {
+    0x1184, 0x0001
+};
+
+static const u16 ap1302_fw_bootdata21[ ] = {
+    0x2014, 0x0005
+};
+
+static const u16 ap1302_fw_bootdata22[ ] = {
+    0x1184, 0x000B
+};
+
+static const u16 ap1302_fw_bootdata23[ ] = {
+    0x1184, 0x0001
+};
+
+static const u16 ap1302_fw_bootdata24[ ] = {
+    0x2030, 0x0012
+};
+
+static const u16 ap1302_fw_bootdata25[ ] = {
+    0x1184, 0x000B
+};
+
+#endif
diff -Naurw ./drivers/media/i2c/Kconfig ../kernel-source/drivers/media/i2c/Kconfig
--- ./drivers/media/i2c/Kconfig	2020-02-13 14:02:45.415533267 +0100
+++ ../kernel-source/drivers/media/i2c/Kconfig	2020-02-13 14:33:58.597405404 +0100
@@ -886,6 +886,17 @@
 	  To compile this driver as a module, choose M here: the
 	  module will be called mt9v111.
 
+config VIDEO_AP1302
+        tristate "OnSemi AP1302 ISP + sensor support"
+        depends on OF
+        depends on GPIOLIB && VIDEO_V4L2 && I2C && VIDEO_V4L2_SUBDEV_API
+        depends on MEDIA_CAMERA_SUPPORT
+        select V4L2_FWNODE
+        ---help---
+          This is a Video4Linux2 sensor driver for one OnSemi image
+          sensor connected to the OnSemi AP1302 ISP through MIPI CSI-2
+          interface.
+
 config VIDEO_SR030PC30
 	tristate "Siliconfile SR030PC30 sensor support"
 	depends on I2C && VIDEO_V4L2
diff -Naurw ./drivers/media/i2c/Makefile ../kernel-source/drivers/media/i2c/Makefile
--- ./drivers/media/i2c/Makefile	2020-02-13 14:02:45.415533267 +0100
+++ ../kernel-source/drivers/media/i2c/Makefile	2020-02-13 15:59:51.980431328 +0100
@@ -88,6 +88,7 @@
 obj-$(CONFIG_VIDEO_MT9V011) += mt9v011.o
 obj-$(CONFIG_VIDEO_MT9V032) += mt9v032.o
 obj-$(CONFIG_VIDEO_MT9V111) += mt9v111.o
+obj-$(CONFIG_VIDEO_AP1302) += ap1302.o
 obj-$(CONFIG_VIDEO_SR030PC30)	+= sr030pc30.o
 obj-$(CONFIG_VIDEO_NOON010PC30)	+= noon010pc30.o
 obj-$(CONFIG_VIDEO_RJ54N1)	+= rj54n1cb0c.o
